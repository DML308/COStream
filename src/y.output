Terminals unused in grammar

   UPLUS
   UMINUS
   INDIR
   ADDRESS
   POSTINC
   POSTDEC
   PREINC
   PREDEC
   WIDECHARconstant


State 544 conflicts: 1 shift/reduce
State 645 conflicts: 1 shift/reduce
State 714 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog.start $end

    1 prog.start: translation.unit

    2 stream.type.specifier: STREAM '<' stream.declaration.list '>'

    3 stream.declaration.list: type.specifier paren.identifier.declarator
    4                        | type.specifier paren.identifier.declarator postfixing.abstract.declarator
    5                        | stream.declaration.list ',' type.specifier paren.identifier.declarator
    6                        | stream.declaration.list ',' type.specifier paren.identifier.declarator postfixing.abstract.declarator

    7 $@1: /* empty */

    8 composite.definition: composite.head $@1 composite.body.no.new.scope

    9 composite.head: COMPOSITE IDENTIFIER '(' composite.head.inout ')'

   10 composite.head.inout: /* empty */
   11                     | INPUT composite.head.inout.member.list ',' OUTPUT composite.head.inout.member.list
   12                     | INPUT composite.head.inout.member.list
   13                     | OUTPUT composite.head.inout.member.list
   14                     | OUTPUT composite.head.inout.member.list ',' INPUT composite.head.inout.member.list

   15 composite.head.inout.member.list: composite.head.inout.member
   16                                 | composite.head.inout.member.list ',' composite.head.inout.member

   17 composite.head.inout.member: stream.type.specifier IDENTIFIER

   18 composite.body.no.new.scope: '{' composite.body.param.opt composite.body.statement.list '}'
   19                            | '{' composite.body.param.opt declaration.list composite.body.statement.list '}'

   20 composite.body.param.opt: /* empty */
   21                         | PARAM parameter.list ';'

   22 composite.body.statement.list: costream.composite.statement
   23                              | composite.body.statement.list costream.composite.statement

   24 composite.body.operator: operator.add
   25                        | operator.file.writer

   26 operator.file.writer: FILEWRITER '(' IDENTIFIER ')' operator.arguments ';'

   27 operator.add: ADD operator.default.call
   28             | ADD operator.pipeline
   29             | ADD operator.splitjoin

   30 operator.pipeline: PIPELINE lblock splitjoinPipeline.statement.list rblock
   31                  | PIPELINE lblock declaration.list splitjoinPipeline.statement.list rblock

   32 operator.splitjoin: SPLITJOIN lblock split.statement splitjoinPipeline.statement.list join.statement rblock
   33                   | SPLITJOIN lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   34                   | SPLITJOIN lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

   35 split.statement: SPLIT duplicate.statement
   36                | SPLIT roundrobin.statement

   37 splitjoinPipeline.statement.list: statement
   38                                 | operator.add
   39                                 | splitjoinPipeline.statement.list statement
   40                                 | splitjoinPipeline.statement.list operator.add

   41 join.statement: JOIN roundrobin.statement

   42 roundrobin.statement: ROUNDROBIN '(' ')' ';'
   43                     | ROUNDROBIN '(' argument.expression.list ')' ';'

   44 duplicate.statement: DUPLICATE '(' ')' ';'
   45                    | DUPLICATE '(' assignment.expression ')' ';'

   46 operator.default.call: IDENTIFIER operator.arguments ';'

   47 operator.arguments: '(' argument.expression.list ')'
   48                   | '(' ')'

   49 operator.selfdefine.body: lblock operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock
   50                         | lblock declaration.list operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock

   51 operator.selfdefine.body.init.opt: /* empty */
   52                                  | INIT compound.statement

   53 operator.selfdefine.body.work: WORK compound.statement

   54 operator.selfdefine.body.window.list.opt: /* empty */
   55                                         | WINDOW '{' operator.selfdefine.window.list '}'

   56 operator.selfdefine.window.list: operator.selfdefine.window
   57                                | operator.selfdefine.window.list operator.selfdefine.window

   58 operator.selfdefine.window: IDENTIFIER window.type ';'

   59 window.type: SLIDING '(' ')'
   60            | TUMBLING '(' ')'
   61            | SLIDING '(' expression ')'
   62            | TUMBLING '(' expression ')'
   63            | UNCERTAINTY '(' ')'

   64 primary.expression: IDENTIFIER
   65                   | constant
   66                   | string.literal.list
   67                   | '(' expression ')'
   68                   | '(' lblock statement.list rblock ')'
   69                   | '(' lblock declaration.list statement.list rblock ')'

   70 postfix.expression: primary.expression
   71                   | postfix.expression '[' expression ']'
   72                   | postfix.expression '(' ')'
   73                   | postfix.expression '(' argument.expression.list ')'
   74                   | postfix.expression '(' ')' operator.selfdefine.body
   75                   | postfix.expression '(' argument.expression.list ')' operator.selfdefine.body
   76                   | postfix.expression '(' ')' operator.arguments
   77                   | postfix.expression '(' argument.expression.list ')' operator.arguments
   78                   | SPLITJOIN '(' IDENTIFIER ')' lblock split.statement splitjoinPipeline.statement.list join.statement rblock
   79                   | SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   80                   | SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock
   81                   | PIPELINE '(' IDENTIFIER ')' lblock splitjoinPipeline.statement.list rblock
   82                   | PIPELINE '(' IDENTIFIER ')' lblock declaration.list splitjoinPipeline.statement.list rblock
   83                   | FILEREADER '(' ')' operator.arguments
   84                   | postfix.expression '.' IDENTIFIER
   85                   | postfix.expression ARROW IDENTIFIER
   86                   | postfix.expression ICR
   87                   | postfix.expression DECR
   88                   | postfix.expression '.' TYPEDEFname
   89                   | postfix.expression ARROW TYPEDEFname

   90 argument.expression.list: assignment.expression
   91                         | argument.expression.list ',' assignment.expression

   92 unary.expression: postfix.expression
   93                 | ICR unary.expression
   94                 | DECR unary.expression
   95                 | unary.operator cast.expression
   96                 | SIZEOF unary.expression
   97                 | SIZEOF '(' type.name ')'

   98 unary.operator: '&'
   99               | '*'
  100               | '+'
  101               | '-'
  102               | '~'
  103               | '!'

  104 cast.expression: unary.expression
  105                | '(' type.name ')' cast.expression

  106 multiplicative.expression: cast.expression
  107                          | multiplicative.expression '*' cast.expression
  108                          | multiplicative.expression '/' cast.expression
  109                          | multiplicative.expression '%' cast.expression

  110 additive.expression: multiplicative.expression
  111                    | additive.expression '+' multiplicative.expression
  112                    | additive.expression '-' multiplicative.expression

  113 shift.expression: additive.expression
  114                 | shift.expression LS additive.expression
  115                 | shift.expression RS additive.expression

  116 relational.expression: shift.expression
  117                      | relational.expression '<' shift.expression
  118                      | relational.expression '>' shift.expression
  119                      | relational.expression LE shift.expression
  120                      | relational.expression GE shift.expression

  121 equality.expression: relational.expression
  122                    | equality.expression EQ relational.expression
  123                    | equality.expression NE relational.expression

  124 AND.expression: equality.expression
  125               | AND.expression '&' equality.expression

  126 exclusive.OR.expression: AND.expression
  127                        | exclusive.OR.expression '^' AND.expression

  128 inclusive.OR.expression: exclusive.OR.expression
  129                        | inclusive.OR.expression '|' exclusive.OR.expression

  130 logical.AND.expression: inclusive.OR.expression
  131                       | logical.AND.expression ANDAND inclusive.OR.expression

  132 logical.OR.expression: logical.AND.expression
  133                      | logical.OR.expression OROR logical.AND.expression

  134 conditional.expression: logical.OR.expression
  135                       | logical.OR.expression '?' expression ':' conditional.expression

  136 assignment.expression: conditional.expression
  137                      | unary.expression assignment.operator assignment.expression

  138 assignment.operator: '='
  139                    | MULTassign
  140                    | DIVassign
  141                    | MODassign
  142                    | PLUSassign
  143                    | MINUSassign
  144                    | LSassign
  145                    | RSassign
  146                    | ANDassign
  147                    | ERassign
  148                    | ORassign

  149 expression: assignment.expression
  150           | expression ',' assignment.expression

  151 constant.expression: conditional.expression

  152 expression.opt: /* empty */
  153               | expression

  154 declaration: declaring.list ';'
  155            | default.declaring.list ';'
  156            | sue.declaration.specifier ';'
  157            | sue.type.specifier ';'

  158 $@2: /* empty */

  159 $@3: /* empty */

  160 declaring.list: declaration.specifier declarator $@2 attributes.opt $@3 initializer.opt

  161 $@4: /* empty */

  162 $@5: /* empty */

  163 declaring.list: type.specifier declarator $@4 attributes.opt $@5 initializer.opt

  164 @6: /* empty */

  165 $@7: /* empty */

  166 declaring.list: declaring.list ',' declarator @6 attributes.opt $@7 initializer.opt

  167 $@8: /* empty */

  168 declaring.list: declaration.specifier error $@8 attributes.opt initializer.opt

  169 $@9: /* empty */

  170 declaring.list: type.specifier error $@9 attributes.opt initializer.opt
  171               | declaring.list ',' error

  172 $@10: /* empty */

  173 $@11: /* empty */

  174 default.declaring.list: declaration.qualifier.list identifier.declarator $@10 attributes.opt $@11 initializer.opt
  175                       | stream.type.specifier identifier.declarator

  176 $@12: /* empty */

  177 $@13: /* empty */

  178 default.declaring.list: type.qualifier.list identifier.declarator $@12 attributes.opt $@13 initializer.opt

  179 @14: /* empty */

  180 $@15: /* empty */

  181 default.declaring.list: default.declaring.list ',' identifier.declarator @14 attributes.opt $@15 initializer.opt

  182 $@16: /* empty */

  183 default.declaring.list: declaration.qualifier.list error $@16 attributes.opt initializer.opt

  184 $@17: /* empty */

  185 default.declaring.list: type.qualifier.list error $@17 attributes.opt initializer.opt
  186                       | default.declaring.list ',' error

  187 declaration.specifier: basic.declaration.specifier
  188                      | sue.declaration.specifier
  189                      | typedef.declaration.specifier

  190 basic.declaration.specifier: basic.type.specifier storage.class
  191                            | declaration.qualifier.list basic.type.name
  192                            | basic.declaration.specifier declaration.qualifier
  193                            | basic.declaration.specifier basic.type.name

  194 sue.declaration.specifier: sue.type.specifier storage.class
  195                          | declaration.qualifier.list elaborated.type.name
  196                          | sue.declaration.specifier declaration.qualifier

  197 typedef.declaration.specifier: typedef.type.specifier storage.class
  198                              | declaration.qualifier.list TYPEDEFname
  199                              | typedef.declaration.specifier declaration.qualifier

  200 declaration.qualifier.list: storage.class
  201                           | type.qualifier.list storage.class
  202                           | declaration.qualifier.list declaration.qualifier

  203 declaration.qualifier: type.qualifier
  204                      | storage.class

  205 type.specifier: basic.type.specifier
  206               | sue.type.specifier
  207               | typedef.type.specifier

  208 basic.type.specifier: basic.type.name
  209                     | type.qualifier.list basic.type.name
  210                     | basic.type.specifier type.qualifier
  211                     | basic.type.specifier basic.type.name

  212 sue.type.specifier: elaborated.type.name
  213                   | type.qualifier.list elaborated.type.name
  214                   | sue.type.specifier type.qualifier

  215 typedef.type.specifier: TYPEDEFname
  216                       | type.qualifier.list TYPEDEFname
  217                       | typedef.type.specifier type.qualifier

  218 type.qualifier.list: type.qualifier
  219                    | type.qualifier.list type.qualifier

  220 pointer.type.qualifier.list: pointer.type.qualifier
  221                            | pointer.type.qualifier.list pointer.type.qualifier

  222 elaborated.type.name: struct.or.union.specifier
  223                     | enum.specifier

  224 declarator: paren.typedef.declarator
  225           | parameter.typedef.declarator
  226           | identifier.declarator
  227           | old.function.declarator

  228 paren.typedef.declarator: paren.postfix.typedef.declarator
  229                         | '*' paren.typedef.declarator
  230                         | '*' '(' simple.paren.typedef.declarator ')'
  231                         | '*' pointer.type.qualifier.list '(' simple.paren.typedef.declarator ')'
  232                         | '*' pointer.type.qualifier.list paren.typedef.declarator

  233 paren.postfix.typedef.declarator: '(' paren.typedef.declarator ')'
  234                                 | '(' simple.paren.typedef.declarator postfixing.abstract.declarator ')'
  235                                 | '(' paren.typedef.declarator ')' postfixing.abstract.declarator

  236 simple.paren.typedef.declarator: TYPEDEFname
  237                                | '(' simple.paren.typedef.declarator ')'

  238 parameter.typedef.declarator: TYPEDEFname
  239                             | TYPEDEFname postfixing.abstract.declarator
  240                             | clean.typedef.declarator

  241 clean.typedef.declarator: clean.postfix.typedef.declarator
  242                         | '*' parameter.typedef.declarator
  243                         | '*' pointer.type.qualifier.list parameter.typedef.declarator

  244 clean.postfix.typedef.declarator: '(' clean.typedef.declarator ')'
  245                                 | '(' clean.typedef.declarator ')' postfixing.abstract.declarator

  246 abstract.declarator: unary.abstract.declarator
  247                    | postfix.abstract.declarator
  248                    | postfixing.abstract.declarator

  249 unary.abstract.declarator: '*'
  250                          | '*' pointer.type.qualifier.list
  251                          | '*' abstract.declarator
  252                          | '*' pointer.type.qualifier.list abstract.declarator

  253 postfix.abstract.declarator: '(' unary.abstract.declarator ')'
  254                            | '(' postfix.abstract.declarator ')'
  255                            | '(' postfixing.abstract.declarator ')'
  256                            | '(' unary.abstract.declarator ')' postfixing.abstract.declarator

  257 postfixing.abstract.declarator: array.abstract.declarator
  258                               | '(' ')'
  259                               | '(' parameter.type.list ')'

  260 identifier.declarator: unary.identifier.declarator
  261                      | paren.identifier.declarator

  262 unary.identifier.declarator: postfix.identifier.declarator
  263                            | '*' identifier.declarator
  264                            | '*' pointer.type.qualifier.list identifier.declarator

  265 postfix.identifier.declarator: paren.identifier.declarator postfixing.abstract.declarator
  266                              | '(' unary.identifier.declarator ')'
  267                              | '(' unary.identifier.declarator ')' postfixing.abstract.declarator

  268 paren.identifier.declarator: IDENTIFIER
  269                            | '(' paren.identifier.declarator ')'

  270 old.function.declarator: postfix.old.function.declarator
  271                        | '*' old.function.declarator
  272                        | '*' pointer.type.qualifier.list old.function.declarator

  273 postfix.old.function.declarator: paren.identifier.declarator '(' identifier.list ')'
  274                                | '(' old.function.declarator ')'
  275                                | '(' old.function.declarator ')' postfixing.abstract.declarator

  276 identifier.list: IDENTIFIER
  277                | identifier.list ',' IDENTIFIER

  278 identifier.or.typedef.name: IDENTIFIER
  279                           | TYPEDEFname

  280 type.name: type.specifier
  281          | type.specifier abstract.declarator
  282          | type.qualifier.list
  283          | type.qualifier.list abstract.declarator

  284 attributes.opt: /* empty */
  285               | attributes

  286 attributes: attribute
  287           | attributes attribute

  288 attribute: ATTRIBUTE '(' '(' attribute.list ')' ')'

  289 attribute.list: attrib
  290               | attribute.list ',' attrib

  291 attrib: /* empty */
  292       | any.word
  293       | any.word '(' expression ')'

  294 any.word: IDENTIFIER
  295         | TYPEDEFname
  296         | CONST

  297 initializer.opt: /* empty */
  298                | '=' initializer

  299 initializer: '{' initializer.list '}'
  300            | '{' initializer.list ',' '}'
  301            | assignment.expression

  302 initializer.list: initializer
  303                 | initializer.list ',' initializer

  304 parameter.type.list: parameter.list
  305                    | parameter.list ',' ELLIPSIS
  306                    | ELLIPSIS

  307 parameter.list: parameter.declaration
  308               | parameter.list ',' parameter.declaration
  309               | parameter.declaration '=' initializer
  310               | parameter.list ',' error

  311 parameter.declaration: declaration.specifier
  312                      | declaration.specifier abstract.declarator
  313                      | declaration.specifier identifier.declarator
  314                      | declaration.specifier parameter.typedef.declarator
  315                      | declaration.qualifier.list
  316                      | declaration.qualifier.list abstract.declarator
  317                      | declaration.qualifier.list identifier.declarator
  318                      | type.specifier
  319                      | type.specifier abstract.declarator
  320                      | type.specifier identifier.declarator
  321                      | type.specifier parameter.typedef.declarator
  322                      | type.qualifier.list
  323                      | type.qualifier.list abstract.declarator
  324                      | type.qualifier.list identifier.declarator

  325 array.abstract.declarator: '[' ']'
  326                          | '[' constant.expression ']'
  327                          | array.abstract.declarator '[' constant.expression ']'
  328                          | array.abstract.declarator '[' ']'

  329 struct.or.union.specifier: struct.or.union '{' struct.declaration.list '}'
  330                          | struct.or.union identifier.or.typedef.name '{' struct.declaration.list '}'
  331                          | struct.or.union identifier.or.typedef.name
  332                          | struct.or.union '{' '}'
  333                          | struct.or.union identifier.or.typedef.name '{' '}'

  334 struct.or.union: STRUCT
  335                | UNION

  336 struct.declaration.list: struct.declaration
  337                        | struct.declaration.list struct.declaration

  338 struct.declaration: struct.declaring.list ';'
  339                   | struct.default.declaring.list ';'

  340 struct.default.declaring.list: type.qualifier.list struct.identifier.declarator
  341                              | struct.default.declaring.list ',' struct.identifier.declarator

  342 struct.declaring.list: type.specifier struct.declarator
  343                      | struct.declaring.list ',' struct.declarator

  344 struct.declarator: declarator bit.field.size.opt attributes.opt
  345                  | bit.field.size attributes.opt

  346 struct.identifier.declarator: identifier.declarator bit.field.size.opt attributes.opt
  347                             | bit.field.size attributes.opt

  348 bit.field.size.opt: /* empty */
  349                   | bit.field.size

  350 bit.field.size: ':' constant.expression

  351 enum.specifier: ENUM '{' enumerator.list comma.opt '}'
  352               | ENUM identifier.or.typedef.name '{' enumerator.list comma.opt '}'
  353               | ENUM identifier.or.typedef.name

  354 enumerator.list: identifier.or.typedef.name enumerator.value.opt
  355                | enumerator.list ',' identifier.or.typedef.name enumerator.value.opt

  356 enumerator.value.opt: /* empty */
  357                     | '=' constant.expression

  358 comma.opt: /* empty */
  359          | ','

  360 costream.composite.statement: composite.body.operator
  361                             | statement

  362 statement: labeled.statement
  363          | compound.statement
  364          | expression.statement
  365          | selection.statement
  366          | iteration.statement
  367          | jump.statement
  368          | error ';'

  369 @18: /* empty */

  370 labeled.statement: IDENTIFIER ':' @18 statement
  371                  | CASE constant.expression ':' statement
  372                  | DEFAULT ':' statement
  373                  | TYPEDEFname ':' statement

  374 compound.statement: lblock rblock
  375                   | lblock declaration.list rblock
  376                   | lblock composite.body.statement.list rblock
  377                   | lblock declaration.list composite.body.statement.list rblock

  378 lblock: '{'

  379 rblock: '}'

  380 compound.statement.no.new.scope: '{' '}'
  381                                | '{' declaration.list '}'
  382                                | '{' statement.list '}'
  383                                | '{' declaration.list statement.list '}'

  384 declaration.list: declaration
  385                 | declaration.list declaration

  386 statement.list: statement
  387               | statement.list statement

  388 expression.statement: expression.opt ';'

  389 selection.statement: IF '(' expression ')' costream.composite.statement
  390                    | IF '(' expression ')' costream.composite.statement ELSE costream.composite.statement

  391 $@19: /* empty */

  392 selection.statement: SWITCH $@19 '(' expression ')' statement

  393 $@20: /* empty */

  394 iteration.statement: WHILE $@20 '(' expression ')' statement

  395 $@21: /* empty */

  396 iteration.statement: DO $@21 statement WHILE '(' expression ')' ';'

  397 $@22: /* empty */

  398 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' expression.opt ')' $@22 costream.composite.statement

  399 $@23: /* empty */

  400 iteration.statement: FOR '(' error ';' expression.opt ';' expression.opt ')' $@23 costream.composite.statement

  401 $@24: /* empty */

  402 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' error ')' $@24 costream.composite.statement

  403 $@25: /* empty */

  404 iteration.statement: FOR '(' expression.opt ';' error ';' expression.opt ')' $@25 costream.composite.statement

  405 $@26: /* empty */

  406 iteration.statement: FOR '(' error ')' $@26 costream.composite.statement

  407 jump.statement: GOTO IDENTIFIER ';'
  408               | CONTINUE ';'
  409               | BREAK ';'
  410               | RETURN expression.opt ';'
  411               | GOTO TYPEDEFname ';'

  412 translation.unit: external.definition
  413                 | translation.unit external.definition

  414 external.definition: declaration
  415                    | function.definition
  416                    | composite.definition

  417 $@27: /* empty */

  418 function.definition: identifier.declarator $@27 compound.statement.no.new.scope
  419                    | identifier.declarator BOGUS

  420 $@28: /* empty */

  421 function.definition: declaration.specifier identifier.declarator $@28 compound.statement.no.new.scope

  422 $@29: /* empty */

  423 function.definition: type.specifier identifier.declarator $@29 compound.statement.no.new.scope

  424 $@30: /* empty */

  425 function.definition: declaration.qualifier.list identifier.declarator $@30 compound.statement.no.new.scope

  426 $@31: /* empty */

  427 function.definition: type.qualifier.list identifier.declarator $@31 compound.statement.no.new.scope

  428 $@32: /* empty */

  429 function.definition: old.function.declarator $@32 compound.statement.no.new.scope

  430 $@33: /* empty */

  431 function.definition: declaration.specifier old.function.declarator $@33 compound.statement.no.new.scope

  432 $@34: /* empty */

  433 function.definition: type.specifier old.function.declarator $@34 compound.statement.no.new.scope

  434 $@35: /* empty */

  435 function.definition: declaration.qualifier.list old.function.declarator $@35 compound.statement.no.new.scope

  436 $@36: /* empty */

  437 function.definition: type.qualifier.list old.function.declarator $@36 compound.statement.no.new.scope

  438 $@37: /* empty */

  439 function.definition: old.function.declarator old.function.declaration.list $@37 compound.statement.no.new.scope

  440 $@38: /* empty */

  441 function.definition: declaration.specifier old.function.declarator old.function.declaration.list $@38 compound.statement.no.new.scope

  442 $@39: /* empty */

  443 function.definition: type.specifier old.function.declarator old.function.declaration.list $@39 compound.statement.no.new.scope

  444 $@40: /* empty */

  445 function.definition: declaration.qualifier.list old.function.declarator old.function.declaration.list $@40 compound.statement.no.new.scope

  446 $@41: /* empty */

  447 function.definition: type.qualifier.list old.function.declarator old.function.declaration.list $@41 compound.statement.no.new.scope

  448 $@42: /* empty */

  449 old.function.declaration.list: $@42 declaration.list

  450 constant: FLOATINGconstant
  451         | INTEGERconstant
  452         | OCTALconstant
  453         | HEXconstant
  454         | CHARACTERconstant

  455 string.literal.list: STRINGliteral
  456                    | string.literal.list STRINGliteral

  457 type.qualifier: CONST
  458               | VOLATILE
  459               | INLINE

  460 pointer.type.qualifier: CONST
  461                       | VOLATILE

  462 storage.class: TYPEDEF
  463              | EXTERN
  464              | STATIC
  465              | AUTO
  466              | REGISTER

  467 basic.type.name: VOID
  468                | CHAR
  469                | INT
  470                | FLOAT
  471                | DOUBLE
  472                | SIGNED
  473                | UNSIGNED
  474                | SHORT
  475                | LONG


Terminals, with rules where they appear

$end (0) 0
'!' (33) 103
'%' (37) 109
'&' (38) 98 125
'(' (40) 9 26 42 43 44 45 47 48 59 60 61 62 63 67 68 69 72 73 74 75
    76 77 78 79 80 81 82 83 97 105 230 231 233 234 235 237 244 245
    253 254 255 256 258 259 266 267 269 273 274 275 288 293 389 390
    392 394 396 398 400 402 404 406
')' (41) 9 26 42 43 44 45 47 48 59 60 61 62 63 67 68 69 72 73 74 75
    76 77 78 79 80 81 82 83 97 105 230 231 233 234 235 237 244 245
    253 254 255 256 258 259 266 267 269 273 274 275 288 293 389 390
    392 394 396 398 400 402 404 406
'*' (42) 99 107 229 230 231 232 242 243 249 250 251 252 263 264 271
    272
'+' (43) 100 111
',' (44) 5 6 11 14 16 91 150 166 171 181 186 277 290 300 303 305 308
    310 341 343 355 359
'-' (45) 101 112
'.' (46) 84 88
'/' (47) 108
':' (58) 135 350 370 371 372 373
';' (59) 21 26 42 43 44 45 46 58 154 155 156 157 338 339 368 388 396
    398 400 402 404 407 408 409 410 411
'<' (60) 2 117
'=' (61) 138 298 309 357
'>' (62) 2 118
'?' (63) 135
'[' (91) 71 325 326 327 328
']' (93) 71 325 326 327 328
'^' (94) 127
'{' (123) 18 19 55 299 300 329 330 332 333 351 352 378 380 381 382
    383
'|' (124) 129
'}' (125) 18 19 55 299 300 329 330 332 333 351 352 379 380 381 382
    383
'~' (126) 102
error (256) 168 170 171 183 185 186 310 368 400 402 404 406
AUTO (258) 465
DOUBLE (259) 471
INT (260) 469
STRUCT (261) 334
BREAK (262) 409
ELSE (263) 390
LONG (264) 475
SWITCH (265) 392
CASE (266) 371
ENUM (267) 351 352 353
REGISTER (268) 466
TYPEDEF (269) 462
CHAR (270) 468
EXTERN (271) 463
RETURN (272) 410
UNION (273) 335
CONST (274) 296 457 460
FLOAT (275) 470
SHORT (276) 474
UNSIGNED (277) 473
CONTINUE (278) 408
FOR (279) 398 400 402 404 406
SIGNED (280) 472
VOID (281) 467
DEFAULT (282) 372
GOTO (283) 407 411
SIZEOF (284) 96 97
VOLATILE (285) 458 461
DO (286) 396
IF (287) 389 390
STATIC (288) 464
WHILE (289) 394 396
COMPOSITE (290) 9
INPUT (291) 11 12 14
OUTPUT (292) 11 13 14
STREAM (293) 2
PARAM (294) 21
ADD (295) 27 28 29
INIT (296) 52
WORK (297) 53
WINDOW (298) 55
TUMBLING (299) 60 62
SLIDING (300) 59 61
SPLITJOIN (301) 32 33 34 78 79 80
SPLIT (302) 35 36
JOIN (303) 41
DUPLICATE (304) 44 45
ROUNDROBIN (305) 42 43
PIPELINE (306) 30 31 81 82
FILEREADER (307) 83
FILEWRITER (308) 26
UNCERTAINTY (309) 63
UPLUS (310)
UMINUS (311)
INDIR (312)
ADDRESS (313)
POSTINC (314)
POSTDEC (315)
PREINC (316)
PREDEC (317)
BOGUS (318) 419
IDENTIFIER (319) 9 17 26 46 58 64 78 79 80 81 82 84 85 268 276 277
    278 294 370 407
STRINGliteral (320) 455 456
FLOATINGconstant (321) 450
INTEGERconstant (322) 451
OCTALconstant (323) 452
HEXconstant (324) 453
WIDECHARconstant (325)
CHARACTERconstant (326) 454
TYPEDEFname (327) 88 89 198 215 216 236 238 239 279 295 373 411
ARROW (328) 85 89
ICR (329) 86 93
DECR (330) 87 94
LS (331) 114
RS (332) 115
LE (333) 119
GE (334) 120
EQ (335) 122
NE (336) 123
ANDAND (337) 131
OROR (338) 133
ELLIPSIS (339) 305 306
MULTassign (340) 139
DIVassign (341) 140
MODassign (342) 141
PLUSassign (343) 142
MINUSassign (344) 143
LSassign (345) 144
RSassign (346) 145
ANDassign (347) 146
ERassign (348) 147
ORassign (349) 148
INLINE (350) 459
ATTRIBUTE (351) 288


Nonterminals, with rules where they appear

$accept (121)
    on left: 0
prog.start (122)
    on left: 1, on right: 0
stream.type.specifier (123)
    on left: 2, on right: 17 175
stream.declaration.list (124)
    on left: 3 4 5 6, on right: 2 5 6
composite.definition (125)
    on left: 8, on right: 416
$@1 (126)
    on left: 7, on right: 8
composite.head (127)
    on left: 9, on right: 8
composite.head.inout (128)
    on left: 10 11 12 13 14, on right: 9
composite.head.inout.member.list (129)
    on left: 15 16, on right: 11 12 13 14 16
composite.head.inout.member (130)
    on left: 17, on right: 15 16
composite.body.no.new.scope (131)
    on left: 18 19, on right: 8
composite.body.param.opt (132)
    on left: 20 21, on right: 18 19
composite.body.statement.list (133)
    on left: 22 23, on right: 18 19 23 376 377
composite.body.operator (134)
    on left: 24 25, on right: 360
operator.file.writer (135)
    on left: 26, on right: 25
operator.add (136)
    on left: 27 28 29, on right: 24 38 40
operator.pipeline (137)
    on left: 30 31, on right: 28
operator.splitjoin (138)
    on left: 32 33 34, on right: 29
split.statement (139)
    on left: 35 36, on right: 32 33 34 78 79 80
splitjoinPipeline.statement.list (140)
    on left: 37 38 39 40, on right: 30 31 32 33 34 39 40 78 79 80 81
    82
join.statement (141)
    on left: 41, on right: 32 33 34 78 79 80
roundrobin.statement (142)
    on left: 42 43, on right: 36 41
duplicate.statement (143)
    on left: 44 45, on right: 35
operator.default.call (144)
    on left: 46, on right: 27
operator.arguments (145)
    on left: 47 48, on right: 26 46 76 77 83
operator.selfdefine.body (146)
    on left: 49 50, on right: 74 75
operator.selfdefine.body.init.opt (147)
    on left: 51 52, on right: 49 50
operator.selfdefine.body.work (148)
    on left: 53, on right: 49 50
operator.selfdefine.body.window.list.opt (149)
    on left: 54 55, on right: 49 50
operator.selfdefine.window.list (150)
    on left: 56 57, on right: 55 57
operator.selfdefine.window (151)
    on left: 58, on right: 56 57
window.type (152)
    on left: 59 60 61 62 63, on right: 58
primary.expression (153)
    on left: 64 65 66 67 68 69, on right: 70
postfix.expression (154)
    on left: 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87
    88 89, on right: 71 72 73 74 75 76 77 84 85 86 87 88 89 92
argument.expression.list (155)
    on left: 90 91, on right: 43 47 73 75 77 91
unary.expression (156)
    on left: 92 93 94 95 96 97, on right: 93 94 96 104 137
unary.operator (157)
    on left: 98 99 100 101 102 103, on right: 95
cast.expression (158)
    on left: 104 105, on right: 95 105 106 107 108 109
multiplicative.expression (159)
    on left: 106 107 108 109, on right: 107 108 109 110 111 112
additive.expression (160)
    on left: 110 111 112, on right: 111 112 113 114 115
shift.expression (161)
    on left: 113 114 115, on right: 114 115 116 117 118 119 120
relational.expression (162)
    on left: 116 117 118 119 120, on right: 117 118 119 120 121 122
    123
equality.expression (163)
    on left: 121 122 123, on right: 122 123 124 125
AND.expression (164)
    on left: 124 125, on right: 125 126 127
exclusive.OR.expression (165)
    on left: 126 127, on right: 127 128 129
inclusive.OR.expression (166)
    on left: 128 129, on right: 129 130 131
logical.AND.expression (167)
    on left: 130 131, on right: 131 132 133
logical.OR.expression (168)
    on left: 132 133, on right: 133 134 135
conditional.expression (169)
    on left: 134 135, on right: 135 136 151
assignment.expression (170)
    on left: 136 137, on right: 45 90 91 137 149 150 301
assignment.operator (171)
    on left: 138 139 140 141 142 143 144 145 146 147 148, on right:
    137
expression (172)
    on left: 149 150, on right: 61 62 67 71 135 150 153 293 389 390
    392 394 396
constant.expression (173)
    on left: 151, on right: 326 327 350 357 371
expression.opt (174)
    on left: 152 153, on right: 388 398 400 402 404 410
declaration (175)
    on left: 154 155 156 157, on right: 384 385 414
declaring.list (176)
    on left: 160 163 166 168 170 171, on right: 154 166 171
$@2 (177)
    on left: 158, on right: 160
$@3 (178)
    on left: 159, on right: 160
$@4 (179)
    on left: 161, on right: 163
$@5 (180)
    on left: 162, on right: 163
@6 (181)
    on left: 164, on right: 166
$@7 (182)
    on left: 165, on right: 166
$@8 (183)
    on left: 167, on right: 168
$@9 (184)
    on left: 169, on right: 170
default.declaring.list (185)
    on left: 174 175 178 181 183 185 186, on right: 155 181 186
$@10 (186)
    on left: 172, on right: 174
$@11 (187)
    on left: 173, on right: 174
$@12 (188)
    on left: 176, on right: 178
$@13 (189)
    on left: 177, on right: 178
@14 (190)
    on left: 179, on right: 181
$@15 (191)
    on left: 180, on right: 181
$@16 (192)
    on left: 182, on right: 183
$@17 (193)
    on left: 184, on right: 185
declaration.specifier (194)
    on left: 187 188 189, on right: 160 168 311 312 313 314 421 431
    441
basic.declaration.specifier (195)
    on left: 190 191 192 193, on right: 187 192 193
sue.declaration.specifier (196)
    on left: 194 195 196, on right: 156 188 196
typedef.declaration.specifier (197)
    on left: 197 198 199, on right: 189 199
declaration.qualifier.list (198)
    on left: 200 201 202, on right: 174 183 191 195 198 202 315 316
    317 425 435 445
declaration.qualifier (199)
    on left: 203 204, on right: 192 196 199 202
type.specifier (200)
    on left: 205 206 207, on right: 3 4 5 6 163 170 280 281 318 319
    320 321 342 423 433 443
basic.type.specifier (201)
    on left: 208 209 210 211, on right: 190 205 210 211
sue.type.specifier (202)
    on left: 212 213 214, on right: 157 194 206 214
typedef.type.specifier (203)
    on left: 215 216 217, on right: 197 207 217
type.qualifier.list (204)
    on left: 218 219, on right: 178 185 201 209 213 216 219 282 283
    322 323 324 340 427 437 447
pointer.type.qualifier.list (205)
    on left: 220 221, on right: 221 231 232 243 250 252 264 272
elaborated.type.name (206)
    on left: 222 223, on right: 195 212 213
declarator (207)
    on left: 224 225 226 227, on right: 160 163 166 344
paren.typedef.declarator (208)
    on left: 228 229 230 231 232, on right: 224 229 232 233 235
paren.postfix.typedef.declarator (209)
    on left: 233 234 235, on right: 228
simple.paren.typedef.declarator (210)
    on left: 236 237, on right: 230 231 234 237
parameter.typedef.declarator (211)
    on left: 238 239 240, on right: 225 242 243 314 321
clean.typedef.declarator (212)
    on left: 241 242 243, on right: 240 244 245
clean.postfix.typedef.declarator (213)
    on left: 244 245, on right: 241
abstract.declarator (214)
    on left: 246 247 248, on right: 251 252 281 283 312 316 319 323
unary.abstract.declarator (215)
    on left: 249 250 251 252, on right: 246 253 256
postfix.abstract.declarator (216)
    on left: 253 254 255 256, on right: 247 254
postfixing.abstract.declarator (217)
    on left: 257 258 259, on right: 4 6 234 235 239 245 248 255 256
    265 267 275
identifier.declarator (218)
    on left: 260 261, on right: 174 175 178 181 226 263 264 313 317
    320 324 346 418 419 421 423 425 427
unary.identifier.declarator (219)
    on left: 262 263 264, on right: 260 266 267
postfix.identifier.declarator (220)
    on left: 265 266 267, on right: 262
paren.identifier.declarator (221)
    on left: 268 269, on right: 3 4 5 6 261 265 269 273
old.function.declarator (222)
    on left: 270 271 272, on right: 227 271 272 274 275 429 431 433
    435 437 439 441 443 445 447
postfix.old.function.declarator (223)
    on left: 273 274 275, on right: 270
identifier.list (224)
    on left: 276 277, on right: 273 277
identifier.or.typedef.name (225)
    on left: 278 279, on right: 330 331 333 352 353 354 355
type.name (226)
    on left: 280 281 282 283, on right: 97 105
attributes.opt (227)
    on left: 284 285, on right: 160 163 166 168 170 174 178 181 183
    185 344 345 346 347
attributes (228)
    on left: 286 287, on right: 285 287
attribute (229)
    on left: 288, on right: 286 287
attribute.list (230)
    on left: 289 290, on right: 288 290
attrib (231)
    on left: 291 292 293, on right: 289 290
any.word (232)
    on left: 294 295 296, on right: 292 293
initializer.opt (233)
    on left: 297 298, on right: 160 163 166 168 170 174 178 181 183
    185
initializer (234)
    on left: 299 300 301, on right: 298 302 303 309
initializer.list (235)
    on left: 302 303, on right: 299 300 303
parameter.type.list (236)
    on left: 304 305 306, on right: 259
parameter.list (237)
    on left: 307 308 309 310, on right: 21 304 305 308 310
parameter.declaration (238)
    on left: 311 312 313 314 315 316 317 318 319 320 321 322 323 324,
    on right: 307 308 309
array.abstract.declarator (239)
    on left: 325 326 327 328, on right: 257 327 328
struct.or.union.specifier (240)
    on left: 329 330 331 332 333, on right: 222
struct.or.union (241)
    on left: 334 335, on right: 329 330 331 332 333
struct.declaration.list (242)
    on left: 336 337, on right: 329 330 337
struct.declaration (243)
    on left: 338 339, on right: 336 337
struct.default.declaring.list (244)
    on left: 340 341, on right: 339 341
struct.declaring.list (245)
    on left: 342 343, on right: 338 343
struct.declarator (246)
    on left: 344 345, on right: 342 343
struct.identifier.declarator (247)
    on left: 346 347, on right: 340 341
bit.field.size.opt (248)
    on left: 348 349, on right: 344 346
bit.field.size (249)
    on left: 350, on right: 345 347 349
enum.specifier (250)
    on left: 351 352 353, on right: 223
enumerator.list (251)
    on left: 354 355, on right: 351 352 355
enumerator.value.opt (252)
    on left: 356 357, on right: 354 355
comma.opt (253)
    on left: 358 359, on right: 351 352
costream.composite.statement (254)
    on left: 360 361, on right: 22 23 389 390 398 400 402 404 406
statement (255)
    on left: 362 363 364 365 366 367 368, on right: 37 39 361 370 371
    372 373 386 387 392 394 396
labeled.statement (256)
    on left: 370 371 372 373, on right: 362
@18 (257)
    on left: 369, on right: 370
compound.statement (258)
    on left: 374 375 376 377, on right: 52 53 363
lblock (259)
    on left: 378, on right: 30 31 32 33 34 49 50 68 69 78 79 80 81
    82 374 375 376 377
rblock (260)
    on left: 379, on right: 30 31 32 33 34 49 50 68 69 78 79 80 81
    82 374 375 376 377
compound.statement.no.new.scope (261)
    on left: 380 381 382 383, on right: 418 421 423 425 427 429 431
    433 435 437 439 441 443 445 447
declaration.list (262)
    on left: 384 385, on right: 19 31 33 34 50 69 79 80 82 375 377
    381 383 385 449
statement.list (263)
    on left: 386 387, on right: 34 68 69 80 382 383 387
expression.statement (264)
    on left: 388, on right: 364
selection.statement (265)
    on left: 389 390 392, on right: 365
$@19 (266)
    on left: 391, on right: 392
iteration.statement (267)
    on left: 394 396 398 400 402 404 406, on right: 366
$@20 (268)
    on left: 393, on right: 394
$@21 (269)
    on left: 395, on right: 396
$@22 (270)
    on left: 397, on right: 398
$@23 (271)
    on left: 399, on right: 400
$@24 (272)
    on left: 401, on right: 402
$@25 (273)
    on left: 403, on right: 404
$@26 (274)
    on left: 405, on right: 406
jump.statement (275)
    on left: 407 408 409 410 411, on right: 367
translation.unit (276)
    on left: 412 413, on right: 1 413
external.definition (277)
    on left: 414 415 416, on right: 412 413
function.definition (278)
    on left: 418 419 421 423 425 427 429 431 433 435 437 439 441 443
    445 447, on right: 415
$@27 (279)
    on left: 417, on right: 418
$@28 (280)
    on left: 420, on right: 421
$@29 (281)
    on left: 422, on right: 423
$@30 (282)
    on left: 424, on right: 425
$@31 (283)
    on left: 426, on right: 427
$@32 (284)
    on left: 428, on right: 429
$@33 (285)
    on left: 430, on right: 431
$@34 (286)
    on left: 432, on right: 433
$@35 (287)
    on left: 434, on right: 435
$@36 (288)
    on left: 436, on right: 437
$@37 (289)
    on left: 438, on right: 439
$@38 (290)
    on left: 440, on right: 441
$@39 (291)
    on left: 442, on right: 443
$@40 (292)
    on left: 444, on right: 445
$@41 (293)
    on left: 446, on right: 447
old.function.declaration.list (294)
    on left: 449, on right: 439 441 443 445 447
$@42 (295)
    on left: 448, on right: 449
constant (296)
    on left: 450 451 452 453 454, on right: 65
string.literal.list (297)
    on left: 455 456, on right: 66 456
type.qualifier (298)
    on left: 457 458 459, on right: 203 210 214 217 218 219
pointer.type.qualifier (299)
    on left: 460 461, on right: 220 221
storage.class (300)
    on left: 462 463 464 465 466, on right: 190 194 197 200 201 204
basic.type.name (301)
    on left: 467 468 469 470 471 472 473 474 475, on right: 191 193
    208 209 211


state 0

    0 $accept: . prog.start $end

    '*'          shift, and go to state 1
    '('          shift, and go to state 2
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    COMPOSITE    shift, and go to state 22
    STREAM       shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    prog.start                       go to state 27
    stream.type.specifier            go to state 28
    composite.definition             go to state 29
    composite.head                   go to state 30
    declaration                      go to state 31
    declaring.list                   go to state 32
    default.declaring.list           go to state 33
    declaration.specifier            go to state 34
    basic.declaration.specifier      go to state 35
    sue.declaration.specifier        go to state 36
    typedef.declaration.specifier    go to state 37
    declaration.qualifier.list       go to state 38
    type.specifier                   go to state 39
    basic.type.specifier             go to state 40
    sue.type.specifier               go to state 41
    typedef.type.specifier           go to state 42
    type.qualifier.list              go to state 43
    elaborated.type.name             go to state 44
    identifier.declarator            go to state 45
    unary.identifier.declarator      go to state 46
    postfix.identifier.declarator    go to state 47
    paren.identifier.declarator      go to state 48
    old.function.declarator          go to state 49
    postfix.old.function.declarator  go to state 50
    struct.or.union.specifier        go to state 51
    struct.or.union                  go to state 52
    enum.specifier                   go to state 53
    translation.unit                 go to state 54
    external.definition              go to state 55
    function.definition              go to state 56
    type.qualifier                   go to state 57
    storage.class                    go to state 58
    basic.type.name                  go to state 59


state 1

  263 unary.identifier.declarator: '*' . identifier.declarator
  264                            | '*' . pointer.type.qualifier.list identifier.declarator
  271 old.function.declarator: '*' . old.function.declarator
  272                        | '*' . pointer.type.qualifier.list old.function.declarator

    '*'         shift, and go to state 1
    '('         shift, and go to state 2
    CONST       shift, and go to state 60
    VOLATILE    shift, and go to state 61
    IDENTIFIER  shift, and go to state 24

    pointer.type.qualifier.list      go to state 62
    identifier.declarator            go to state 63
    unary.identifier.declarator      go to state 46
    postfix.identifier.declarator    go to state 47
    paren.identifier.declarator      go to state 48
    old.function.declarator          go to state 64
    postfix.old.function.declarator  go to state 50
    pointer.type.qualifier           go to state 65


state 2

  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'
  274 postfix.old.function.declarator: '(' . old.function.declarator ')'
  275                                | '(' . old.function.declarator ')' postfixing.abstract.declarator

    '*'         shift, and go to state 1
    '('         shift, and go to state 2
    IDENTIFIER  shift, and go to state 24

    unary.identifier.declarator      go to state 66
    postfix.identifier.declarator    go to state 47
    paren.identifier.declarator      go to state 67
    old.function.declarator          go to state 68
    postfix.old.function.declarator  go to state 50


state 3

  465 storage.class: AUTO .

    $default  reduce using rule 465 (storage.class)


state 4

  471 basic.type.name: DOUBLE .

    $default  reduce using rule 471 (basic.type.name)


state 5

  469 basic.type.name: INT .

    $default  reduce using rule 469 (basic.type.name)


state 6

  334 struct.or.union: STRUCT .

    $default  reduce using rule 334 (struct.or.union)


state 7

  475 basic.type.name: LONG .

    $default  reduce using rule 475 (basic.type.name)


state 8

  351 enum.specifier: ENUM . '{' enumerator.list comma.opt '}'
  352               | ENUM . identifier.or.typedef.name '{' enumerator.list comma.opt '}'
  353               | ENUM . identifier.or.typedef.name

    '{'          shift, and go to state 69
    IDENTIFIER   shift, and go to state 70
    TYPEDEFname  shift, and go to state 71

    identifier.or.typedef.name  go to state 72


state 9

  466 storage.class: REGISTER .

    $default  reduce using rule 466 (storage.class)


state 10

  462 storage.class: TYPEDEF .

    $default  reduce using rule 462 (storage.class)


state 11

  468 basic.type.name: CHAR .

    $default  reduce using rule 468 (basic.type.name)


state 12

  463 storage.class: EXTERN .

    $default  reduce using rule 463 (storage.class)


state 13

  335 struct.or.union: UNION .

    $default  reduce using rule 335 (struct.or.union)


state 14

  457 type.qualifier: CONST .

    $default  reduce using rule 457 (type.qualifier)


state 15

  470 basic.type.name: FLOAT .

    $default  reduce using rule 470 (basic.type.name)


state 16

  474 basic.type.name: SHORT .

    $default  reduce using rule 474 (basic.type.name)


state 17

  473 basic.type.name: UNSIGNED .

    $default  reduce using rule 473 (basic.type.name)


state 18

  472 basic.type.name: SIGNED .

    $default  reduce using rule 472 (basic.type.name)


state 19

  467 basic.type.name: VOID .

    $default  reduce using rule 467 (basic.type.name)


state 20

  458 type.qualifier: VOLATILE .

    $default  reduce using rule 458 (type.qualifier)


state 21

  464 storage.class: STATIC .

    $default  reduce using rule 464 (storage.class)


state 22

    9 composite.head: COMPOSITE . IDENTIFIER '(' composite.head.inout ')'

    IDENTIFIER  shift, and go to state 73


state 23

    2 stream.type.specifier: STREAM . '<' stream.declaration.list '>'

    '<'  shift, and go to state 74


state 24

  268 paren.identifier.declarator: IDENTIFIER .

    $default  reduce using rule 268 (paren.identifier.declarator)


state 25

  215 typedef.type.specifier: TYPEDEFname .

    $default  reduce using rule 215 (typedef.type.specifier)


state 26

  459 type.qualifier: INLINE .

    $default  reduce using rule 459 (type.qualifier)


state 27

    0 $accept: prog.start . $end

    $end  shift, and go to state 75


state 28

  175 default.declaring.list: stream.type.specifier . identifier.declarator

    '*'         shift, and go to state 76
    '('         shift, and go to state 77
    IDENTIFIER  shift, and go to state 24

    identifier.declarator          go to state 78
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79


state 29

  416 external.definition: composite.definition .

    $default  reduce using rule 416 (external.definition)


state 30

    8 composite.definition: composite.head . $@1 composite.body.no.new.scope

    $default  reduce using rule 7 ($@1)

    $@1  go to state 80


state 31

  414 external.definition: declaration .

    $default  reduce using rule 414 (external.definition)


state 32

  154 declaration: declaring.list . ';'
  166 declaring.list: declaring.list . ',' declarator @6 attributes.opt $@7 initializer.opt
  171               | declaring.list . ',' error

    ';'  shift, and go to state 81
    ','  shift, and go to state 82


state 33

  155 declaration: default.declaring.list . ';'
  181 default.declaring.list: default.declaring.list . ',' identifier.declarator @14 attributes.opt $@15 initializer.opt
  186                       | default.declaring.list . ',' error

    ';'  shift, and go to state 83
    ','  shift, and go to state 84


state 34

  160 declaring.list: declaration.specifier . declarator $@2 attributes.opt $@3 initializer.opt
  168               | declaration.specifier . error $@8 attributes.opt initializer.opt
  421 function.definition: declaration.specifier . identifier.declarator $@28 compound.statement.no.new.scope
  431                    | declaration.specifier . old.function.declarator $@33 compound.statement.no.new.scope
  441                    | declaration.specifier . old.function.declarator old.function.declaration.list $@38 compound.statement.no.new.scope

    error        shift, and go to state 85
    '*'          shift, and go to state 86
    '('          shift, and go to state 87
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    declarator                        go to state 89
    paren.typedef.declarator          go to state 90
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 92
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 95
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 96
    postfix.old.function.declarator   go to state 50


state 35

  187 declaration.specifier: basic.declaration.specifier .
  192 basic.declaration.specifier: basic.declaration.specifier . declaration.qualifier
  193                            | basic.declaration.specifier . basic.type.name

    AUTO      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 7
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    CHAR      shift, and go to state 11
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    FLOAT     shift, and go to state 15
    SHORT     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    SIGNED    shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 187 (declaration.specifier)

    declaration.qualifier  go to state 97
    type.qualifier         go to state 98
    storage.class          go to state 99
    basic.type.name        go to state 100


state 36

  156 declaration: sue.declaration.specifier . ';'
  188 declaration.specifier: sue.declaration.specifier .
  196 sue.declaration.specifier: sue.declaration.specifier . declaration.qualifier

    ';'       shift, and go to state 101
    AUTO      shift, and go to state 3
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 188 (declaration.specifier)

    declaration.qualifier  go to state 102
    type.qualifier         go to state 98
    storage.class          go to state 99


state 37

  189 declaration.specifier: typedef.declaration.specifier .
  199 typedef.declaration.specifier: typedef.declaration.specifier . declaration.qualifier

    AUTO      shift, and go to state 3
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 189 (declaration.specifier)

    declaration.qualifier  go to state 103
    type.qualifier         go to state 98
    storage.class          go to state 99


state 38

  174 default.declaring.list: declaration.qualifier.list . identifier.declarator $@10 attributes.opt $@11 initializer.opt
  183                       | declaration.qualifier.list . error $@16 attributes.opt initializer.opt
  191 basic.declaration.specifier: declaration.qualifier.list . basic.type.name
  195 sue.declaration.specifier: declaration.qualifier.list . elaborated.type.name
  198 typedef.declaration.specifier: declaration.qualifier.list . TYPEDEFname
  202 declaration.qualifier.list: declaration.qualifier.list . declaration.qualifier
  425 function.definition: declaration.qualifier.list . identifier.declarator $@30 compound.statement.no.new.scope
  435                    | declaration.qualifier.list . old.function.declarator $@35 compound.statement.no.new.scope
  445                    | declaration.qualifier.list . old.function.declarator old.function.declaration.list $@40 compound.statement.no.new.scope

    error        shift, and go to state 104
    '*'          shift, and go to state 1
    '('          shift, and go to state 2
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 105
    INLINE       shift, and go to state 26

    declaration.qualifier            go to state 106
    elaborated.type.name             go to state 107
    identifier.declarator            go to state 108
    unary.identifier.declarator      go to state 46
    postfix.identifier.declarator    go to state 47
    paren.identifier.declarator      go to state 48
    old.function.declarator          go to state 109
    postfix.old.function.declarator  go to state 50
    struct.or.union.specifier        go to state 51
    struct.or.union                  go to state 52
    enum.specifier                   go to state 53
    type.qualifier                   go to state 98
    storage.class                    go to state 99
    basic.type.name                  go to state 110


state 39

  163 declaring.list: type.specifier . declarator $@4 attributes.opt $@5 initializer.opt
  170               | type.specifier . error $@9 attributes.opt initializer.opt
  423 function.definition: type.specifier . identifier.declarator $@29 compound.statement.no.new.scope
  433                    | type.specifier . old.function.declarator $@34 compound.statement.no.new.scope
  443                    | type.specifier . old.function.declarator old.function.declaration.list $@39 compound.statement.no.new.scope

    error        shift, and go to state 111
    '*'          shift, and go to state 86
    '('          shift, and go to state 87
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    declarator                        go to state 112
    paren.typedef.declarator          go to state 90
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 92
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 113
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 114
    postfix.old.function.declarator   go to state 50


state 40

  190 basic.declaration.specifier: basic.type.specifier . storage.class
  205 type.specifier: basic.type.specifier .
  210 basic.type.specifier: basic.type.specifier . type.qualifier
  211                     | basic.type.specifier . basic.type.name

    AUTO      shift, and go to state 3
    DOUBLE    shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 7
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    CHAR      shift, and go to state 11
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    FLOAT     shift, and go to state 15
    SHORT     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    SIGNED    shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 205 (type.specifier)

    type.qualifier   go to state 115
    storage.class    go to state 116
    basic.type.name  go to state 117


state 41

  157 declaration: sue.type.specifier . ';'
  194 sue.declaration.specifier: sue.type.specifier . storage.class
  206 type.specifier: sue.type.specifier .
  214 sue.type.specifier: sue.type.specifier . type.qualifier

    ';'       shift, and go to state 118
    AUTO      shift, and go to state 3
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 206 (type.specifier)

    type.qualifier  go to state 119
    storage.class   go to state 120


state 42

  197 typedef.declaration.specifier: typedef.type.specifier . storage.class
  207 type.specifier: typedef.type.specifier .
  217 typedef.type.specifier: typedef.type.specifier . type.qualifier

    AUTO      shift, and go to state 3
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 207 (type.specifier)

    type.qualifier  go to state 121
    storage.class   go to state 122


state 43

  178 default.declaring.list: type.qualifier.list . identifier.declarator $@12 attributes.opt $@13 initializer.opt
  185                       | type.qualifier.list . error $@17 attributes.opt initializer.opt
  201 declaration.qualifier.list: type.qualifier.list . storage.class
  209 basic.type.specifier: type.qualifier.list . basic.type.name
  213 sue.type.specifier: type.qualifier.list . elaborated.type.name
  216 typedef.type.specifier: type.qualifier.list . TYPEDEFname
  219 type.qualifier.list: type.qualifier.list . type.qualifier
  427 function.definition: type.qualifier.list . identifier.declarator $@31 compound.statement.no.new.scope
  437                    | type.qualifier.list . old.function.declarator $@36 compound.statement.no.new.scope
  447                    | type.qualifier.list . old.function.declarator old.function.declaration.list $@41 compound.statement.no.new.scope

    error        shift, and go to state 123
    '*'          shift, and go to state 1
    '('          shift, and go to state 2
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 124
    INLINE       shift, and go to state 26

    elaborated.type.name             go to state 125
    identifier.declarator            go to state 126
    unary.identifier.declarator      go to state 46
    postfix.identifier.declarator    go to state 47
    paren.identifier.declarator      go to state 48
    old.function.declarator          go to state 127
    postfix.old.function.declarator  go to state 50
    struct.or.union.specifier        go to state 51
    struct.or.union                  go to state 52
    enum.specifier                   go to state 53
    type.qualifier                   go to state 128
    storage.class                    go to state 129
    basic.type.name                  go to state 130


state 44

  212 sue.type.specifier: elaborated.type.name .

    $default  reduce using rule 212 (sue.type.specifier)


state 45

  418 function.definition: identifier.declarator . $@27 compound.statement.no.new.scope
  419                    | identifier.declarator . BOGUS

    BOGUS  shift, and go to state 131

    $default  reduce using rule 417 ($@27)

    $@27  go to state 132


state 46

  260 identifier.declarator: unary.identifier.declarator .

    $default  reduce using rule 260 (identifier.declarator)


state 47

  262 unary.identifier.declarator: postfix.identifier.declarator .

    $default  reduce using rule 262 (unary.identifier.declarator)


state 48

  261 identifier.declarator: paren.identifier.declarator .
  265 postfix.identifier.declarator: paren.identifier.declarator . postfixing.abstract.declarator
  273 postfix.old.function.declarator: paren.identifier.declarator . '(' identifier.list ')'

    '('  shift, and go to state 133
    '['  shift, and go to state 134

    $default  reduce using rule 261 (identifier.declarator)

    postfixing.abstract.declarator  go to state 135
    array.abstract.declarator       go to state 136


state 49

  429 function.definition: old.function.declarator . $@32 compound.statement.no.new.scope
  439                    | old.function.declarator . old.function.declaration.list $@37 compound.statement.no.new.scope

    '{'       reduce using rule 428 ($@32)
    $default  reduce using rule 448 ($@42)

    $@32                           go to state 137
    old.function.declaration.list  go to state 138
    $@42                           go to state 139


state 50

  270 old.function.declarator: postfix.old.function.declarator .

    $default  reduce using rule 270 (old.function.declarator)


state 51

  222 elaborated.type.name: struct.or.union.specifier .

    $default  reduce using rule 222 (elaborated.type.name)


state 52

  329 struct.or.union.specifier: struct.or.union . '{' struct.declaration.list '}'
  330                          | struct.or.union . identifier.or.typedef.name '{' struct.declaration.list '}'
  331                          | struct.or.union . identifier.or.typedef.name
  332                          | struct.or.union . '{' '}'
  333                          | struct.or.union . identifier.or.typedef.name '{' '}'

    '{'          shift, and go to state 140
    IDENTIFIER   shift, and go to state 70
    TYPEDEFname  shift, and go to state 71

    identifier.or.typedef.name  go to state 141


state 53

  223 elaborated.type.name: enum.specifier .

    $default  reduce using rule 223 (elaborated.type.name)


state 54

    1 prog.start: translation.unit .
  413 translation.unit: translation.unit . external.definition

    '*'          shift, and go to state 1
    '('          shift, and go to state 2
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    COMPOSITE    shift, and go to state 22
    STREAM       shift, and go to state 23
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    $default  reduce using rule 1 (prog.start)

    stream.type.specifier            go to state 28
    composite.definition             go to state 29
    composite.head                   go to state 30
    declaration                      go to state 31
    declaring.list                   go to state 32
    default.declaring.list           go to state 33
    declaration.specifier            go to state 34
    basic.declaration.specifier      go to state 35
    sue.declaration.specifier        go to state 36
    typedef.declaration.specifier    go to state 37
    declaration.qualifier.list       go to state 38
    type.specifier                   go to state 39
    basic.type.specifier             go to state 40
    sue.type.specifier               go to state 41
    typedef.type.specifier           go to state 42
    type.qualifier.list              go to state 43
    elaborated.type.name             go to state 44
    identifier.declarator            go to state 45
    unary.identifier.declarator      go to state 46
    postfix.identifier.declarator    go to state 47
    paren.identifier.declarator      go to state 48
    old.function.declarator          go to state 49
    postfix.old.function.declarator  go to state 50
    struct.or.union.specifier        go to state 51
    struct.or.union                  go to state 52
    enum.specifier                   go to state 53
    external.definition              go to state 142
    function.definition              go to state 56
    type.qualifier                   go to state 57
    storage.class                    go to state 58
    basic.type.name                  go to state 59


state 55

  412 translation.unit: external.definition .

    $default  reduce using rule 412 (translation.unit)


state 56

  415 external.definition: function.definition .

    $default  reduce using rule 415 (external.definition)


state 57

  218 type.qualifier.list: type.qualifier .

    $default  reduce using rule 218 (type.qualifier.list)


state 58

  200 declaration.qualifier.list: storage.class .

    $default  reduce using rule 200 (declaration.qualifier.list)


state 59

  208 basic.type.specifier: basic.type.name .

    $default  reduce using rule 208 (basic.type.specifier)


state 60

  460 pointer.type.qualifier: CONST .

    $default  reduce using rule 460 (pointer.type.qualifier)


state 61

  461 pointer.type.qualifier: VOLATILE .

    $default  reduce using rule 461 (pointer.type.qualifier)


state 62

  221 pointer.type.qualifier.list: pointer.type.qualifier.list . pointer.type.qualifier
  264 unary.identifier.declarator: '*' pointer.type.qualifier.list . identifier.declarator
  272 old.function.declarator: '*' pointer.type.qualifier.list . old.function.declarator

    '*'         shift, and go to state 1
    '('         shift, and go to state 2
    CONST       shift, and go to state 60
    VOLATILE    shift, and go to state 61
    IDENTIFIER  shift, and go to state 24

    identifier.declarator            go to state 143
    unary.identifier.declarator      go to state 46
    postfix.identifier.declarator    go to state 47
    paren.identifier.declarator      go to state 48
    old.function.declarator          go to state 144
    postfix.old.function.declarator  go to state 50
    pointer.type.qualifier           go to state 145


state 63

  263 unary.identifier.declarator: '*' identifier.declarator .

    $default  reduce using rule 263 (unary.identifier.declarator)


state 64

  271 old.function.declarator: '*' old.function.declarator .

    $default  reduce using rule 271 (old.function.declarator)


state 65

  220 pointer.type.qualifier.list: pointer.type.qualifier .

    $default  reduce using rule 220 (pointer.type.qualifier.list)


state 66

  266 postfix.identifier.declarator: '(' unary.identifier.declarator . ')'
  267                              | '(' unary.identifier.declarator . ')' postfixing.abstract.declarator

    ')'  shift, and go to state 146


state 67

  265 postfix.identifier.declarator: paren.identifier.declarator . postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' paren.identifier.declarator . ')'
  273 postfix.old.function.declarator: paren.identifier.declarator . '(' identifier.list ')'

    '('  shift, and go to state 133
    ')'  shift, and go to state 147
    '['  shift, and go to state 134

    postfixing.abstract.declarator  go to state 135
    array.abstract.declarator       go to state 136


state 68

  274 postfix.old.function.declarator: '(' old.function.declarator . ')'
  275                                | '(' old.function.declarator . ')' postfixing.abstract.declarator

    ')'  shift, and go to state 148


state 69

  351 enum.specifier: ENUM '{' . enumerator.list comma.opt '}'

    IDENTIFIER   shift, and go to state 70
    TYPEDEFname  shift, and go to state 71

    identifier.or.typedef.name  go to state 149
    enumerator.list             go to state 150


state 70

  278 identifier.or.typedef.name: IDENTIFIER .

    $default  reduce using rule 278 (identifier.or.typedef.name)


state 71

  279 identifier.or.typedef.name: TYPEDEFname .

    $default  reduce using rule 279 (identifier.or.typedef.name)


state 72

  352 enum.specifier: ENUM identifier.or.typedef.name . '{' enumerator.list comma.opt '}'
  353               | ENUM identifier.or.typedef.name .

    '{'  shift, and go to state 151

    $default  reduce using rule 353 (enum.specifier)


state 73

    9 composite.head: COMPOSITE IDENTIFIER . '(' composite.head.inout ')'

    '('  shift, and go to state 152


state 74

    2 stream.type.specifier: STREAM '<' . stream.declaration.list '>'

    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    stream.declaration.list    go to state 153
    type.specifier             go to state 154
    basic.type.specifier       go to state 155
    sue.type.specifier         go to state 156
    typedef.type.specifier     go to state 157
    type.qualifier.list        go to state 158
    elaborated.type.name       go to state 44
    struct.or.union.specifier  go to state 51
    struct.or.union            go to state 52
    enum.specifier             go to state 53
    type.qualifier             go to state 57
    basic.type.name            go to state 59


state 75

    0 $accept: prog.start $end .

    $default  accept


state 76

  263 unary.identifier.declarator: '*' . identifier.declarator
  264                            | '*' . pointer.type.qualifier.list identifier.declarator

    '*'         shift, and go to state 76
    '('         shift, and go to state 77
    CONST       shift, and go to state 60
    VOLATILE    shift, and go to state 61
    IDENTIFIER  shift, and go to state 24

    pointer.type.qualifier.list    go to state 159
    identifier.declarator          go to state 63
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79
    pointer.type.qualifier         go to state 65


state 77

  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'

    '*'         shift, and go to state 76
    '('         shift, and go to state 77
    IDENTIFIER  shift, and go to state 24

    unary.identifier.declarator    go to state 66
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 160


state 78

  175 default.declaring.list: stream.type.specifier identifier.declarator .

    $default  reduce using rule 175 (default.declaring.list)


state 79

  261 identifier.declarator: paren.identifier.declarator .
  265 postfix.identifier.declarator: paren.identifier.declarator . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 261 (identifier.declarator)

    postfixing.abstract.declarator  go to state 135
    array.abstract.declarator       go to state 136


state 80

    8 composite.definition: composite.head $@1 . composite.body.no.new.scope

    '{'  shift, and go to state 162

    composite.body.no.new.scope  go to state 163


state 81

  154 declaration: declaring.list ';' .

    $default  reduce using rule 154 (declaration)


state 82

  166 declaring.list: declaring.list ',' . declarator @6 attributes.opt $@7 initializer.opt
  171               | declaring.list ',' . error

    error        shift, and go to state 164
    '*'          shift, and go to state 86
    '('          shift, and go to state 87
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    declarator                        go to state 165
    paren.typedef.declarator          go to state 90
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 92
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 166
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 167
    postfix.old.function.declarator   go to state 50


state 83

  155 declaration: default.declaring.list ';' .

    $default  reduce using rule 155 (declaration)


state 84

  181 default.declaring.list: default.declaring.list ',' . identifier.declarator @14 attributes.opt $@15 initializer.opt
  186                       | default.declaring.list ',' . error

    error       shift, and go to state 168
    '*'         shift, and go to state 76
    '('         shift, and go to state 77
    IDENTIFIER  shift, and go to state 24

    identifier.declarator          go to state 169
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79


state 85

  168 declaring.list: declaration.specifier error . $@8 attributes.opt initializer.opt

    $default  reduce using rule 167 ($@8)

    $@8  go to state 170


state 86

  229 paren.typedef.declarator: '*' . paren.typedef.declarator
  230                         | '*' . '(' simple.paren.typedef.declarator ')'
  231                         | '*' . pointer.type.qualifier.list '(' simple.paren.typedef.declarator ')'
  232                         | '*' . pointer.type.qualifier.list paren.typedef.declarator
  242 clean.typedef.declarator: '*' . parameter.typedef.declarator
  243                         | '*' . pointer.type.qualifier.list parameter.typedef.declarator
  263 unary.identifier.declarator: '*' . identifier.declarator
  264                            | '*' . pointer.type.qualifier.list identifier.declarator
  271 old.function.declarator: '*' . old.function.declarator
  272                        | '*' . pointer.type.qualifier.list old.function.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 171
    CONST        shift, and go to state 60
    VOLATILE     shift, and go to state 61
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    pointer.type.qualifier.list       go to state 172
    paren.typedef.declarator          go to state 173
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 174
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 63
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 64
    postfix.old.function.declarator   go to state 50
    pointer.type.qualifier            go to state 65


state 87

  233 paren.postfix.typedef.declarator: '(' . paren.typedef.declarator ')'
  234                                 | '(' . simple.paren.typedef.declarator postfixing.abstract.declarator ')'
  235                                 | '(' . paren.typedef.declarator ')' postfixing.abstract.declarator
  244 clean.postfix.typedef.declarator: '(' . clean.typedef.declarator ')'
  245                                 | '(' . clean.typedef.declarator ')' postfixing.abstract.declarator
  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'
  274 postfix.old.function.declarator: '(' . old.function.declarator ')'
  275                                | '(' . old.function.declarator ')' postfixing.abstract.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 175
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 176

    paren.typedef.declarator          go to state 177
    paren.postfix.typedef.declarator  go to state 91
    simple.paren.typedef.declarator   go to state 178
    clean.typedef.declarator          go to state 179
    clean.postfix.typedef.declarator  go to state 94
    unary.identifier.declarator       go to state 66
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 67
    old.function.declarator           go to state 68
    postfix.old.function.declarator   go to state 50


state 88

  238 parameter.typedef.declarator: TYPEDEFname .
  239                             | TYPEDEFname . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 238 (parameter.typedef.declarator)

    postfixing.abstract.declarator  go to state 180
    array.abstract.declarator       go to state 136


state 89

  160 declaring.list: declaration.specifier declarator . $@2 attributes.opt $@3 initializer.opt

    $default  reduce using rule 158 ($@2)

    $@2  go to state 181


state 90

  224 declarator: paren.typedef.declarator .

    $default  reduce using rule 224 (declarator)


state 91

  228 paren.typedef.declarator: paren.postfix.typedef.declarator .

    $default  reduce using rule 228 (paren.typedef.declarator)


state 92

  225 declarator: parameter.typedef.declarator .

    $default  reduce using rule 225 (declarator)


state 93

  240 parameter.typedef.declarator: clean.typedef.declarator .

    $default  reduce using rule 240 (parameter.typedef.declarator)


state 94

  241 clean.typedef.declarator: clean.postfix.typedef.declarator .

    $default  reduce using rule 241 (clean.typedef.declarator)


state 95

  226 declarator: identifier.declarator .
  421 function.definition: declaration.specifier identifier.declarator . $@28 compound.statement.no.new.scope

    '{'       reduce using rule 420 ($@28)
    $default  reduce using rule 226 (declarator)

    $@28  go to state 182


state 96

  227 declarator: old.function.declarator .
  431 function.definition: declaration.specifier old.function.declarator . $@33 compound.statement.no.new.scope
  441                    | declaration.specifier old.function.declarator . old.function.declaration.list $@38 compound.statement.no.new.scope

    ';'        reduce using rule 227 (declarator)
    '{'        reduce using rule 430 ($@33)
    ','        reduce using rule 227 (declarator)
    '='        reduce using rule 227 (declarator)
    ATTRIBUTE  reduce using rule 227 (declarator)
    $default   reduce using rule 448 ($@42)

    $@33                           go to state 183
    old.function.declaration.list  go to state 184
    $@42                           go to state 139


state 97

  192 basic.declaration.specifier: basic.declaration.specifier declaration.qualifier .

    $default  reduce using rule 192 (basic.declaration.specifier)


state 98

  203 declaration.qualifier: type.qualifier .

    $default  reduce using rule 203 (declaration.qualifier)


state 99

  204 declaration.qualifier: storage.class .

    $default  reduce using rule 204 (declaration.qualifier)


state 100

  193 basic.declaration.specifier: basic.declaration.specifier basic.type.name .

    $default  reduce using rule 193 (basic.declaration.specifier)


state 101

  156 declaration: sue.declaration.specifier ';' .

    $default  reduce using rule 156 (declaration)


state 102

  196 sue.declaration.specifier: sue.declaration.specifier declaration.qualifier .

    $default  reduce using rule 196 (sue.declaration.specifier)


state 103

  199 typedef.declaration.specifier: typedef.declaration.specifier declaration.qualifier .

    $default  reduce using rule 199 (typedef.declaration.specifier)


state 104

  183 default.declaring.list: declaration.qualifier.list error . $@16 attributes.opt initializer.opt

    $default  reduce using rule 182 ($@16)

    $@16  go to state 185


state 105

  198 typedef.declaration.specifier: declaration.qualifier.list TYPEDEFname .

    $default  reduce using rule 198 (typedef.declaration.specifier)


state 106

  202 declaration.qualifier.list: declaration.qualifier.list declaration.qualifier .

    $default  reduce using rule 202 (declaration.qualifier.list)


state 107

  195 sue.declaration.specifier: declaration.qualifier.list elaborated.type.name .

    $default  reduce using rule 195 (sue.declaration.specifier)


state 108

  174 default.declaring.list: declaration.qualifier.list identifier.declarator . $@10 attributes.opt $@11 initializer.opt
  425 function.definition: declaration.qualifier.list identifier.declarator . $@30 compound.statement.no.new.scope

    '{'       reduce using rule 424 ($@30)
    $default  reduce using rule 172 ($@10)

    $@10  go to state 186
    $@30  go to state 187


state 109

  435 function.definition: declaration.qualifier.list old.function.declarator . $@35 compound.statement.no.new.scope
  445                    | declaration.qualifier.list old.function.declarator . old.function.declaration.list $@40 compound.statement.no.new.scope

    '{'       reduce using rule 434 ($@35)
    $default  reduce using rule 448 ($@42)

    $@35                           go to state 188
    old.function.declaration.list  go to state 189
    $@42                           go to state 139


state 110

  191 basic.declaration.specifier: declaration.qualifier.list basic.type.name .

    $default  reduce using rule 191 (basic.declaration.specifier)


state 111

  170 declaring.list: type.specifier error . $@9 attributes.opt initializer.opt

    $default  reduce using rule 169 ($@9)

    $@9  go to state 190


state 112

  163 declaring.list: type.specifier declarator . $@4 attributes.opt $@5 initializer.opt

    $default  reduce using rule 161 ($@4)

    $@4  go to state 191


state 113

  226 declarator: identifier.declarator .
  423 function.definition: type.specifier identifier.declarator . $@29 compound.statement.no.new.scope

    '{'       reduce using rule 422 ($@29)
    $default  reduce using rule 226 (declarator)

    $@29  go to state 192


state 114

  227 declarator: old.function.declarator .
  433 function.definition: type.specifier old.function.declarator . $@34 compound.statement.no.new.scope
  443                    | type.specifier old.function.declarator . old.function.declaration.list $@39 compound.statement.no.new.scope

    ';'        reduce using rule 227 (declarator)
    '{'        reduce using rule 432 ($@34)
    ','        reduce using rule 227 (declarator)
    '='        reduce using rule 227 (declarator)
    ATTRIBUTE  reduce using rule 227 (declarator)
    $default   reduce using rule 448 ($@42)

    $@34                           go to state 193
    old.function.declaration.list  go to state 194
    $@42                           go to state 139


state 115

  210 basic.type.specifier: basic.type.specifier type.qualifier .

    $default  reduce using rule 210 (basic.type.specifier)


state 116

  190 basic.declaration.specifier: basic.type.specifier storage.class .

    $default  reduce using rule 190 (basic.declaration.specifier)


state 117

  211 basic.type.specifier: basic.type.specifier basic.type.name .

    $default  reduce using rule 211 (basic.type.specifier)


state 118

  157 declaration: sue.type.specifier ';' .

    $default  reduce using rule 157 (declaration)


state 119

  214 sue.type.specifier: sue.type.specifier type.qualifier .

    $default  reduce using rule 214 (sue.type.specifier)


state 120

  194 sue.declaration.specifier: sue.type.specifier storage.class .

    $default  reduce using rule 194 (sue.declaration.specifier)


state 121

  217 typedef.type.specifier: typedef.type.specifier type.qualifier .

    $default  reduce using rule 217 (typedef.type.specifier)


state 122

  197 typedef.declaration.specifier: typedef.type.specifier storage.class .

    $default  reduce using rule 197 (typedef.declaration.specifier)


state 123

  185 default.declaring.list: type.qualifier.list error . $@17 attributes.opt initializer.opt

    $default  reduce using rule 184 ($@17)

    $@17  go to state 195


state 124

  216 typedef.type.specifier: type.qualifier.list TYPEDEFname .

    $default  reduce using rule 216 (typedef.type.specifier)


state 125

  213 sue.type.specifier: type.qualifier.list elaborated.type.name .

    $default  reduce using rule 213 (sue.type.specifier)


state 126

  178 default.declaring.list: type.qualifier.list identifier.declarator . $@12 attributes.opt $@13 initializer.opt
  427 function.definition: type.qualifier.list identifier.declarator . $@31 compound.statement.no.new.scope

    '{'       reduce using rule 426 ($@31)
    $default  reduce using rule 176 ($@12)

    $@12  go to state 196
    $@31  go to state 197


state 127

  437 function.definition: type.qualifier.list old.function.declarator . $@36 compound.statement.no.new.scope
  447                    | type.qualifier.list old.function.declarator . old.function.declaration.list $@41 compound.statement.no.new.scope

    '{'       reduce using rule 436 ($@36)
    $default  reduce using rule 448 ($@42)

    $@36                           go to state 198
    old.function.declaration.list  go to state 199
    $@42                           go to state 139


state 128

  219 type.qualifier.list: type.qualifier.list type.qualifier .

    $default  reduce using rule 219 (type.qualifier.list)


state 129

  201 declaration.qualifier.list: type.qualifier.list storage.class .

    $default  reduce using rule 201 (declaration.qualifier.list)


state 130

  209 basic.type.specifier: type.qualifier.list basic.type.name .

    $default  reduce using rule 209 (basic.type.specifier)


state 131

  419 function.definition: identifier.declarator BOGUS .

    $default  reduce using rule 419 (function.definition)


state 132

  418 function.definition: identifier.declarator $@27 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 201


state 133

  258 postfixing.abstract.declarator: '(' . ')'
  259                               | '(' . parameter.type.list ')'
  273 postfix.old.function.declarator: paren.identifier.declarator '(' . identifier.list ')'

    ')'          shift, and go to state 202
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 203
    TYPEDEFname  shift, and go to state 25
    ELLIPSIS     shift, and go to state 204
    INLINE       shift, and go to state 26

    declaration.specifier          go to state 205
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 206
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 207
    type.specifier                 go to state 208
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 209
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 210
    elaborated.type.name           go to state 44
    identifier.list                go to state 211
    parameter.type.list            go to state 212
    parameter.list                 go to state 213
    parameter.declaration          go to state 214
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 134

  325 array.abstract.declarator: '[' . ']'
  326                          | '[' . constant.expression ']'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ']'                shift, and go to state 222
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 251
    constant.expression        go to state 252
    constant                   go to state 253
    string.literal.list        go to state 254


state 135

  265 postfix.identifier.declarator: paren.identifier.declarator postfixing.abstract.declarator .

    $default  reduce using rule 265 (postfix.identifier.declarator)


state 136

  257 postfixing.abstract.declarator: array.abstract.declarator .
  327 array.abstract.declarator: array.abstract.declarator . '[' constant.expression ']'
  328                          | array.abstract.declarator . '[' ']'

    '['  shift, and go to state 255

    $default  reduce using rule 257 (postfixing.abstract.declarator)


state 137

  429 function.definition: old.function.declarator $@32 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 256


state 138

  439 function.definition: old.function.declarator old.function.declaration.list . $@37 compound.statement.no.new.scope

    $default  reduce using rule 438 ($@37)

    $@37  go to state 257


state 139

  449 old.function.declaration.list: $@42 . declaration.list

    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    STREAM       shift, and go to state 23
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    stream.type.specifier          go to state 28
    declaration                    go to state 258
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    declaration.list               go to state 263
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 140

  329 struct.or.union.specifier: struct.or.union '{' . struct.declaration.list '}'
  332                          | struct.or.union '{' . '}'

    '}'          shift, and go to state 264
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    type.specifier                 go to state 265
    basic.type.specifier           go to state 155
    sue.type.specifier             go to state 156
    typedef.type.specifier         go to state 157
    type.qualifier.list            go to state 266
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    struct.declaration.list        go to state 267
    struct.declaration             go to state 268
    struct.default.declaring.list  go to state 269
    struct.declaring.list          go to state 270
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    basic.type.name                go to state 59


state 141

  330 struct.or.union.specifier: struct.or.union identifier.or.typedef.name . '{' struct.declaration.list '}'
  331                          | struct.or.union identifier.or.typedef.name .
  333                          | struct.or.union identifier.or.typedef.name . '{' '}'

    '{'  shift, and go to state 271

    $default  reduce using rule 331 (struct.or.union.specifier)


state 142

  413 translation.unit: translation.unit external.definition .

    $default  reduce using rule 413 (translation.unit)


state 143

  264 unary.identifier.declarator: '*' pointer.type.qualifier.list identifier.declarator .

    $default  reduce using rule 264 (unary.identifier.declarator)


state 144

  272 old.function.declarator: '*' pointer.type.qualifier.list old.function.declarator .

    $default  reduce using rule 272 (old.function.declarator)


state 145

  221 pointer.type.qualifier.list: pointer.type.qualifier.list pointer.type.qualifier .

    $default  reduce using rule 221 (pointer.type.qualifier.list)


state 146

  266 postfix.identifier.declarator: '(' unary.identifier.declarator ')' .
  267                              | '(' unary.identifier.declarator ')' . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 266 (postfix.identifier.declarator)

    postfixing.abstract.declarator  go to state 272
    array.abstract.declarator       go to state 136


state 147

  269 paren.identifier.declarator: '(' paren.identifier.declarator ')' .

    $default  reduce using rule 269 (paren.identifier.declarator)


state 148

  274 postfix.old.function.declarator: '(' old.function.declarator ')' .
  275                                | '(' old.function.declarator ')' . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 274 (postfix.old.function.declarator)

    postfixing.abstract.declarator  go to state 273
    array.abstract.declarator       go to state 136


state 149

  354 enumerator.list: identifier.or.typedef.name . enumerator.value.opt

    '='  shift, and go to state 274

    $default  reduce using rule 356 (enumerator.value.opt)

    enumerator.value.opt  go to state 275


state 150

  351 enum.specifier: ENUM '{' enumerator.list . comma.opt '}'
  355 enumerator.list: enumerator.list . ',' identifier.or.typedef.name enumerator.value.opt

    ','  shift, and go to state 276

    $default  reduce using rule 358 (comma.opt)

    comma.opt  go to state 277


state 151

  352 enum.specifier: ENUM identifier.or.typedef.name '{' . enumerator.list comma.opt '}'

    IDENTIFIER   shift, and go to state 70
    TYPEDEFname  shift, and go to state 71

    identifier.or.typedef.name  go to state 149
    enumerator.list             go to state 278


state 152

    9 composite.head: COMPOSITE IDENTIFIER '(' . composite.head.inout ')'

    INPUT   shift, and go to state 279
    OUTPUT  shift, and go to state 280

    $default  reduce using rule 10 (composite.head.inout)

    composite.head.inout  go to state 281


state 153

    2 stream.type.specifier: STREAM '<' stream.declaration.list . '>'
    5 stream.declaration.list: stream.declaration.list . ',' type.specifier paren.identifier.declarator
    6                        | stream.declaration.list . ',' type.specifier paren.identifier.declarator postfixing.abstract.declarator

    '>'  shift, and go to state 282
    ','  shift, and go to state 283


state 154

    3 stream.declaration.list: type.specifier . paren.identifier.declarator
    4                        | type.specifier . paren.identifier.declarator postfixing.abstract.declarator

    '('         shift, and go to state 284
    IDENTIFIER  shift, and go to state 24

    paren.identifier.declarator  go to state 285


state 155

  205 type.specifier: basic.type.specifier .
  210 basic.type.specifier: basic.type.specifier . type.qualifier
  211                     | basic.type.specifier . basic.type.name

    DOUBLE    shift, and go to state 4
    INT       shift, and go to state 5
    LONG      shift, and go to state 7
    CHAR      shift, and go to state 11
    CONST     shift, and go to state 14
    FLOAT     shift, and go to state 15
    SHORT     shift, and go to state 16
    UNSIGNED  shift, and go to state 17
    SIGNED    shift, and go to state 18
    VOID      shift, and go to state 19
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 26

    $default  reduce using rule 205 (type.specifier)

    type.qualifier   go to state 115
    basic.type.name  go to state 117


state 156

  206 type.specifier: sue.type.specifier .
  214 sue.type.specifier: sue.type.specifier . type.qualifier

    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 26

    $default  reduce using rule 206 (type.specifier)

    type.qualifier  go to state 119


state 157

  207 type.specifier: typedef.type.specifier .
  217 typedef.type.specifier: typedef.type.specifier . type.qualifier

    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    INLINE    shift, and go to state 26

    $default  reduce using rule 207 (type.specifier)

    type.qualifier  go to state 121


state 158

  209 basic.type.specifier: type.qualifier.list . basic.type.name
  213 sue.type.specifier: type.qualifier.list . elaborated.type.name
  216 typedef.type.specifier: type.qualifier.list . TYPEDEFname
  219 type.qualifier.list: type.qualifier.list . type.qualifier

    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 124
    INLINE       shift, and go to state 26

    elaborated.type.name       go to state 125
    struct.or.union.specifier  go to state 51
    struct.or.union            go to state 52
    enum.specifier             go to state 53
    type.qualifier             go to state 128
    basic.type.name            go to state 130


state 159

  221 pointer.type.qualifier.list: pointer.type.qualifier.list . pointer.type.qualifier
  264 unary.identifier.declarator: '*' pointer.type.qualifier.list . identifier.declarator

    '*'         shift, and go to state 76
    '('         shift, and go to state 77
    CONST       shift, and go to state 60
    VOLATILE    shift, and go to state 61
    IDENTIFIER  shift, and go to state 24

    identifier.declarator          go to state 143
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79
    pointer.type.qualifier         go to state 145


state 160

  265 postfix.identifier.declarator: paren.identifier.declarator . postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' paren.identifier.declarator . ')'

    '('  shift, and go to state 161
    ')'  shift, and go to state 147
    '['  shift, and go to state 134

    postfixing.abstract.declarator  go to state 135
    array.abstract.declarator       go to state 136


state 161

  258 postfixing.abstract.declarator: '(' . ')'
  259                               | '(' . parameter.type.list ')'

    ')'          shift, and go to state 202
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    TYPEDEFname  shift, and go to state 25
    ELLIPSIS     shift, and go to state 204
    INLINE       shift, and go to state 26

    declaration.specifier          go to state 205
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 206
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 207
    type.specifier                 go to state 208
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 209
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 210
    elaborated.type.name           go to state 44
    parameter.type.list            go to state 212
    parameter.list                 go to state 213
    parameter.declaration          go to state 214
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 162

   18 composite.body.no.new.scope: '{' . composite.body.param.opt composite.body.statement.list '}'
   19                            | '{' . composite.body.param.opt declaration.list composite.body.statement.list '}'

    PARAM  shift, and go to state 286

    $default  reduce using rule 20 (composite.body.param.opt)

    composite.body.param.opt  go to state 287


state 163

    8 composite.definition: composite.head $@1 composite.body.no.new.scope .

    $default  reduce using rule 8 (composite.definition)


state 164

  171 declaring.list: declaring.list ',' error .

    $default  reduce using rule 171 (declaring.list)


state 165

  166 declaring.list: declaring.list ',' declarator . @6 attributes.opt $@7 initializer.opt

    $default  reduce using rule 164 (@6)

    @6  go to state 288


state 166

  226 declarator: identifier.declarator .

    $default  reduce using rule 226 (declarator)


state 167

  227 declarator: old.function.declarator .

    $default  reduce using rule 227 (declarator)


state 168

  186 default.declaring.list: default.declaring.list ',' error .

    $default  reduce using rule 186 (default.declaring.list)


state 169

  181 default.declaring.list: default.declaring.list ',' identifier.declarator . @14 attributes.opt $@15 initializer.opt

    $default  reduce using rule 179 (@14)

    @14  go to state 289


state 170

  168 declaring.list: declaration.specifier error $@8 . attributes.opt initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 291
    attributes      go to state 292
    attribute       go to state 293


state 171

  230 paren.typedef.declarator: '*' '(' . simple.paren.typedef.declarator ')'
  233 paren.postfix.typedef.declarator: '(' . paren.typedef.declarator ')'
  234                                 | '(' . simple.paren.typedef.declarator postfixing.abstract.declarator ')'
  235                                 | '(' . paren.typedef.declarator ')' postfixing.abstract.declarator
  244 clean.postfix.typedef.declarator: '(' . clean.typedef.declarator ')'
  245                                 | '(' . clean.typedef.declarator ')' postfixing.abstract.declarator
  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'
  274 postfix.old.function.declarator: '(' . old.function.declarator ')'
  275                                | '(' . old.function.declarator ')' postfixing.abstract.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 175
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 176

    paren.typedef.declarator          go to state 177
    paren.postfix.typedef.declarator  go to state 91
    simple.paren.typedef.declarator   go to state 294
    clean.typedef.declarator          go to state 179
    clean.postfix.typedef.declarator  go to state 94
    unary.identifier.declarator       go to state 66
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 67
    old.function.declarator           go to state 68
    postfix.old.function.declarator   go to state 50


state 172

  221 pointer.type.qualifier.list: pointer.type.qualifier.list . pointer.type.qualifier
  231 paren.typedef.declarator: '*' pointer.type.qualifier.list . '(' simple.paren.typedef.declarator ')'
  232                         | '*' pointer.type.qualifier.list . paren.typedef.declarator
  243 clean.typedef.declarator: '*' pointer.type.qualifier.list . parameter.typedef.declarator
  264 unary.identifier.declarator: '*' pointer.type.qualifier.list . identifier.declarator
  272 old.function.declarator: '*' pointer.type.qualifier.list . old.function.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 295
    CONST        shift, and go to state 60
    VOLATILE     shift, and go to state 61
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    paren.typedef.declarator          go to state 296
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 297
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 143
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 144
    postfix.old.function.declarator   go to state 50
    pointer.type.qualifier            go to state 145


state 173

  229 paren.typedef.declarator: '*' paren.typedef.declarator .

    $default  reduce using rule 229 (paren.typedef.declarator)


state 174

  242 clean.typedef.declarator: '*' parameter.typedef.declarator .

    $default  reduce using rule 242 (clean.typedef.declarator)


state 175

  233 paren.postfix.typedef.declarator: '(' . paren.typedef.declarator ')'
  234                                 | '(' . simple.paren.typedef.declarator postfixing.abstract.declarator ')'
  235                                 | '(' . paren.typedef.declarator ')' postfixing.abstract.declarator
  237 simple.paren.typedef.declarator: '(' . simple.paren.typedef.declarator ')'
  244 clean.postfix.typedef.declarator: '(' . clean.typedef.declarator ')'
  245                                 | '(' . clean.typedef.declarator ')' postfixing.abstract.declarator
  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'
  274 postfix.old.function.declarator: '(' . old.function.declarator ')'
  275                                | '(' . old.function.declarator ')' postfixing.abstract.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 175
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 176

    paren.typedef.declarator          go to state 177
    paren.postfix.typedef.declarator  go to state 91
    simple.paren.typedef.declarator   go to state 298
    clean.typedef.declarator          go to state 179
    clean.postfix.typedef.declarator  go to state 94
    unary.identifier.declarator       go to state 66
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 67
    old.function.declarator           go to state 68
    postfix.old.function.declarator   go to state 50


state 176

  236 simple.paren.typedef.declarator: TYPEDEFname .

    $default  reduce using rule 236 (simple.paren.typedef.declarator)


state 177

  233 paren.postfix.typedef.declarator: '(' paren.typedef.declarator . ')'
  235                                 | '(' paren.typedef.declarator . ')' postfixing.abstract.declarator

    ')'  shift, and go to state 299


state 178

  234 paren.postfix.typedef.declarator: '(' simple.paren.typedef.declarator . postfixing.abstract.declarator ')'

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    postfixing.abstract.declarator  go to state 300
    array.abstract.declarator       go to state 136


state 179

  244 clean.postfix.typedef.declarator: '(' clean.typedef.declarator . ')'
  245                                 | '(' clean.typedef.declarator . ')' postfixing.abstract.declarator

    ')'  shift, and go to state 301


state 180

  239 parameter.typedef.declarator: TYPEDEFname postfixing.abstract.declarator .

    $default  reduce using rule 239 (parameter.typedef.declarator)


state 181

  160 declaring.list: declaration.specifier declarator $@2 . attributes.opt $@3 initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 302
    attributes      go to state 292
    attribute       go to state 293


state 182

  421 function.definition: declaration.specifier identifier.declarator $@28 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 303


state 183

  431 function.definition: declaration.specifier old.function.declarator $@33 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 304


state 184

  441 function.definition: declaration.specifier old.function.declarator old.function.declaration.list . $@38 compound.statement.no.new.scope

    $default  reduce using rule 440 ($@38)

    $@38  go to state 305


state 185

  183 default.declaring.list: declaration.qualifier.list error $@16 . attributes.opt initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 306
    attributes      go to state 292
    attribute       go to state 293


state 186

  174 default.declaring.list: declaration.qualifier.list identifier.declarator $@10 . attributes.opt $@11 initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 307
    attributes      go to state 292
    attribute       go to state 293


state 187

  425 function.definition: declaration.qualifier.list identifier.declarator $@30 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 308


state 188

  435 function.definition: declaration.qualifier.list old.function.declarator $@35 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 309


state 189

  445 function.definition: declaration.qualifier.list old.function.declarator old.function.declaration.list . $@40 compound.statement.no.new.scope

    $default  reduce using rule 444 ($@40)

    $@40  go to state 310


state 190

  170 declaring.list: type.specifier error $@9 . attributes.opt initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 311
    attributes      go to state 292
    attribute       go to state 293


state 191

  163 declaring.list: type.specifier declarator $@4 . attributes.opt $@5 initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 312
    attributes      go to state 292
    attribute       go to state 293


state 192

  423 function.definition: type.specifier identifier.declarator $@29 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 313


state 193

  433 function.definition: type.specifier old.function.declarator $@34 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 314


state 194

  443 function.definition: type.specifier old.function.declarator old.function.declaration.list . $@39 compound.statement.no.new.scope

    $default  reduce using rule 442 ($@39)

    $@39  go to state 315


state 195

  185 default.declaring.list: type.qualifier.list error $@17 . attributes.opt initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 316
    attributes      go to state 292
    attribute       go to state 293


state 196

  178 default.declaring.list: type.qualifier.list identifier.declarator $@12 . attributes.opt $@13 initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 317
    attributes      go to state 292
    attribute       go to state 293


state 197

  427 function.definition: type.qualifier.list identifier.declarator $@31 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 318


state 198

  437 function.definition: type.qualifier.list old.function.declarator $@36 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 319


state 199

  447 function.definition: type.qualifier.list old.function.declarator old.function.declaration.list . $@41 compound.statement.no.new.scope

    $default  reduce using rule 446 ($@41)

    $@41  go to state 320


state 200

  380 compound.statement.no.new.scope: '{' . '}'
  381                                | '{' . declaration.list '}'
  382                                | '{' . statement.list '}'
  383                                | '{' . declaration.list statement.list '}'

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 323
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 258
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    statement                      go to state 342
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    declaration.list               go to state 346
    statement.list                 go to state 347
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 201

  418 function.definition: identifier.declarator $@27 compound.statement.no.new.scope .

    $default  reduce using rule 418 (function.definition)


state 202

  258 postfixing.abstract.declarator: '(' ')' .

    $default  reduce using rule 258 (postfixing.abstract.declarator)


state 203

  276 identifier.list: IDENTIFIER .

    $default  reduce using rule 276 (identifier.list)


state 204

  306 parameter.type.list: ELLIPSIS .

    $default  reduce using rule 306 (parameter.type.list)


state 205

  311 parameter.declaration: declaration.specifier .
  312                      | declaration.specifier . abstract.declarator
  313                      | declaration.specifier . identifier.declarator
  314                      | declaration.specifier . parameter.typedef.declarator

    '*'          shift, and go to state 352
    '('          shift, and go to state 353
    '['          shift, and go to state 134
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    $default  reduce using rule 311 (parameter.declaration)

    parameter.typedef.declarator      go to state 354
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    abstract.declarator               go to state 355
    unary.abstract.declarator         go to state 356
    postfix.abstract.declarator       go to state 357
    postfixing.abstract.declarator    go to state 358
    identifier.declarator             go to state 359
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 79
    array.abstract.declarator         go to state 136


state 206

  188 declaration.specifier: sue.declaration.specifier .
  196 sue.declaration.specifier: sue.declaration.specifier . declaration.qualifier

    AUTO      shift, and go to state 3
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 188 (declaration.specifier)

    declaration.qualifier  go to state 102
    type.qualifier         go to state 98
    storage.class          go to state 99


state 207

  191 basic.declaration.specifier: declaration.qualifier.list . basic.type.name
  195 sue.declaration.specifier: declaration.qualifier.list . elaborated.type.name
  198 typedef.declaration.specifier: declaration.qualifier.list . TYPEDEFname
  202 declaration.qualifier.list: declaration.qualifier.list . declaration.qualifier
  315 parameter.declaration: declaration.qualifier.list .
  316                      | declaration.qualifier.list . abstract.declarator
  317                      | declaration.qualifier.list . identifier.declarator

    '*'          shift, and go to state 360
    '('          shift, and go to state 361
    '['          shift, and go to state 134
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 105
    INLINE       shift, and go to state 26

    $default  reduce using rule 315 (parameter.declaration)

    declaration.qualifier           go to state 106
    elaborated.type.name            go to state 107
    abstract.declarator             go to state 362
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    identifier.declarator           go to state 363
    unary.identifier.declarator     go to state 46
    postfix.identifier.declarator   go to state 47
    paren.identifier.declarator     go to state 79
    array.abstract.declarator       go to state 136
    struct.or.union.specifier       go to state 51
    struct.or.union                 go to state 52
    enum.specifier                  go to state 53
    type.qualifier                  go to state 98
    storage.class                   go to state 99
    basic.type.name                 go to state 110


state 208

  318 parameter.declaration: type.specifier .
  319                      | type.specifier . abstract.declarator
  320                      | type.specifier . identifier.declarator
  321                      | type.specifier . parameter.typedef.declarator

    '*'          shift, and go to state 352
    '('          shift, and go to state 353
    '['          shift, and go to state 134
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    $default  reduce using rule 318 (parameter.declaration)

    parameter.typedef.declarator      go to state 364
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    abstract.declarator               go to state 365
    unary.abstract.declarator         go to state 356
    postfix.abstract.declarator       go to state 357
    postfixing.abstract.declarator    go to state 358
    identifier.declarator             go to state 366
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 79
    array.abstract.declarator         go to state 136


state 209

  194 sue.declaration.specifier: sue.type.specifier . storage.class
  206 type.specifier: sue.type.specifier .
  214 sue.type.specifier: sue.type.specifier . type.qualifier

    AUTO      shift, and go to state 3
    REGISTER  shift, and go to state 9
    TYPEDEF   shift, and go to state 10
    EXTERN    shift, and go to state 12
    CONST     shift, and go to state 14
    VOLATILE  shift, and go to state 20
    STATIC    shift, and go to state 21
    INLINE    shift, and go to state 26

    $default  reduce using rule 206 (type.specifier)

    type.qualifier  go to state 119
    storage.class   go to state 120


state 210

  201 declaration.qualifier.list: type.qualifier.list . storage.class
  209 basic.type.specifier: type.qualifier.list . basic.type.name
  213 sue.type.specifier: type.qualifier.list . elaborated.type.name
  216 typedef.type.specifier: type.qualifier.list . TYPEDEFname
  219 type.qualifier.list: type.qualifier.list . type.qualifier
  322 parameter.declaration: type.qualifier.list .
  323                      | type.qualifier.list . abstract.declarator
  324                      | type.qualifier.list . identifier.declarator

    '*'          shift, and go to state 360
    '('          shift, and go to state 361
    '['          shift, and go to state 134
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 124
    INLINE       shift, and go to state 26

    $default  reduce using rule 322 (parameter.declaration)

    elaborated.type.name            go to state 125
    abstract.declarator             go to state 367
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    identifier.declarator           go to state 368
    unary.identifier.declarator     go to state 46
    postfix.identifier.declarator   go to state 47
    paren.identifier.declarator     go to state 79
    array.abstract.declarator       go to state 136
    struct.or.union.specifier       go to state 51
    struct.or.union                 go to state 52
    enum.specifier                  go to state 53
    type.qualifier                  go to state 128
    storage.class                   go to state 129
    basic.type.name                 go to state 130


state 211

  273 postfix.old.function.declarator: paren.identifier.declarator '(' identifier.list . ')'
  277 identifier.list: identifier.list . ',' IDENTIFIER

    ')'  shift, and go to state 369
    ','  shift, and go to state 370


state 212

  259 postfixing.abstract.declarator: '(' parameter.type.list . ')'

    ')'  shift, and go to state 371


state 213

  304 parameter.type.list: parameter.list .
  305                    | parameter.list . ',' ELLIPSIS
  308 parameter.list: parameter.list . ',' parameter.declaration
  310               | parameter.list . ',' error

    ','  shift, and go to state 372

    $default  reduce using rule 304 (parameter.type.list)


state 214

  307 parameter.list: parameter.declaration .
  309               | parameter.declaration . '=' initializer

    '='  shift, and go to state 373

    $default  reduce using rule 307 (parameter.list)


state 215

   98 unary.operator: '&' .

    $default  reduce using rule 98 (unary.operator)


state 216

   99 unary.operator: '*' .

    $default  reduce using rule 99 (unary.operator)


state 217

  100 unary.operator: '+' .

    $default  reduce using rule 100 (unary.operator)


state 218

  101 unary.operator: '-' .

    $default  reduce using rule 101 (unary.operator)


state 219

  102 unary.operator: '~' .

    $default  reduce using rule 102 (unary.operator)


state 220

  103 unary.operator: '!' .

    $default  reduce using rule 103 (unary.operator)


state 221

   67 primary.expression: '(' . expression ')'
   68                   | '(' . lblock statement.list rblock ')'
   69                   | '(' . lblock declaration.list statement.list rblock ')'
  105 cast.expression: '(' . type.name ')' cast.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    LONG               shift, and go to state 7
    ENUM               shift, and go to state 8
    CHAR               shift, and go to state 11
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 25
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 374
    type.specifier             go to state 375
    basic.type.specifier       go to state 155
    sue.type.specifier         go to state 156
    typedef.type.specifier     go to state 157
    type.qualifier.list        go to state 376
    elaborated.type.name       go to state 44
    type.name                  go to state 377
    struct.or.union.specifier  go to state 51
    struct.or.union            go to state 52
    enum.specifier             go to state 53
    lblock                     go to state 378
    constant                   go to state 253
    string.literal.list        go to state 254
    type.qualifier             go to state 57
    basic.type.name            go to state 59


state 222

  325 array.abstract.declarator: '[' ']' .

    $default  reduce using rule 325 (array.abstract.declarator)


state 223

   96 unary.expression: SIZEOF . unary.expression
   97                 | SIZEOF . '(' type.name ')'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 379
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 380
    unary.operator       go to state 239
    constant             go to state 253
    string.literal.list  go to state 254


state 224

   78 postfix.expression: SPLITJOIN . '(' IDENTIFIER ')' lblock split.statement splitjoinPipeline.statement.list join.statement rblock
   79                   | SPLITJOIN . '(' IDENTIFIER ')' lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   80                   | SPLITJOIN . '(' IDENTIFIER ')' lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

    '('  shift, and go to state 381


state 225

   81 postfix.expression: PIPELINE . '(' IDENTIFIER ')' lblock splitjoinPipeline.statement.list rblock
   82                   | PIPELINE . '(' IDENTIFIER ')' lblock declaration.list splitjoinPipeline.statement.list rblock

    '('  shift, and go to state 382


state 226

   83 postfix.expression: FILEREADER . '(' ')' operator.arguments

    '('  shift, and go to state 383


state 227

   64 primary.expression: IDENTIFIER .

    $default  reduce using rule 64 (primary.expression)


state 228

  455 string.literal.list: STRINGliteral .

    $default  reduce using rule 455 (string.literal.list)


state 229

  450 constant: FLOATINGconstant .

    $default  reduce using rule 450 (constant)


state 230

  451 constant: INTEGERconstant .

    $default  reduce using rule 451 (constant)


state 231

  452 constant: OCTALconstant .

    $default  reduce using rule 452 (constant)


state 232

  453 constant: HEXconstant .

    $default  reduce using rule 453 (constant)


state 233

  454 constant: CHARACTERconstant .

    $default  reduce using rule 454 (constant)


state 234

   93 unary.expression: ICR . unary.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 384
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 385
    unary.operator       go to state 239
    constant             go to state 253
    string.literal.list  go to state 254


state 235

   94 unary.expression: DECR . unary.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 384
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 386
    unary.operator       go to state 239
    constant             go to state 253
    string.literal.list  go to state 254


state 236

   70 postfix.expression: primary.expression .

    $default  reduce using rule 70 (postfix.expression)


state 237

   71 postfix.expression: postfix.expression . '[' expression ']'
   72                   | postfix.expression . '(' ')'
   73                   | postfix.expression . '(' argument.expression.list ')'
   74                   | postfix.expression . '(' ')' operator.selfdefine.body
   75                   | postfix.expression . '(' argument.expression.list ')' operator.selfdefine.body
   76                   | postfix.expression . '(' ')' operator.arguments
   77                   | postfix.expression . '(' argument.expression.list ')' operator.arguments
   84                   | postfix.expression . '.' IDENTIFIER
   85                   | postfix.expression . ARROW IDENTIFIER
   86                   | postfix.expression . ICR
   87                   | postfix.expression . DECR
   88                   | postfix.expression . '.' TYPEDEFname
   89                   | postfix.expression . ARROW TYPEDEFname
   92 unary.expression: postfix.expression .

    '('    shift, and go to state 387
    '.'    shift, and go to state 388
    '['    shift, and go to state 389
    ARROW  shift, and go to state 390
    ICR    shift, and go to state 391
    DECR   shift, and go to state 392

    $default  reduce using rule 92 (unary.expression)


state 238

  104 cast.expression: unary.expression .

    $default  reduce using rule 104 (cast.expression)


state 239

   95 unary.expression: unary.operator . cast.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 238
    unary.operator       go to state 239
    cast.expression      go to state 393
    constant             go to state 253
    string.literal.list  go to state 254


state 240

  106 multiplicative.expression: cast.expression .

    $default  reduce using rule 106 (multiplicative.expression)


state 241

  107 multiplicative.expression: multiplicative.expression . '*' cast.expression
  108                          | multiplicative.expression . '/' cast.expression
  109                          | multiplicative.expression . '%' cast.expression
  110 additive.expression: multiplicative.expression .

    '*'  shift, and go to state 394
    '%'  shift, and go to state 395
    '/'  shift, and go to state 396

    $default  reduce using rule 110 (additive.expression)


state 242

  111 additive.expression: additive.expression . '+' multiplicative.expression
  112                    | additive.expression . '-' multiplicative.expression
  113 shift.expression: additive.expression .

    '+'  shift, and go to state 397
    '-'  shift, and go to state 398

    $default  reduce using rule 113 (shift.expression)


state 243

  114 shift.expression: shift.expression . LS additive.expression
  115                 | shift.expression . RS additive.expression
  116 relational.expression: shift.expression .

    LS  shift, and go to state 399
    RS  shift, and go to state 400

    $default  reduce using rule 116 (relational.expression)


state 244

  117 relational.expression: relational.expression . '<' shift.expression
  118                      | relational.expression . '>' shift.expression
  119                      | relational.expression . LE shift.expression
  120                      | relational.expression . GE shift.expression
  121 equality.expression: relational.expression .

    '<'  shift, and go to state 401
    '>'  shift, and go to state 402
    LE   shift, and go to state 403
    GE   shift, and go to state 404

    $default  reduce using rule 121 (equality.expression)


state 245

  122 equality.expression: equality.expression . EQ relational.expression
  123                    | equality.expression . NE relational.expression
  124 AND.expression: equality.expression .

    EQ  shift, and go to state 405
    NE  shift, and go to state 406

    $default  reduce using rule 124 (AND.expression)


state 246

  125 AND.expression: AND.expression . '&' equality.expression
  126 exclusive.OR.expression: AND.expression .

    '&'  shift, and go to state 407

    $default  reduce using rule 126 (exclusive.OR.expression)


state 247

  127 exclusive.OR.expression: exclusive.OR.expression . '^' AND.expression
  128 inclusive.OR.expression: exclusive.OR.expression .

    '^'  shift, and go to state 408

    $default  reduce using rule 128 (inclusive.OR.expression)


state 248

  129 inclusive.OR.expression: inclusive.OR.expression . '|' exclusive.OR.expression
  130 logical.AND.expression: inclusive.OR.expression .

    '|'  shift, and go to state 409

    $default  reduce using rule 130 (logical.AND.expression)


state 249

  131 logical.AND.expression: logical.AND.expression . ANDAND inclusive.OR.expression
  132 logical.OR.expression: logical.AND.expression .

    ANDAND  shift, and go to state 410

    $default  reduce using rule 132 (logical.OR.expression)


state 250

  133 logical.OR.expression: logical.OR.expression . OROR logical.AND.expression
  134 conditional.expression: logical.OR.expression .
  135                       | logical.OR.expression . '?' expression ':' conditional.expression

    '?'   shift, and go to state 411
    OROR  shift, and go to state 412

    $default  reduce using rule 134 (conditional.expression)


state 251

  151 constant.expression: conditional.expression .

    $default  reduce using rule 151 (constant.expression)


state 252

  326 array.abstract.declarator: '[' constant.expression . ']'

    ']'  shift, and go to state 413


state 253

   65 primary.expression: constant .

    $default  reduce using rule 65 (primary.expression)


state 254

   66 primary.expression: string.literal.list .
  456 string.literal.list: string.literal.list . STRINGliteral

    STRINGliteral  shift, and go to state 414

    $default  reduce using rule 66 (primary.expression)


state 255

  327 array.abstract.declarator: array.abstract.declarator '[' . constant.expression ']'
  328                          | array.abstract.declarator '[' . ']'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ']'                shift, and go to state 415
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 251
    constant.expression        go to state 416
    constant                   go to state 253
    string.literal.list        go to state 254


state 256

  429 function.definition: old.function.declarator $@32 compound.statement.no.new.scope .

    $default  reduce using rule 429 (function.definition)


state 257

  439 function.definition: old.function.declarator old.function.declaration.list $@37 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 417


state 258

  384 declaration.list: declaration .

    $default  reduce using rule 384 (declaration.list)


state 259

  160 declaring.list: declaration.specifier . declarator $@2 attributes.opt $@3 initializer.opt
  168               | declaration.specifier . error $@8 attributes.opt initializer.opt

    error        shift, and go to state 85
    '*'          shift, and go to state 86
    '('          shift, and go to state 87
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    declarator                        go to state 89
    paren.typedef.declarator          go to state 90
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 92
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 166
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 167
    postfix.old.function.declarator   go to state 50


state 260

  174 default.declaring.list: declaration.qualifier.list . identifier.declarator $@10 attributes.opt $@11 initializer.opt
  183                       | declaration.qualifier.list . error $@16 attributes.opt initializer.opt
  191 basic.declaration.specifier: declaration.qualifier.list . basic.type.name
  195 sue.declaration.specifier: declaration.qualifier.list . elaborated.type.name
  198 typedef.declaration.specifier: declaration.qualifier.list . TYPEDEFname
  202 declaration.qualifier.list: declaration.qualifier.list . declaration.qualifier

    error        shift, and go to state 104
    '*'          shift, and go to state 76
    '('          shift, and go to state 77
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 105
    INLINE       shift, and go to state 26

    declaration.qualifier          go to state 106
    elaborated.type.name           go to state 107
    identifier.declarator          go to state 418
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 98
    storage.class                  go to state 99
    basic.type.name                go to state 110


state 261

  163 declaring.list: type.specifier . declarator $@4 attributes.opt $@5 initializer.opt
  170               | type.specifier . error $@9 attributes.opt initializer.opt

    error        shift, and go to state 111
    '*'          shift, and go to state 86
    '('          shift, and go to state 87
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    declarator                        go to state 112
    paren.typedef.declarator          go to state 90
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 92
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 166
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 167
    postfix.old.function.declarator   go to state 50


state 262

  178 default.declaring.list: type.qualifier.list . identifier.declarator $@12 attributes.opt $@13 initializer.opt
  185                       | type.qualifier.list . error $@17 attributes.opt initializer.opt
  201 declaration.qualifier.list: type.qualifier.list . storage.class
  209 basic.type.specifier: type.qualifier.list . basic.type.name
  213 sue.type.specifier: type.qualifier.list . elaborated.type.name
  216 typedef.type.specifier: type.qualifier.list . TYPEDEFname
  219 type.qualifier.list: type.qualifier.list . type.qualifier

    error        shift, and go to state 123
    '*'          shift, and go to state 76
    '('          shift, and go to state 77
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 124
    INLINE       shift, and go to state 26

    elaborated.type.name           go to state 125
    identifier.declarator          go to state 419
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 128
    storage.class                  go to state 129
    basic.type.name                go to state 130


state 263

  385 declaration.list: declaration.list . declaration
  449 old.function.declaration.list: $@42 declaration.list .

    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    STREAM       shift, and go to state 23
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    $default  reduce using rule 449 (old.function.declaration.list)

    stream.type.specifier          go to state 28
    declaration                    go to state 420
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 264

  332 struct.or.union.specifier: struct.or.union '{' '}' .

    $default  reduce using rule 332 (struct.or.union.specifier)


state 265

  342 struct.declaring.list: type.specifier . struct.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 87
    ':'          shift, and go to state 421
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    declarator                        go to state 422
    paren.typedef.declarator          go to state 90
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 92
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 166
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 167
    postfix.old.function.declarator   go to state 50
    struct.declarator                 go to state 423
    bit.field.size                    go to state 424


state 266

  209 basic.type.specifier: type.qualifier.list . basic.type.name
  213 sue.type.specifier: type.qualifier.list . elaborated.type.name
  216 typedef.type.specifier: type.qualifier.list . TYPEDEFname
  219 type.qualifier.list: type.qualifier.list . type.qualifier
  340 struct.default.declaring.list: type.qualifier.list . struct.identifier.declarator

    '*'          shift, and go to state 76
    '('          shift, and go to state 77
    ':'          shift, and go to state 421
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 124
    INLINE       shift, and go to state 26

    elaborated.type.name           go to state 125
    identifier.declarator          go to state 425
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    struct.identifier.declarator   go to state 426
    bit.field.size                 go to state 427
    enum.specifier                 go to state 53
    type.qualifier                 go to state 128
    basic.type.name                go to state 130


state 267

  329 struct.or.union.specifier: struct.or.union '{' struct.declaration.list . '}'
  337 struct.declaration.list: struct.declaration.list . struct.declaration

    '}'          shift, and go to state 428
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    type.specifier                 go to state 265
    basic.type.specifier           go to state 155
    sue.type.specifier             go to state 156
    typedef.type.specifier         go to state 157
    type.qualifier.list            go to state 266
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    struct.declaration             go to state 429
    struct.default.declaring.list  go to state 269
    struct.declaring.list          go to state 270
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    basic.type.name                go to state 59


state 268

  336 struct.declaration.list: struct.declaration .

    $default  reduce using rule 336 (struct.declaration.list)


state 269

  339 struct.declaration: struct.default.declaring.list . ';'
  341 struct.default.declaring.list: struct.default.declaring.list . ',' struct.identifier.declarator

    ';'  shift, and go to state 430
    ','  shift, and go to state 431


state 270

  338 struct.declaration: struct.declaring.list . ';'
  343 struct.declaring.list: struct.declaring.list . ',' struct.declarator

    ';'  shift, and go to state 432
    ','  shift, and go to state 433


state 271

  330 struct.or.union.specifier: struct.or.union identifier.or.typedef.name '{' . struct.declaration.list '}'
  333                          | struct.or.union identifier.or.typedef.name '{' . '}'

    '}'          shift, and go to state 434
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    type.specifier                 go to state 265
    basic.type.specifier           go to state 155
    sue.type.specifier             go to state 156
    typedef.type.specifier         go to state 157
    type.qualifier.list            go to state 266
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    struct.declaration.list        go to state 435
    struct.declaration             go to state 268
    struct.default.declaring.list  go to state 269
    struct.declaring.list          go to state 270
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    basic.type.name                go to state 59


state 272

  267 postfix.identifier.declarator: '(' unary.identifier.declarator ')' postfixing.abstract.declarator .

    $default  reduce using rule 267 (postfix.identifier.declarator)


state 273

  275 postfix.old.function.declarator: '(' old.function.declarator ')' postfixing.abstract.declarator .

    $default  reduce using rule 275 (postfix.old.function.declarator)


state 274

  357 enumerator.value.opt: '=' . constant.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 251
    constant.expression        go to state 436
    constant                   go to state 253
    string.literal.list        go to state 254


state 275

  354 enumerator.list: identifier.or.typedef.name enumerator.value.opt .

    $default  reduce using rule 354 (enumerator.list)


state 276

  355 enumerator.list: enumerator.list ',' . identifier.or.typedef.name enumerator.value.opt
  359 comma.opt: ',' .

    IDENTIFIER   shift, and go to state 70
    TYPEDEFname  shift, and go to state 71

    $default  reduce using rule 359 (comma.opt)

    identifier.or.typedef.name  go to state 437


state 277

  351 enum.specifier: ENUM '{' enumerator.list comma.opt . '}'

    '}'  shift, and go to state 438


state 278

  352 enum.specifier: ENUM identifier.or.typedef.name '{' enumerator.list . comma.opt '}'
  355 enumerator.list: enumerator.list . ',' identifier.or.typedef.name enumerator.value.opt

    ','  shift, and go to state 276

    $default  reduce using rule 358 (comma.opt)

    comma.opt  go to state 439


state 279

   11 composite.head.inout: INPUT . composite.head.inout.member.list ',' OUTPUT composite.head.inout.member.list
   12                     | INPUT . composite.head.inout.member.list

    STREAM  shift, and go to state 23

    stream.type.specifier             go to state 440
    composite.head.inout.member.list  go to state 441
    composite.head.inout.member       go to state 442


state 280

   13 composite.head.inout: OUTPUT . composite.head.inout.member.list
   14                     | OUTPUT . composite.head.inout.member.list ',' INPUT composite.head.inout.member.list

    STREAM  shift, and go to state 23

    stream.type.specifier             go to state 440
    composite.head.inout.member.list  go to state 443
    composite.head.inout.member       go to state 442


state 281

    9 composite.head: COMPOSITE IDENTIFIER '(' composite.head.inout . ')'

    ')'  shift, and go to state 444


state 282

    2 stream.type.specifier: STREAM '<' stream.declaration.list '>' .

    $default  reduce using rule 2 (stream.type.specifier)


state 283

    5 stream.declaration.list: stream.declaration.list ',' . type.specifier paren.identifier.declarator
    6                        | stream.declaration.list ',' . type.specifier paren.identifier.declarator postfixing.abstract.declarator

    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    type.specifier             go to state 445
    basic.type.specifier       go to state 155
    sue.type.specifier         go to state 156
    typedef.type.specifier     go to state 157
    type.qualifier.list        go to state 158
    elaborated.type.name       go to state 44
    struct.or.union.specifier  go to state 51
    struct.or.union            go to state 52
    enum.specifier             go to state 53
    type.qualifier             go to state 57
    basic.type.name            go to state 59


state 284

  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'

    '('         shift, and go to state 284
    IDENTIFIER  shift, and go to state 24

    paren.identifier.declarator  go to state 446


state 285

    3 stream.declaration.list: type.specifier paren.identifier.declarator .
    4                        | type.specifier paren.identifier.declarator . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 3 (stream.declaration.list)

    postfixing.abstract.declarator  go to state 447
    array.abstract.declarator       go to state 136


state 286

   21 composite.body.param.opt: PARAM . parameter.list ';'

    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    declaration.specifier          go to state 205
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 206
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 207
    type.specifier                 go to state 208
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 209
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 210
    elaborated.type.name           go to state 44
    parameter.list                 go to state 448
    parameter.declaration          go to state 214
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 287

   18 composite.body.no.new.scope: '{' composite.body.param.opt . composite.body.statement.list '}'
   19                            | '{' composite.body.param.opt . declaration.list composite.body.statement.list '}'

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    composite.body.statement.list  go to state 451
    composite.body.operator        go to state 452
    operator.file.writer           go to state 453
    operator.add                   go to state 454
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 258
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    costream.composite.statement   go to state 455
    statement                      go to state 456
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    declaration.list               go to state 457
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 288

  166 declaring.list: declaring.list ',' declarator @6 . attributes.opt $@7 initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 458
    attributes      go to state 292
    attribute       go to state 293


state 289

  181 default.declaring.list: default.declaring.list ',' identifier.declarator @14 . attributes.opt $@15 initializer.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 459
    attributes      go to state 292
    attribute       go to state 293


state 290

  288 attribute: ATTRIBUTE . '(' '(' attribute.list ')' ')'

    '('  shift, and go to state 460


state 291

  168 declaring.list: declaration.specifier error $@8 attributes.opt . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 462


state 292

  285 attributes.opt: attributes .
  287 attributes: attributes . attribute

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 285 (attributes.opt)

    attribute  go to state 463


state 293

  286 attributes: attribute .

    $default  reduce using rule 286 (attributes)


state 294

  230 paren.typedef.declarator: '*' '(' simple.paren.typedef.declarator . ')'
  234 paren.postfix.typedef.declarator: '(' simple.paren.typedef.declarator . postfixing.abstract.declarator ')'

    '('  shift, and go to state 161
    ')'  shift, and go to state 464
    '['  shift, and go to state 134

    postfixing.abstract.declarator  go to state 300
    array.abstract.declarator       go to state 136


state 295

  231 paren.typedef.declarator: '*' pointer.type.qualifier.list '(' . simple.paren.typedef.declarator ')'
  233 paren.postfix.typedef.declarator: '(' . paren.typedef.declarator ')'
  234                                 | '(' . simple.paren.typedef.declarator postfixing.abstract.declarator ')'
  235                                 | '(' . paren.typedef.declarator ')' postfixing.abstract.declarator
  244 clean.postfix.typedef.declarator: '(' . clean.typedef.declarator ')'
  245                                 | '(' . clean.typedef.declarator ')' postfixing.abstract.declarator
  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'
  274 postfix.old.function.declarator: '(' . old.function.declarator ')'
  275                                | '(' . old.function.declarator ')' postfixing.abstract.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 175
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 176

    paren.typedef.declarator          go to state 177
    paren.postfix.typedef.declarator  go to state 91
    simple.paren.typedef.declarator   go to state 465
    clean.typedef.declarator          go to state 179
    clean.postfix.typedef.declarator  go to state 94
    unary.identifier.declarator       go to state 66
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 67
    old.function.declarator           go to state 68
    postfix.old.function.declarator   go to state 50


state 296

  232 paren.typedef.declarator: '*' pointer.type.qualifier.list paren.typedef.declarator .

    $default  reduce using rule 232 (paren.typedef.declarator)


state 297

  243 clean.typedef.declarator: '*' pointer.type.qualifier.list parameter.typedef.declarator .

    $default  reduce using rule 243 (clean.typedef.declarator)


state 298

  234 paren.postfix.typedef.declarator: '(' simple.paren.typedef.declarator . postfixing.abstract.declarator ')'
  237 simple.paren.typedef.declarator: '(' simple.paren.typedef.declarator . ')'

    '('  shift, and go to state 161
    ')'  shift, and go to state 466
    '['  shift, and go to state 134

    postfixing.abstract.declarator  go to state 300
    array.abstract.declarator       go to state 136


state 299

  233 paren.postfix.typedef.declarator: '(' paren.typedef.declarator ')' .
  235                                 | '(' paren.typedef.declarator ')' . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 233 (paren.postfix.typedef.declarator)

    postfixing.abstract.declarator  go to state 467
    array.abstract.declarator       go to state 136


state 300

  234 paren.postfix.typedef.declarator: '(' simple.paren.typedef.declarator postfixing.abstract.declarator . ')'

    ')'  shift, and go to state 468


state 301

  244 clean.postfix.typedef.declarator: '(' clean.typedef.declarator ')' .
  245                                 | '(' clean.typedef.declarator ')' . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 244 (clean.postfix.typedef.declarator)

    postfixing.abstract.declarator  go to state 469
    array.abstract.declarator       go to state 136


state 302

  160 declaring.list: declaration.specifier declarator $@2 attributes.opt . $@3 initializer.opt

    $default  reduce using rule 159 ($@3)

    $@3  go to state 470


state 303

  421 function.definition: declaration.specifier identifier.declarator $@28 compound.statement.no.new.scope .

    $default  reduce using rule 421 (function.definition)


state 304

  431 function.definition: declaration.specifier old.function.declarator $@33 compound.statement.no.new.scope .

    $default  reduce using rule 431 (function.definition)


state 305

  441 function.definition: declaration.specifier old.function.declarator old.function.declaration.list $@38 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 471


state 306

  183 default.declaring.list: declaration.qualifier.list error $@16 attributes.opt . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 472


state 307

  174 default.declaring.list: declaration.qualifier.list identifier.declarator $@10 attributes.opt . $@11 initializer.opt

    $default  reduce using rule 173 ($@11)

    $@11  go to state 473


state 308

  425 function.definition: declaration.qualifier.list identifier.declarator $@30 compound.statement.no.new.scope .

    $default  reduce using rule 425 (function.definition)


state 309

  435 function.definition: declaration.qualifier.list old.function.declarator $@35 compound.statement.no.new.scope .

    $default  reduce using rule 435 (function.definition)


state 310

  445 function.definition: declaration.qualifier.list old.function.declarator old.function.declaration.list $@40 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 474


state 311

  170 declaring.list: type.specifier error $@9 attributes.opt . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 475


state 312

  163 declaring.list: type.specifier declarator $@4 attributes.opt . $@5 initializer.opt

    $default  reduce using rule 162 ($@5)

    $@5  go to state 476


state 313

  423 function.definition: type.specifier identifier.declarator $@29 compound.statement.no.new.scope .

    $default  reduce using rule 423 (function.definition)


state 314

  433 function.definition: type.specifier old.function.declarator $@34 compound.statement.no.new.scope .

    $default  reduce using rule 433 (function.definition)


state 315

  443 function.definition: type.specifier old.function.declarator old.function.declaration.list $@39 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 477


state 316

  185 default.declaring.list: type.qualifier.list error $@17 attributes.opt . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 478


state 317

  178 default.declaring.list: type.qualifier.list identifier.declarator $@12 attributes.opt . $@13 initializer.opt

    $default  reduce using rule 177 ($@13)

    $@13  go to state 479


state 318

  427 function.definition: type.qualifier.list identifier.declarator $@31 compound.statement.no.new.scope .

    $default  reduce using rule 427 (function.definition)


state 319

  437 function.definition: type.qualifier.list old.function.declarator $@36 compound.statement.no.new.scope .

    $default  reduce using rule 437 (function.definition)


state 320

  447 function.definition: type.qualifier.list old.function.declarator old.function.declaration.list $@41 . compound.statement.no.new.scope

    '{'  shift, and go to state 200

    compound.statement.no.new.scope  go to state 480


state 321

  368 statement: error . ';'

    ';'  shift, and go to state 481


state 322

  378 lblock: '{' .

    $default  reduce using rule 378 (lblock)


state 323

  380 compound.statement.no.new.scope: '{' '}' .

    $default  reduce using rule 380 (compound.statement.no.new.scope)


state 324

  409 jump.statement: BREAK . ';'

    ';'  shift, and go to state 482


state 325

  392 selection.statement: SWITCH . $@19 '(' expression ')' statement

    $default  reduce using rule 391 ($@19)

    $@19  go to state 483


state 326

  371 labeled.statement: CASE . constant.expression ':' statement

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 251
    constant.expression        go to state 484
    constant                   go to state 253
    string.literal.list        go to state 254


state 327

  410 jump.statement: RETURN . expression.opt ';'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    $default  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 485
    constant                   go to state 253
    string.literal.list        go to state 254


state 328

  408 jump.statement: CONTINUE . ';'

    ';'  shift, and go to state 486


state 329

  398 iteration.statement: FOR . '(' expression.opt ';' expression.opt ';' expression.opt ')' $@22 costream.composite.statement
  400                    | FOR . '(' error ';' expression.opt ';' expression.opt ')' $@23 costream.composite.statement
  402                    | FOR . '(' expression.opt ';' expression.opt ';' error ')' $@24 costream.composite.statement
  404                    | FOR . '(' expression.opt ';' error ';' expression.opt ')' $@25 costream.composite.statement
  406                    | FOR . '(' error ')' $@26 costream.composite.statement

    '('  shift, and go to state 487


state 330

  372 labeled.statement: DEFAULT . ':' statement

    ':'  shift, and go to state 488


state 331

  407 jump.statement: GOTO . IDENTIFIER ';'
  411               | GOTO . TYPEDEFname ';'

    IDENTIFIER   shift, and go to state 489
    TYPEDEFname  shift, and go to state 490


state 332

  396 iteration.statement: DO . $@21 statement WHILE '(' expression ')' ';'

    $default  reduce using rule 395 ($@21)

    $@21  go to state 491


state 333

  389 selection.statement: IF . '(' expression ')' costream.composite.statement
  390                    | IF . '(' expression ')' costream.composite.statement ELSE costream.composite.statement

    '('  shift, and go to state 492


state 334

  394 iteration.statement: WHILE . $@20 '(' expression ')' statement

    $default  reduce using rule 393 ($@20)

    $@20  go to state 493


state 335

   64 primary.expression: IDENTIFIER .
  370 labeled.statement: IDENTIFIER . ':' @18 statement

    ':'  shift, and go to state 494

    $default  reduce using rule 64 (primary.expression)


state 336

  215 typedef.type.specifier: TYPEDEFname .
  373 labeled.statement: TYPEDEFname . ':' statement

    ':'  shift, and go to state 495

    $default  reduce using rule 215 (typedef.type.specifier)


state 337

  104 cast.expression: unary.expression .
  137 assignment.expression: unary.expression . assignment.operator assignment.expression

    '='          shift, and go to state 496
    MULTassign   shift, and go to state 497
    DIVassign    shift, and go to state 498
    MODassign    shift, and go to state 499
    PLUSassign   shift, and go to state 500
    MINUSassign  shift, and go to state 501
    LSassign     shift, and go to state 502
    RSassign     shift, and go to state 503
    ANDassign    shift, and go to state 504
    ERassign     shift, and go to state 505
    ORassign     shift, and go to state 506

    $default  reduce using rule 104 (cast.expression)

    assignment.operator  go to state 507


state 338

  136 assignment.expression: conditional.expression .

    $default  reduce using rule 136 (assignment.expression)


state 339

  149 expression: assignment.expression .

    $default  reduce using rule 149 (expression)


state 340

  150 expression: expression . ',' assignment.expression
  153 expression.opt: expression .

    ','  shift, and go to state 508

    $default  reduce using rule 153 (expression.opt)


state 341

  388 expression.statement: expression.opt . ';'

    ';'  shift, and go to state 509


state 342

  386 statement.list: statement .

    $default  reduce using rule 386 (statement.list)


state 343

  362 statement: labeled.statement .

    $default  reduce using rule 362 (statement)


state 344

  363 statement: compound.statement .

    $default  reduce using rule 363 (statement)


state 345

  374 compound.statement: lblock . rblock
  375                   | lblock . declaration.list rblock
  376                   | lblock . composite.body.statement.list rblock
  377                   | lblock . declaration.list composite.body.statement.list rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    composite.body.statement.list  go to state 511
    composite.body.operator        go to state 452
    operator.file.writer           go to state 453
    operator.add                   go to state 454
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 258
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    costream.composite.statement   go to state 455
    statement                      go to state 456
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    rblock                         go to state 512
    declaration.list               go to state 513
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 346

  381 compound.statement.no.new.scope: '{' declaration.list . '}'
  383                                | '{' declaration.list . statement.list '}'
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 514
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 420
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    statement                      go to state 342
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    statement.list                 go to state 515
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 347

  382 compound.statement.no.new.scope: '{' statement.list . '}'
  387 statement.list: statement.list . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 516
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 518
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 348

  364 statement: expression.statement .

    $default  reduce using rule 364 (statement)


state 349

  365 statement: selection.statement .

    $default  reduce using rule 365 (statement)


state 350

  366 statement: iteration.statement .

    $default  reduce using rule 366 (statement)


state 351

  367 statement: jump.statement .

    $default  reduce using rule 367 (statement)


state 352

  242 clean.typedef.declarator: '*' . parameter.typedef.declarator
  243                         | '*' . pointer.type.qualifier.list parameter.typedef.declarator
  249 unary.abstract.declarator: '*' .
  250                          | '*' . pointer.type.qualifier.list
  251                          | '*' . abstract.declarator
  252                          | '*' . pointer.type.qualifier.list abstract.declarator
  263 unary.identifier.declarator: '*' . identifier.declarator
  264                            | '*' . pointer.type.qualifier.list identifier.declarator

    '*'          shift, and go to state 352
    '('          shift, and go to state 353
    '['          shift, and go to state 134
    CONST        shift, and go to state 60
    VOLATILE     shift, and go to state 61
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    $default  reduce using rule 249 (unary.abstract.declarator)

    pointer.type.qualifier.list       go to state 519
    parameter.typedef.declarator      go to state 174
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    abstract.declarator               go to state 520
    unary.abstract.declarator         go to state 356
    postfix.abstract.declarator       go to state 357
    postfixing.abstract.declarator    go to state 358
    identifier.declarator             go to state 63
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 79
    array.abstract.declarator         go to state 136
    pointer.type.qualifier            go to state 65


state 353

  244 clean.postfix.typedef.declarator: '(' . clean.typedef.declarator ')'
  245                                 | '(' . clean.typedef.declarator ')' postfixing.abstract.declarator
  253 postfix.abstract.declarator: '(' . unary.abstract.declarator ')'
  254                            | '(' . postfix.abstract.declarator ')'
  255                            | '(' . postfixing.abstract.declarator ')'
  256                            | '(' . unary.abstract.declarator ')' postfixing.abstract.declarator
  258 postfixing.abstract.declarator: '(' . ')'
  259                               | '(' . parameter.type.list ')'
  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'

    '*'          shift, and go to state 352
    '('          shift, and go to state 353
    ')'          shift, and go to state 202
    '['          shift, and go to state 134
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 25
    ELLIPSIS     shift, and go to state 204
    INLINE       shift, and go to state 26

    declaration.specifier             go to state 205
    basic.declaration.specifier       go to state 35
    sue.declaration.specifier         go to state 206
    typedef.declaration.specifier     go to state 37
    declaration.qualifier.list        go to state 207
    type.specifier                    go to state 208
    basic.type.specifier              go to state 40
    sue.type.specifier                go to state 209
    typedef.type.specifier            go to state 42
    type.qualifier.list               go to state 210
    elaborated.type.name              go to state 44
    clean.typedef.declarator          go to state 179
    clean.postfix.typedef.declarator  go to state 94
    unary.abstract.declarator         go to state 521
    postfix.abstract.declarator       go to state 522
    postfixing.abstract.declarator    go to state 523
    unary.identifier.declarator       go to state 66
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 160
    parameter.type.list               go to state 212
    parameter.list                    go to state 213
    parameter.declaration             go to state 214
    array.abstract.declarator         go to state 136
    struct.or.union.specifier         go to state 51
    struct.or.union                   go to state 52
    enum.specifier                    go to state 53
    type.qualifier                    go to state 57
    storage.class                     go to state 58
    basic.type.name                   go to state 59


state 354

  314 parameter.declaration: declaration.specifier parameter.typedef.declarator .

    $default  reduce using rule 314 (parameter.declaration)


state 355

  312 parameter.declaration: declaration.specifier abstract.declarator .

    $default  reduce using rule 312 (parameter.declaration)


state 356

  246 abstract.declarator: unary.abstract.declarator .

    $default  reduce using rule 246 (abstract.declarator)


state 357

  247 abstract.declarator: postfix.abstract.declarator .

    $default  reduce using rule 247 (abstract.declarator)


state 358

  248 abstract.declarator: postfixing.abstract.declarator .

    $default  reduce using rule 248 (abstract.declarator)


state 359

  313 parameter.declaration: declaration.specifier identifier.declarator .

    $default  reduce using rule 313 (parameter.declaration)


state 360

  249 unary.abstract.declarator: '*' .
  250                          | '*' . pointer.type.qualifier.list
  251                          | '*' . abstract.declarator
  252                          | '*' . pointer.type.qualifier.list abstract.declarator
  263 unary.identifier.declarator: '*' . identifier.declarator
  264                            | '*' . pointer.type.qualifier.list identifier.declarator

    '*'         shift, and go to state 360
    '('         shift, and go to state 361
    '['         shift, and go to state 134
    CONST       shift, and go to state 60
    VOLATILE    shift, and go to state 61
    IDENTIFIER  shift, and go to state 24

    $default  reduce using rule 249 (unary.abstract.declarator)

    pointer.type.qualifier.list     go to state 524
    abstract.declarator             go to state 520
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    identifier.declarator           go to state 63
    unary.identifier.declarator     go to state 46
    postfix.identifier.declarator   go to state 47
    paren.identifier.declarator     go to state 79
    array.abstract.declarator       go to state 136
    pointer.type.qualifier          go to state 65


state 361

  253 postfix.abstract.declarator: '(' . unary.abstract.declarator ')'
  254                            | '(' . postfix.abstract.declarator ')'
  255                            | '(' . postfixing.abstract.declarator ')'
  256                            | '(' . unary.abstract.declarator ')' postfixing.abstract.declarator
  258 postfixing.abstract.declarator: '(' . ')'
  259                               | '(' . parameter.type.list ')'
  266 postfix.identifier.declarator: '(' . unary.identifier.declarator ')'
  267                              | '(' . unary.identifier.declarator ')' postfixing.abstract.declarator
  269 paren.identifier.declarator: '(' . paren.identifier.declarator ')'

    '*'          shift, and go to state 360
    '('          shift, and go to state 361
    ')'          shift, and go to state 202
    '['          shift, and go to state 134
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 25
    ELLIPSIS     shift, and go to state 204
    INLINE       shift, and go to state 26

    declaration.specifier           go to state 205
    basic.declaration.specifier     go to state 35
    sue.declaration.specifier       go to state 206
    typedef.declaration.specifier   go to state 37
    declaration.qualifier.list      go to state 207
    type.specifier                  go to state 208
    basic.type.specifier            go to state 40
    sue.type.specifier              go to state 209
    typedef.type.specifier          go to state 42
    type.qualifier.list             go to state 210
    elaborated.type.name            go to state 44
    unary.abstract.declarator       go to state 521
    postfix.abstract.declarator     go to state 522
    postfixing.abstract.declarator  go to state 523
    unary.identifier.declarator     go to state 66
    postfix.identifier.declarator   go to state 47
    paren.identifier.declarator     go to state 160
    parameter.type.list             go to state 212
    parameter.list                  go to state 213
    parameter.declaration           go to state 214
    array.abstract.declarator       go to state 136
    struct.or.union.specifier       go to state 51
    struct.or.union                 go to state 52
    enum.specifier                  go to state 53
    type.qualifier                  go to state 57
    storage.class                   go to state 58
    basic.type.name                 go to state 59


state 362

  316 parameter.declaration: declaration.qualifier.list abstract.declarator .

    $default  reduce using rule 316 (parameter.declaration)


state 363

  317 parameter.declaration: declaration.qualifier.list identifier.declarator .

    $default  reduce using rule 317 (parameter.declaration)


state 364

  321 parameter.declaration: type.specifier parameter.typedef.declarator .

    $default  reduce using rule 321 (parameter.declaration)


state 365

  319 parameter.declaration: type.specifier abstract.declarator .

    $default  reduce using rule 319 (parameter.declaration)


state 366

  320 parameter.declaration: type.specifier identifier.declarator .

    $default  reduce using rule 320 (parameter.declaration)


state 367

  323 parameter.declaration: type.qualifier.list abstract.declarator .

    $default  reduce using rule 323 (parameter.declaration)


state 368

  324 parameter.declaration: type.qualifier.list identifier.declarator .

    $default  reduce using rule 324 (parameter.declaration)


state 369

  273 postfix.old.function.declarator: paren.identifier.declarator '(' identifier.list ')' .

    $default  reduce using rule 273 (postfix.old.function.declarator)


state 370

  277 identifier.list: identifier.list ',' . IDENTIFIER

    IDENTIFIER  shift, and go to state 525


state 371

  259 postfixing.abstract.declarator: '(' parameter.type.list ')' .

    $default  reduce using rule 259 (postfixing.abstract.declarator)


state 372

  305 parameter.type.list: parameter.list ',' . ELLIPSIS
  308 parameter.list: parameter.list ',' . parameter.declaration
  310               | parameter.list ',' . error

    error        shift, and go to state 526
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    TYPEDEFname  shift, and go to state 25
    ELLIPSIS     shift, and go to state 527
    INLINE       shift, and go to state 26

    declaration.specifier          go to state 205
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 206
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 207
    type.specifier                 go to state 208
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 209
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 210
    elaborated.type.name           go to state 44
    parameter.declaration          go to state 528
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 373

  309 parameter.list: parameter.declaration '=' . initializer

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 529
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 530
    initializer                go to state 531
    constant                   go to state 253
    string.literal.list        go to state 254


state 374

   67 primary.expression: '(' expression . ')'
  150 expression: expression . ',' assignment.expression

    ')'  shift, and go to state 532
    ','  shift, and go to state 508


state 375

  280 type.name: type.specifier .
  281          | type.specifier . abstract.declarator

    '*'  shift, and go to state 533
    '('  shift, and go to state 534
    '['  shift, and go to state 134

    $default  reduce using rule 280 (type.name)

    abstract.declarator             go to state 535
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    array.abstract.declarator       go to state 136


state 376

  209 basic.type.specifier: type.qualifier.list . basic.type.name
  213 sue.type.specifier: type.qualifier.list . elaborated.type.name
  216 typedef.type.specifier: type.qualifier.list . TYPEDEFname
  219 type.qualifier.list: type.qualifier.list . type.qualifier
  282 type.name: type.qualifier.list .
  283          | type.qualifier.list . abstract.declarator

    '*'          shift, and go to state 533
    '('          shift, and go to state 534
    '['          shift, and go to state 134
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 124
    INLINE       shift, and go to state 26

    $default  reduce using rule 282 (type.name)

    elaborated.type.name            go to state 125
    abstract.declarator             go to state 536
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    array.abstract.declarator       go to state 136
    struct.or.union.specifier       go to state 51
    struct.or.union                 go to state 52
    enum.specifier                  go to state 53
    type.qualifier                  go to state 128
    basic.type.name                 go to state 130


state 377

  105 cast.expression: '(' type.name . ')' cast.expression

    ')'  shift, and go to state 537


state 378

   68 primary.expression: '(' lblock . statement.list rblock ')'
   69                   | '(' lblock . declaration.list statement.list rblock ')'

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 258
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    statement                      go to state 342
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    declaration.list               go to state 538
    statement.list                 go to state 539
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 379

   67 primary.expression: '(' . expression ')'
   68                   | '(' . lblock statement.list rblock ')'
   69                   | '(' . lblock declaration.list statement.list rblock ')'
   97 unary.expression: SIZEOF '(' . type.name ')'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    LONG               shift, and go to state 7
    ENUM               shift, and go to state 8
    CHAR               shift, and go to state 11
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 25
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 374
    type.specifier             go to state 375
    basic.type.specifier       go to state 155
    sue.type.specifier         go to state 156
    typedef.type.specifier     go to state 157
    type.qualifier.list        go to state 376
    elaborated.type.name       go to state 44
    type.name                  go to state 540
    struct.or.union.specifier  go to state 51
    struct.or.union            go to state 52
    enum.specifier             go to state 53
    lblock                     go to state 378
    constant                   go to state 253
    string.literal.list        go to state 254
    type.qualifier             go to state 57
    basic.type.name            go to state 59


state 380

   96 unary.expression: SIZEOF unary.expression .

    $default  reduce using rule 96 (unary.expression)


state 381

   78 postfix.expression: SPLITJOIN '(' . IDENTIFIER ')' lblock split.statement splitjoinPipeline.statement.list join.statement rblock
   79                   | SPLITJOIN '(' . IDENTIFIER ')' lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   80                   | SPLITJOIN '(' . IDENTIFIER ')' lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

    IDENTIFIER  shift, and go to state 541


state 382

   81 postfix.expression: PIPELINE '(' . IDENTIFIER ')' lblock splitjoinPipeline.statement.list rblock
   82                   | PIPELINE '(' . IDENTIFIER ')' lblock declaration.list splitjoinPipeline.statement.list rblock

    IDENTIFIER  shift, and go to state 542


state 383

   83 postfix.expression: FILEREADER '(' . ')' operator.arguments

    ')'  shift, and go to state 543


state 384

   67 primary.expression: '(' . expression ')'
   68                   | '(' . lblock statement.list rblock ')'
   69                   | '(' . lblock declaration.list statement.list rblock ')'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 374
    lblock                     go to state 378
    constant                   go to state 253
    string.literal.list        go to state 254


state 385

   93 unary.expression: ICR unary.expression .

    $default  reduce using rule 93 (unary.expression)


state 386

   94 unary.expression: DECR unary.expression .

    $default  reduce using rule 94 (unary.expression)


state 387

   72 postfix.expression: postfix.expression '(' . ')'
   73                   | postfix.expression '(' . argument.expression.list ')'
   74                   | postfix.expression '(' . ')' operator.selfdefine.body
   75                   | postfix.expression '(' . argument.expression.list ')' operator.selfdefine.body
   76                   | postfix.expression '(' . ')' operator.arguments
   77                   | postfix.expression '(' . argument.expression.list ')' operator.arguments

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ')'                shift, and go to state 544
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    argument.expression.list   go to state 545
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 546
    constant                   go to state 253
    string.literal.list        go to state 254


state 388

   84 postfix.expression: postfix.expression '.' . IDENTIFIER
   88                   | postfix.expression '.' . TYPEDEFname

    IDENTIFIER   shift, and go to state 547
    TYPEDEFname  shift, and go to state 548


state 389

   71 postfix.expression: postfix.expression '[' . expression ']'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 549
    constant                   go to state 253
    string.literal.list        go to state 254


state 390

   85 postfix.expression: postfix.expression ARROW . IDENTIFIER
   89                   | postfix.expression ARROW . TYPEDEFname

    IDENTIFIER   shift, and go to state 550
    TYPEDEFname  shift, and go to state 551


state 391

   86 postfix.expression: postfix.expression ICR .

    $default  reduce using rule 86 (postfix.expression)


state 392

   87 postfix.expression: postfix.expression DECR .

    $default  reduce using rule 87 (postfix.expression)


state 393

   95 unary.expression: unary.operator cast.expression .

    $default  reduce using rule 95 (unary.expression)


state 394

  107 multiplicative.expression: multiplicative.expression '*' . cast.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 238
    unary.operator       go to state 239
    cast.expression      go to state 552
    constant             go to state 253
    string.literal.list  go to state 254


state 395

  109 multiplicative.expression: multiplicative.expression '%' . cast.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 238
    unary.operator       go to state 239
    cast.expression      go to state 553
    constant             go to state 253
    string.literal.list  go to state 254


state 396

  108 multiplicative.expression: multiplicative.expression '/' . cast.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 238
    unary.operator       go to state 239
    cast.expression      go to state 554
    constant             go to state 253
    string.literal.list  go to state 254


state 397

  111 additive.expression: additive.expression '+' . multiplicative.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 555
    constant                   go to state 253
    string.literal.list        go to state 254


state 398

  112 additive.expression: additive.expression '-' . multiplicative.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 556
    constant                   go to state 253
    string.literal.list        go to state 254


state 399

  114 shift.expression: shift.expression LS . additive.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 557
    constant                   go to state 253
    string.literal.list        go to state 254


state 400

  115 shift.expression: shift.expression RS . additive.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 558
    constant                   go to state 253
    string.literal.list        go to state 254


state 401

  117 relational.expression: relational.expression '<' . shift.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 559
    constant                   go to state 253
    string.literal.list        go to state 254


state 402

  118 relational.expression: relational.expression '>' . shift.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 560
    constant                   go to state 253
    string.literal.list        go to state 254


state 403

  119 relational.expression: relational.expression LE . shift.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 561
    constant                   go to state 253
    string.literal.list        go to state 254


state 404

  120 relational.expression: relational.expression GE . shift.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 562
    constant                   go to state 253
    string.literal.list        go to state 254


state 405

  122 equality.expression: equality.expression EQ . relational.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 563
    constant                   go to state 253
    string.literal.list        go to state 254


state 406

  123 equality.expression: equality.expression NE . relational.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 564
    constant                   go to state 253
    string.literal.list        go to state 254


state 407

  125 AND.expression: AND.expression '&' . equality.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 565
    constant                   go to state 253
    string.literal.list        go to state 254


state 408

  127 exclusive.OR.expression: exclusive.OR.expression '^' . AND.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 566
    constant                   go to state 253
    string.literal.list        go to state 254


state 409

  129 inclusive.OR.expression: inclusive.OR.expression '|' . exclusive.OR.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 567
    constant                   go to state 253
    string.literal.list        go to state 254


state 410

  131 logical.AND.expression: logical.AND.expression ANDAND . inclusive.OR.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 568
    constant                   go to state 253
    string.literal.list        go to state 254


state 411

  135 conditional.expression: logical.OR.expression '?' . expression ':' conditional.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 569
    constant                   go to state 253
    string.literal.list        go to state 254


state 412

  133 logical.OR.expression: logical.OR.expression OROR . logical.AND.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 570
    constant                   go to state 253
    string.literal.list        go to state 254


state 413

  326 array.abstract.declarator: '[' constant.expression ']' .

    $default  reduce using rule 326 (array.abstract.declarator)


state 414

  456 string.literal.list: string.literal.list STRINGliteral .

    $default  reduce using rule 456 (string.literal.list)


state 415

  328 array.abstract.declarator: array.abstract.declarator '[' ']' .

    $default  reduce using rule 328 (array.abstract.declarator)


state 416

  327 array.abstract.declarator: array.abstract.declarator '[' constant.expression . ']'

    ']'  shift, and go to state 571


state 417

  439 function.definition: old.function.declarator old.function.declaration.list $@37 compound.statement.no.new.scope .

    $default  reduce using rule 439 (function.definition)


state 418

  174 default.declaring.list: declaration.qualifier.list identifier.declarator . $@10 attributes.opt $@11 initializer.opt

    $default  reduce using rule 172 ($@10)

    $@10  go to state 186


state 419

  178 default.declaring.list: type.qualifier.list identifier.declarator . $@12 attributes.opt $@13 initializer.opt

    $default  reduce using rule 176 ($@12)

    $@12  go to state 196


state 420

  385 declaration.list: declaration.list declaration .

    $default  reduce using rule 385 (declaration.list)


state 421

  350 bit.field.size: ':' . constant.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 251
    constant.expression        go to state 572
    constant                   go to state 253
    string.literal.list        go to state 254


state 422

  344 struct.declarator: declarator . bit.field.size.opt attributes.opt

    ':'  shift, and go to state 421

    $default  reduce using rule 348 (bit.field.size.opt)

    bit.field.size.opt  go to state 573
    bit.field.size      go to state 574


state 423

  342 struct.declaring.list: type.specifier struct.declarator .

    $default  reduce using rule 342 (struct.declaring.list)


state 424

  345 struct.declarator: bit.field.size . attributes.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 575
    attributes      go to state 292
    attribute       go to state 293


state 425

  346 struct.identifier.declarator: identifier.declarator . bit.field.size.opt attributes.opt

    ':'  shift, and go to state 421

    $default  reduce using rule 348 (bit.field.size.opt)

    bit.field.size.opt  go to state 576
    bit.field.size      go to state 574


state 426

  340 struct.default.declaring.list: type.qualifier.list struct.identifier.declarator .

    $default  reduce using rule 340 (struct.default.declaring.list)


state 427

  347 struct.identifier.declarator: bit.field.size . attributes.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 577
    attributes      go to state 292
    attribute       go to state 293


state 428

  329 struct.or.union.specifier: struct.or.union '{' struct.declaration.list '}' .

    $default  reduce using rule 329 (struct.or.union.specifier)


state 429

  337 struct.declaration.list: struct.declaration.list struct.declaration .

    $default  reduce using rule 337 (struct.declaration.list)


state 430

  339 struct.declaration: struct.default.declaring.list ';' .

    $default  reduce using rule 339 (struct.declaration)


state 431

  341 struct.default.declaring.list: struct.default.declaring.list ',' . struct.identifier.declarator

    '*'         shift, and go to state 76
    '('         shift, and go to state 77
    ':'         shift, and go to state 421
    IDENTIFIER  shift, and go to state 24

    identifier.declarator          go to state 425
    unary.identifier.declarator    go to state 46
    postfix.identifier.declarator  go to state 47
    paren.identifier.declarator    go to state 79
    struct.identifier.declarator   go to state 578
    bit.field.size                 go to state 427


state 432

  338 struct.declaration: struct.declaring.list ';' .

    $default  reduce using rule 338 (struct.declaration)


state 433

  343 struct.declaring.list: struct.declaring.list ',' . struct.declarator

    '*'          shift, and go to state 86
    '('          shift, and go to state 87
    ':'          shift, and go to state 421
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    declarator                        go to state 422
    paren.typedef.declarator          go to state 90
    paren.postfix.typedef.declarator  go to state 91
    parameter.typedef.declarator      go to state 92
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    identifier.declarator             go to state 166
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 48
    old.function.declarator           go to state 167
    postfix.old.function.declarator   go to state 50
    struct.declarator                 go to state 579
    bit.field.size                    go to state 424


state 434

  333 struct.or.union.specifier: struct.or.union identifier.or.typedef.name '{' '}' .

    $default  reduce using rule 333 (struct.or.union.specifier)


state 435

  330 struct.or.union.specifier: struct.or.union identifier.or.typedef.name '{' struct.declaration.list . '}'
  337 struct.declaration.list: struct.declaration.list . struct.declaration

    '}'          shift, and go to state 580
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    CHAR         shift, and go to state 11
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    type.specifier                 go to state 265
    basic.type.specifier           go to state 155
    sue.type.specifier             go to state 156
    typedef.type.specifier         go to state 157
    type.qualifier.list            go to state 266
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    struct.declaration             go to state 429
    struct.default.declaring.list  go to state 269
    struct.declaring.list          go to state 270
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    basic.type.name                go to state 59


state 436

  357 enumerator.value.opt: '=' constant.expression .

    $default  reduce using rule 357 (enumerator.value.opt)


state 437

  355 enumerator.list: enumerator.list ',' identifier.or.typedef.name . enumerator.value.opt

    '='  shift, and go to state 274

    $default  reduce using rule 356 (enumerator.value.opt)

    enumerator.value.opt  go to state 581


state 438

  351 enum.specifier: ENUM '{' enumerator.list comma.opt '}' .

    $default  reduce using rule 351 (enum.specifier)


state 439

  352 enum.specifier: ENUM identifier.or.typedef.name '{' enumerator.list comma.opt . '}'

    '}'  shift, and go to state 582


state 440

   17 composite.head.inout.member: stream.type.specifier . IDENTIFIER

    IDENTIFIER  shift, and go to state 583


state 441

   11 composite.head.inout: INPUT composite.head.inout.member.list . ',' OUTPUT composite.head.inout.member.list
   12                     | INPUT composite.head.inout.member.list .
   16 composite.head.inout.member.list: composite.head.inout.member.list . ',' composite.head.inout.member

    ','  shift, and go to state 584

    $default  reduce using rule 12 (composite.head.inout)


state 442

   15 composite.head.inout.member.list: composite.head.inout.member .

    $default  reduce using rule 15 (composite.head.inout.member.list)


state 443

   13 composite.head.inout: OUTPUT composite.head.inout.member.list .
   14                     | OUTPUT composite.head.inout.member.list . ',' INPUT composite.head.inout.member.list
   16 composite.head.inout.member.list: composite.head.inout.member.list . ',' composite.head.inout.member

    ','  shift, and go to state 585

    $default  reduce using rule 13 (composite.head.inout)


state 444

    9 composite.head: COMPOSITE IDENTIFIER '(' composite.head.inout ')' .

    $default  reduce using rule 9 (composite.head)


state 445

    5 stream.declaration.list: stream.declaration.list ',' type.specifier . paren.identifier.declarator
    6                        | stream.declaration.list ',' type.specifier . paren.identifier.declarator postfixing.abstract.declarator

    '('         shift, and go to state 284
    IDENTIFIER  shift, and go to state 24

    paren.identifier.declarator  go to state 586


state 446

  269 paren.identifier.declarator: '(' paren.identifier.declarator . ')'

    ')'  shift, and go to state 147


state 447

    4 stream.declaration.list: type.specifier paren.identifier.declarator postfixing.abstract.declarator .

    $default  reduce using rule 4 (stream.declaration.list)


state 448

   21 composite.body.param.opt: PARAM parameter.list . ';'
  308 parameter.list: parameter.list . ',' parameter.declaration
  310               | parameter.list . ',' error

    ';'  shift, and go to state 587
    ','  shift, and go to state 588


state 449

   27 operator.add: ADD . operator.default.call
   28             | ADD . operator.pipeline
   29             | ADD . operator.splitjoin

    SPLITJOIN   shift, and go to state 589
    PIPELINE    shift, and go to state 590
    IDENTIFIER  shift, and go to state 591

    operator.pipeline      go to state 592
    operator.splitjoin     go to state 593
    operator.default.call  go to state 594


state 450

   26 operator.file.writer: FILEWRITER . '(' IDENTIFIER ')' operator.arguments ';'

    '('  shift, and go to state 595


state 451

   18 composite.body.no.new.scope: '{' composite.body.param.opt composite.body.statement.list . '}'
   23 composite.body.statement.list: composite.body.statement.list . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 596
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 597
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 452

  360 costream.composite.statement: composite.body.operator .

    $default  reduce using rule 360 (costream.composite.statement)


state 453

   25 composite.body.operator: operator.file.writer .

    $default  reduce using rule 25 (composite.body.operator)


state 454

   24 composite.body.operator: operator.add .

    $default  reduce using rule 24 (composite.body.operator)


state 455

   22 composite.body.statement.list: costream.composite.statement .

    $default  reduce using rule 22 (composite.body.statement.list)


state 456

  361 costream.composite.statement: statement .

    $default  reduce using rule 361 (costream.composite.statement)


state 457

   19 composite.body.no.new.scope: '{' composite.body.param.opt declaration.list . composite.body.statement.list '}'
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    composite.body.statement.list  go to state 598
    composite.body.operator        go to state 452
    operator.file.writer           go to state 453
    operator.add                   go to state 454
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 420
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    costream.composite.statement   go to state 455
    statement                      go to state 456
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 458

  166 declaring.list: declaring.list ',' declarator @6 attributes.opt . $@7 initializer.opt

    $default  reduce using rule 165 ($@7)

    $@7  go to state 599


state 459

  181 default.declaring.list: default.declaring.list ',' identifier.declarator @14 attributes.opt . $@15 initializer.opt

    $default  reduce using rule 180 ($@15)

    $@15  go to state 600


state 460

  288 attribute: ATTRIBUTE '(' . '(' attribute.list ')' ')'

    '('  shift, and go to state 601


state 461

  298 initializer.opt: '=' . initializer

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 529
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 530
    initializer                go to state 602
    constant                   go to state 253
    string.literal.list        go to state 254


state 462

  168 declaring.list: declaration.specifier error $@8 attributes.opt initializer.opt .

    $default  reduce using rule 168 (declaring.list)


state 463

  287 attributes: attributes attribute .

    $default  reduce using rule 287 (attributes)


state 464

  230 paren.typedef.declarator: '*' '(' simple.paren.typedef.declarator ')' .

    $default  reduce using rule 230 (paren.typedef.declarator)


state 465

  231 paren.typedef.declarator: '*' pointer.type.qualifier.list '(' simple.paren.typedef.declarator . ')'
  234 paren.postfix.typedef.declarator: '(' simple.paren.typedef.declarator . postfixing.abstract.declarator ')'

    '('  shift, and go to state 161
    ')'  shift, and go to state 603
    '['  shift, and go to state 134

    postfixing.abstract.declarator  go to state 300
    array.abstract.declarator       go to state 136


state 466

  237 simple.paren.typedef.declarator: '(' simple.paren.typedef.declarator ')' .

    $default  reduce using rule 237 (simple.paren.typedef.declarator)


state 467

  235 paren.postfix.typedef.declarator: '(' paren.typedef.declarator ')' postfixing.abstract.declarator .

    $default  reduce using rule 235 (paren.postfix.typedef.declarator)


state 468

  234 paren.postfix.typedef.declarator: '(' simple.paren.typedef.declarator postfixing.abstract.declarator ')' .

    $default  reduce using rule 234 (paren.postfix.typedef.declarator)


state 469

  245 clean.postfix.typedef.declarator: '(' clean.typedef.declarator ')' postfixing.abstract.declarator .

    $default  reduce using rule 245 (clean.postfix.typedef.declarator)


state 470

  160 declaring.list: declaration.specifier declarator $@2 attributes.opt $@3 . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 604


state 471

  441 function.definition: declaration.specifier old.function.declarator old.function.declaration.list $@38 compound.statement.no.new.scope .

    $default  reduce using rule 441 (function.definition)


state 472

  183 default.declaring.list: declaration.qualifier.list error $@16 attributes.opt initializer.opt .

    $default  reduce using rule 183 (default.declaring.list)


state 473

  174 default.declaring.list: declaration.qualifier.list identifier.declarator $@10 attributes.opt $@11 . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 605


state 474

  445 function.definition: declaration.qualifier.list old.function.declarator old.function.declaration.list $@40 compound.statement.no.new.scope .

    $default  reduce using rule 445 (function.definition)


state 475

  170 declaring.list: type.specifier error $@9 attributes.opt initializer.opt .

    $default  reduce using rule 170 (declaring.list)


state 476

  163 declaring.list: type.specifier declarator $@4 attributes.opt $@5 . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 606


state 477

  443 function.definition: type.specifier old.function.declarator old.function.declaration.list $@39 compound.statement.no.new.scope .

    $default  reduce using rule 443 (function.definition)


state 478

  185 default.declaring.list: type.qualifier.list error $@17 attributes.opt initializer.opt .

    $default  reduce using rule 185 (default.declaring.list)


state 479

  178 default.declaring.list: type.qualifier.list identifier.declarator $@12 attributes.opt $@13 . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 607


state 480

  447 function.definition: type.qualifier.list old.function.declarator old.function.declaration.list $@41 compound.statement.no.new.scope .

    $default  reduce using rule 447 (function.definition)


state 481

  368 statement: error ';' .

    $default  reduce using rule 368 (statement)


state 482

  409 jump.statement: BREAK ';' .

    $default  reduce using rule 409 (jump.statement)


state 483

  392 selection.statement: SWITCH $@19 . '(' expression ')' statement

    '('  shift, and go to state 608


state 484

  371 labeled.statement: CASE constant.expression . ':' statement

    ':'  shift, and go to state 609


state 485

  410 jump.statement: RETURN expression.opt . ';'

    ';'  shift, and go to state 610


state 486

  408 jump.statement: CONTINUE ';' .

    $default  reduce using rule 408 (jump.statement)


state 487

  398 iteration.statement: FOR '(' . expression.opt ';' expression.opt ';' expression.opt ')' $@22 costream.composite.statement
  400                    | FOR '(' . error ';' expression.opt ';' expression.opt ')' $@23 costream.composite.statement
  402                    | FOR '(' . expression.opt ';' expression.opt ';' error ')' $@24 costream.composite.statement
  404                    | FOR '(' . expression.opt ';' error ';' expression.opt ')' $@25 costream.composite.statement
  406                    | FOR '(' . error ')' $@26 costream.composite.statement

    error              shift, and go to state 611
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 612
    constant                   go to state 253
    string.literal.list        go to state 254


state 488

  372 labeled.statement: DEFAULT ':' . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 613
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 489

  407 jump.statement: GOTO IDENTIFIER . ';'

    ';'  shift, and go to state 614


state 490

  411 jump.statement: GOTO TYPEDEFname . ';'

    ';'  shift, and go to state 615


state 491

  396 iteration.statement: DO $@21 . statement WHILE '(' expression ')' ';'

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 616
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 492

  389 selection.statement: IF '(' . expression ')' costream.composite.statement
  390                    | IF '(' . expression ')' costream.composite.statement ELSE costream.composite.statement

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 617
    constant                   go to state 253
    string.literal.list        go to state 254


state 493

  394 iteration.statement: WHILE $@20 . '(' expression ')' statement

    '('  shift, and go to state 618


state 494

  370 labeled.statement: IDENTIFIER ':' . @18 statement

    $default  reduce using rule 369 (@18)

    @18  go to state 619


state 495

  373 labeled.statement: TYPEDEFname ':' . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 620
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 496

  138 assignment.operator: '=' .

    $default  reduce using rule 138 (assignment.operator)


state 497

  139 assignment.operator: MULTassign .

    $default  reduce using rule 139 (assignment.operator)


state 498

  140 assignment.operator: DIVassign .

    $default  reduce using rule 140 (assignment.operator)


state 499

  141 assignment.operator: MODassign .

    $default  reduce using rule 141 (assignment.operator)


state 500

  142 assignment.operator: PLUSassign .

    $default  reduce using rule 142 (assignment.operator)


state 501

  143 assignment.operator: MINUSassign .

    $default  reduce using rule 143 (assignment.operator)


state 502

  144 assignment.operator: LSassign .

    $default  reduce using rule 144 (assignment.operator)


state 503

  145 assignment.operator: RSassign .

    $default  reduce using rule 145 (assignment.operator)


state 504

  146 assignment.operator: ANDassign .

    $default  reduce using rule 146 (assignment.operator)


state 505

  147 assignment.operator: ERassign .

    $default  reduce using rule 147 (assignment.operator)


state 506

  148 assignment.operator: ORassign .

    $default  reduce using rule 148 (assignment.operator)


state 507

  137 assignment.expression: unary.expression assignment.operator . assignment.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 621
    constant                   go to state 253
    string.literal.list        go to state 254


state 508

  150 expression: expression ',' . assignment.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 622
    constant                   go to state 253
    string.literal.list        go to state 254


state 509

  388 expression.statement: expression.opt ';' .

    $default  reduce using rule 388 (expression.statement)


state 510

  379 rblock: '}' .

    $default  reduce using rule 379 (rblock)


state 511

   23 composite.body.statement.list: composite.body.statement.list . costream.composite.statement
  376 compound.statement: lblock composite.body.statement.list . rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 597
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    rblock                        go to state 623
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 512

  374 compound.statement: lblock rblock .

    $default  reduce using rule 374 (compound.statement)


state 513

  375 compound.statement: lblock declaration.list . rblock
  377                   | lblock declaration.list . composite.body.statement.list rblock
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    composite.body.statement.list  go to state 624
    composite.body.operator        go to state 452
    operator.file.writer           go to state 453
    operator.add                   go to state 454
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 420
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    costream.composite.statement   go to state 455
    statement                      go to state 456
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    rblock                         go to state 625
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 514

  381 compound.statement.no.new.scope: '{' declaration.list '}' .

    $default  reduce using rule 381 (compound.statement.no.new.scope)


state 515

  383 compound.statement.no.new.scope: '{' declaration.list statement.list . '}'
  387 statement.list: statement.list . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 626
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 518
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 516

  382 compound.statement.no.new.scope: '{' statement.list '}' .

    $default  reduce using rule 382 (compound.statement.no.new.scope)


state 517

  373 labeled.statement: TYPEDEFname . ':' statement

    ':'  shift, and go to state 495


state 518

  387 statement.list: statement.list statement .

    $default  reduce using rule 387 (statement.list)


state 519

  221 pointer.type.qualifier.list: pointer.type.qualifier.list . pointer.type.qualifier
  243 clean.typedef.declarator: '*' pointer.type.qualifier.list . parameter.typedef.declarator
  250 unary.abstract.declarator: '*' pointer.type.qualifier.list .
  252                          | '*' pointer.type.qualifier.list . abstract.declarator
  264 unary.identifier.declarator: '*' pointer.type.qualifier.list . identifier.declarator

    '*'          shift, and go to state 352
    '('          shift, and go to state 353
    '['          shift, and go to state 134
    CONST        shift, and go to state 60
    VOLATILE     shift, and go to state 61
    IDENTIFIER   shift, and go to state 24
    TYPEDEFname  shift, and go to state 88

    $default  reduce using rule 250 (unary.abstract.declarator)

    parameter.typedef.declarator      go to state 297
    clean.typedef.declarator          go to state 93
    clean.postfix.typedef.declarator  go to state 94
    abstract.declarator               go to state 627
    unary.abstract.declarator         go to state 356
    postfix.abstract.declarator       go to state 357
    postfixing.abstract.declarator    go to state 358
    identifier.declarator             go to state 143
    unary.identifier.declarator       go to state 46
    postfix.identifier.declarator     go to state 47
    paren.identifier.declarator       go to state 79
    array.abstract.declarator         go to state 136
    pointer.type.qualifier            go to state 145


state 520

  251 unary.abstract.declarator: '*' abstract.declarator .

    $default  reduce using rule 251 (unary.abstract.declarator)


state 521

  253 postfix.abstract.declarator: '(' unary.abstract.declarator . ')'
  256                            | '(' unary.abstract.declarator . ')' postfixing.abstract.declarator

    ')'  shift, and go to state 628


state 522

  254 postfix.abstract.declarator: '(' postfix.abstract.declarator . ')'

    ')'  shift, and go to state 629


state 523

  255 postfix.abstract.declarator: '(' postfixing.abstract.declarator . ')'

    ')'  shift, and go to state 630


state 524

  221 pointer.type.qualifier.list: pointer.type.qualifier.list . pointer.type.qualifier
  250 unary.abstract.declarator: '*' pointer.type.qualifier.list .
  252                          | '*' pointer.type.qualifier.list . abstract.declarator
  264 unary.identifier.declarator: '*' pointer.type.qualifier.list . identifier.declarator

    '*'         shift, and go to state 360
    '('         shift, and go to state 361
    '['         shift, and go to state 134
    CONST       shift, and go to state 60
    VOLATILE    shift, and go to state 61
    IDENTIFIER  shift, and go to state 24

    $default  reduce using rule 250 (unary.abstract.declarator)

    abstract.declarator             go to state 627
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    identifier.declarator           go to state 143
    unary.identifier.declarator     go to state 46
    postfix.identifier.declarator   go to state 47
    paren.identifier.declarator     go to state 79
    array.abstract.declarator       go to state 136
    pointer.type.qualifier          go to state 145


state 525

  277 identifier.list: identifier.list ',' IDENTIFIER .

    $default  reduce using rule 277 (identifier.list)


state 526

  310 parameter.list: parameter.list ',' error .

    $default  reduce using rule 310 (parameter.list)


state 527

  305 parameter.type.list: parameter.list ',' ELLIPSIS .

    $default  reduce using rule 305 (parameter.type.list)


state 528

  308 parameter.list: parameter.list ',' parameter.declaration .

    $default  reduce using rule 308 (parameter.list)


state 529

  299 initializer: '{' . initializer.list '}'
  300            | '{' . initializer.list ',' '}'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 529
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 530
    initializer                go to state 631
    initializer.list           go to state 632
    constant                   go to state 253
    string.literal.list        go to state 254


state 530

  301 initializer: assignment.expression .

    $default  reduce using rule 301 (initializer)


state 531

  309 parameter.list: parameter.declaration '=' initializer .

    $default  reduce using rule 309 (parameter.list)


state 532

   67 primary.expression: '(' expression ')' .

    $default  reduce using rule 67 (primary.expression)


state 533

  249 unary.abstract.declarator: '*' .
  250                          | '*' . pointer.type.qualifier.list
  251                          | '*' . abstract.declarator
  252                          | '*' . pointer.type.qualifier.list abstract.declarator

    '*'       shift, and go to state 533
    '('       shift, and go to state 534
    '['       shift, and go to state 134
    CONST     shift, and go to state 60
    VOLATILE  shift, and go to state 61

    $default  reduce using rule 249 (unary.abstract.declarator)

    pointer.type.qualifier.list     go to state 633
    abstract.declarator             go to state 520
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    array.abstract.declarator       go to state 136
    pointer.type.qualifier          go to state 65


state 534

  253 postfix.abstract.declarator: '(' . unary.abstract.declarator ')'
  254                            | '(' . postfix.abstract.declarator ')'
  255                            | '(' . postfixing.abstract.declarator ')'
  256                            | '(' . unary.abstract.declarator ')' postfixing.abstract.declarator
  258 postfixing.abstract.declarator: '(' . ')'
  259                               | '(' . parameter.type.list ')'

    '*'          shift, and go to state 533
    '('          shift, and go to state 534
    ')'          shift, and go to state 202
    '['          shift, and go to state 134
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    TYPEDEFname  shift, and go to state 25
    ELLIPSIS     shift, and go to state 204
    INLINE       shift, and go to state 26

    declaration.specifier           go to state 205
    basic.declaration.specifier     go to state 35
    sue.declaration.specifier       go to state 206
    typedef.declaration.specifier   go to state 37
    declaration.qualifier.list      go to state 207
    type.specifier                  go to state 208
    basic.type.specifier            go to state 40
    sue.type.specifier              go to state 209
    typedef.type.specifier          go to state 42
    type.qualifier.list             go to state 210
    elaborated.type.name            go to state 44
    unary.abstract.declarator       go to state 521
    postfix.abstract.declarator     go to state 522
    postfixing.abstract.declarator  go to state 523
    parameter.type.list             go to state 212
    parameter.list                  go to state 213
    parameter.declaration           go to state 214
    array.abstract.declarator       go to state 136
    struct.or.union.specifier       go to state 51
    struct.or.union                 go to state 52
    enum.specifier                  go to state 53
    type.qualifier                  go to state 57
    storage.class                   go to state 58
    basic.type.name                 go to state 59


state 535

  281 type.name: type.specifier abstract.declarator .

    $default  reduce using rule 281 (type.name)


state 536

  283 type.name: type.qualifier.list abstract.declarator .

    $default  reduce using rule 283 (type.name)


state 537

  105 cast.expression: '(' type.name ')' . cast.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression   go to state 236
    postfix.expression   go to state 237
    unary.expression     go to state 238
    unary.operator       go to state 239
    cast.expression      go to state 634
    constant             go to state 253
    string.literal.list  go to state 254


state 538

   69 primary.expression: '(' lblock declaration.list . statement.list rblock ')'
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 420
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    statement                      go to state 342
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    statement.list                 go to state 635
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 539

   68 primary.expression: '(' lblock statement.list . rblock ')'
  387 statement.list: statement.list . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 518
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    rblock                     go to state 636
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 540

   97 unary.expression: SIZEOF '(' type.name . ')'

    ')'  shift, and go to state 637


state 541

   78 postfix.expression: SPLITJOIN '(' IDENTIFIER . ')' lblock split.statement splitjoinPipeline.statement.list join.statement rblock
   79                   | SPLITJOIN '(' IDENTIFIER . ')' lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   80                   | SPLITJOIN '(' IDENTIFIER . ')' lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

    ')'  shift, and go to state 638


state 542

   81 postfix.expression: PIPELINE '(' IDENTIFIER . ')' lblock splitjoinPipeline.statement.list rblock
   82                   | PIPELINE '(' IDENTIFIER . ')' lblock declaration.list splitjoinPipeline.statement.list rblock

    ')'  shift, and go to state 639


state 543

   83 postfix.expression: FILEREADER '(' ')' . operator.arguments

    '('  shift, and go to state 640

    operator.arguments  go to state 641


state 544

   72 postfix.expression: postfix.expression '(' ')' .
   74                   | postfix.expression '(' ')' . operator.selfdefine.body
   76                   | postfix.expression '(' ')' . operator.arguments

    '('  shift, and go to state 640
    '{'  shift, and go to state 322

    '('       [reduce using rule 72 (postfix.expression)]
    $default  reduce using rule 72 (postfix.expression)

    operator.arguments        go to state 642
    operator.selfdefine.body  go to state 643
    lblock                    go to state 644


state 545

   73 postfix.expression: postfix.expression '(' argument.expression.list . ')'
   75                   | postfix.expression '(' argument.expression.list . ')' operator.selfdefine.body
   77                   | postfix.expression '(' argument.expression.list . ')' operator.arguments
   91 argument.expression.list: argument.expression.list . ',' assignment.expression

    ')'  shift, and go to state 645
    ','  shift, and go to state 646


state 546

   90 argument.expression.list: assignment.expression .

    $default  reduce using rule 90 (argument.expression.list)


state 547

   84 postfix.expression: postfix.expression '.' IDENTIFIER .

    $default  reduce using rule 84 (postfix.expression)


state 548

   88 postfix.expression: postfix.expression '.' TYPEDEFname .

    $default  reduce using rule 88 (postfix.expression)


state 549

   71 postfix.expression: postfix.expression '[' expression . ']'
  150 expression: expression . ',' assignment.expression

    ','  shift, and go to state 508
    ']'  shift, and go to state 647


state 550

   85 postfix.expression: postfix.expression ARROW IDENTIFIER .

    $default  reduce using rule 85 (postfix.expression)


state 551

   89 postfix.expression: postfix.expression ARROW TYPEDEFname .

    $default  reduce using rule 89 (postfix.expression)


state 552

  107 multiplicative.expression: multiplicative.expression '*' cast.expression .

    $default  reduce using rule 107 (multiplicative.expression)


state 553

  109 multiplicative.expression: multiplicative.expression '%' cast.expression .

    $default  reduce using rule 109 (multiplicative.expression)


state 554

  108 multiplicative.expression: multiplicative.expression '/' cast.expression .

    $default  reduce using rule 108 (multiplicative.expression)


state 555

  107 multiplicative.expression: multiplicative.expression . '*' cast.expression
  108                          | multiplicative.expression . '/' cast.expression
  109                          | multiplicative.expression . '%' cast.expression
  111 additive.expression: additive.expression '+' multiplicative.expression .

    '*'  shift, and go to state 394
    '%'  shift, and go to state 395
    '/'  shift, and go to state 396

    $default  reduce using rule 111 (additive.expression)


state 556

  107 multiplicative.expression: multiplicative.expression . '*' cast.expression
  108                          | multiplicative.expression . '/' cast.expression
  109                          | multiplicative.expression . '%' cast.expression
  112 additive.expression: additive.expression '-' multiplicative.expression .

    '*'  shift, and go to state 394
    '%'  shift, and go to state 395
    '/'  shift, and go to state 396

    $default  reduce using rule 112 (additive.expression)


state 557

  111 additive.expression: additive.expression . '+' multiplicative.expression
  112                    | additive.expression . '-' multiplicative.expression
  114 shift.expression: shift.expression LS additive.expression .

    '+'  shift, and go to state 397
    '-'  shift, and go to state 398

    $default  reduce using rule 114 (shift.expression)


state 558

  111 additive.expression: additive.expression . '+' multiplicative.expression
  112                    | additive.expression . '-' multiplicative.expression
  115 shift.expression: shift.expression RS additive.expression .

    '+'  shift, and go to state 397
    '-'  shift, and go to state 398

    $default  reduce using rule 115 (shift.expression)


state 559

  114 shift.expression: shift.expression . LS additive.expression
  115                 | shift.expression . RS additive.expression
  117 relational.expression: relational.expression '<' shift.expression .

    LS  shift, and go to state 399
    RS  shift, and go to state 400

    $default  reduce using rule 117 (relational.expression)


state 560

  114 shift.expression: shift.expression . LS additive.expression
  115                 | shift.expression . RS additive.expression
  118 relational.expression: relational.expression '>' shift.expression .

    LS  shift, and go to state 399
    RS  shift, and go to state 400

    $default  reduce using rule 118 (relational.expression)


state 561

  114 shift.expression: shift.expression . LS additive.expression
  115                 | shift.expression . RS additive.expression
  119 relational.expression: relational.expression LE shift.expression .

    LS  shift, and go to state 399
    RS  shift, and go to state 400

    $default  reduce using rule 119 (relational.expression)


state 562

  114 shift.expression: shift.expression . LS additive.expression
  115                 | shift.expression . RS additive.expression
  120 relational.expression: relational.expression GE shift.expression .

    LS  shift, and go to state 399
    RS  shift, and go to state 400

    $default  reduce using rule 120 (relational.expression)


state 563

  117 relational.expression: relational.expression . '<' shift.expression
  118                      | relational.expression . '>' shift.expression
  119                      | relational.expression . LE shift.expression
  120                      | relational.expression . GE shift.expression
  122 equality.expression: equality.expression EQ relational.expression .

    '<'  shift, and go to state 401
    '>'  shift, and go to state 402
    LE   shift, and go to state 403
    GE   shift, and go to state 404

    $default  reduce using rule 122 (equality.expression)


state 564

  117 relational.expression: relational.expression . '<' shift.expression
  118                      | relational.expression . '>' shift.expression
  119                      | relational.expression . LE shift.expression
  120                      | relational.expression . GE shift.expression
  123 equality.expression: equality.expression NE relational.expression .

    '<'  shift, and go to state 401
    '>'  shift, and go to state 402
    LE   shift, and go to state 403
    GE   shift, and go to state 404

    $default  reduce using rule 123 (equality.expression)


state 565

  122 equality.expression: equality.expression . EQ relational.expression
  123                    | equality.expression . NE relational.expression
  125 AND.expression: AND.expression '&' equality.expression .

    EQ  shift, and go to state 405
    NE  shift, and go to state 406

    $default  reduce using rule 125 (AND.expression)


state 566

  125 AND.expression: AND.expression . '&' equality.expression
  127 exclusive.OR.expression: exclusive.OR.expression '^' AND.expression .

    '&'  shift, and go to state 407

    $default  reduce using rule 127 (exclusive.OR.expression)


state 567

  127 exclusive.OR.expression: exclusive.OR.expression . '^' AND.expression
  129 inclusive.OR.expression: inclusive.OR.expression '|' exclusive.OR.expression .

    '^'  shift, and go to state 408

    $default  reduce using rule 129 (inclusive.OR.expression)


state 568

  129 inclusive.OR.expression: inclusive.OR.expression . '|' exclusive.OR.expression
  131 logical.AND.expression: logical.AND.expression ANDAND inclusive.OR.expression .

    '|'  shift, and go to state 409

    $default  reduce using rule 131 (logical.AND.expression)


state 569

  135 conditional.expression: logical.OR.expression '?' expression . ':' conditional.expression
  150 expression: expression . ',' assignment.expression

    ','  shift, and go to state 508
    ':'  shift, and go to state 648


state 570

  131 logical.AND.expression: logical.AND.expression . ANDAND inclusive.OR.expression
  133 logical.OR.expression: logical.OR.expression OROR logical.AND.expression .

    ANDAND  shift, and go to state 410

    $default  reduce using rule 133 (logical.OR.expression)


state 571

  327 array.abstract.declarator: array.abstract.declarator '[' constant.expression ']' .

    $default  reduce using rule 327 (array.abstract.declarator)


state 572

  350 bit.field.size: ':' constant.expression .

    $default  reduce using rule 350 (bit.field.size)


state 573

  344 struct.declarator: declarator bit.field.size.opt . attributes.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 649
    attributes      go to state 292
    attribute       go to state 293


state 574

  349 bit.field.size.opt: bit.field.size .

    $default  reduce using rule 349 (bit.field.size.opt)


state 575

  345 struct.declarator: bit.field.size attributes.opt .

    $default  reduce using rule 345 (struct.declarator)


state 576

  346 struct.identifier.declarator: identifier.declarator bit.field.size.opt . attributes.opt

    ATTRIBUTE  shift, and go to state 290

    $default  reduce using rule 284 (attributes.opt)

    attributes.opt  go to state 650
    attributes      go to state 292
    attribute       go to state 293


state 577

  347 struct.identifier.declarator: bit.field.size attributes.opt .

    $default  reduce using rule 347 (struct.identifier.declarator)


state 578

  341 struct.default.declaring.list: struct.default.declaring.list ',' struct.identifier.declarator .

    $default  reduce using rule 341 (struct.default.declaring.list)


state 579

  343 struct.declaring.list: struct.declaring.list ',' struct.declarator .

    $default  reduce using rule 343 (struct.declaring.list)


state 580

  330 struct.or.union.specifier: struct.or.union identifier.or.typedef.name '{' struct.declaration.list '}' .

    $default  reduce using rule 330 (struct.or.union.specifier)


state 581

  355 enumerator.list: enumerator.list ',' identifier.or.typedef.name enumerator.value.opt .

    $default  reduce using rule 355 (enumerator.list)


state 582

  352 enum.specifier: ENUM identifier.or.typedef.name '{' enumerator.list comma.opt '}' .

    $default  reduce using rule 352 (enum.specifier)


state 583

   17 composite.head.inout.member: stream.type.specifier IDENTIFIER .

    $default  reduce using rule 17 (composite.head.inout.member)


state 584

   11 composite.head.inout: INPUT composite.head.inout.member.list ',' . OUTPUT composite.head.inout.member.list
   16 composite.head.inout.member.list: composite.head.inout.member.list ',' . composite.head.inout.member

    OUTPUT  shift, and go to state 651
    STREAM  shift, and go to state 23

    stream.type.specifier        go to state 440
    composite.head.inout.member  go to state 652


state 585

   14 composite.head.inout: OUTPUT composite.head.inout.member.list ',' . INPUT composite.head.inout.member.list
   16 composite.head.inout.member.list: composite.head.inout.member.list ',' . composite.head.inout.member

    INPUT   shift, and go to state 653
    STREAM  shift, and go to state 23

    stream.type.specifier        go to state 440
    composite.head.inout.member  go to state 652


state 586

    5 stream.declaration.list: stream.declaration.list ',' type.specifier paren.identifier.declarator .
    6                        | stream.declaration.list ',' type.specifier paren.identifier.declarator . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 5 (stream.declaration.list)

    postfixing.abstract.declarator  go to state 654
    array.abstract.declarator       go to state 136


state 587

   21 composite.body.param.opt: PARAM parameter.list ';' .

    $default  reduce using rule 21 (composite.body.param.opt)


state 588

  308 parameter.list: parameter.list ',' . parameter.declaration
  310               | parameter.list ',' . error

    error        shift, and go to state 526
    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    declaration.specifier          go to state 205
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 206
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 207
    type.specifier                 go to state 208
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 209
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 210
    elaborated.type.name           go to state 44
    parameter.declaration          go to state 528
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 589

   32 operator.splitjoin: SPLITJOIN . lblock split.statement splitjoinPipeline.statement.list join.statement rblock
   33                   | SPLITJOIN . lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   34                   | SPLITJOIN . lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

    '{'  shift, and go to state 322

    lblock  go to state 655


state 590

   30 operator.pipeline: PIPELINE . lblock splitjoinPipeline.statement.list rblock
   31                  | PIPELINE . lblock declaration.list splitjoinPipeline.statement.list rblock

    '{'  shift, and go to state 322

    lblock  go to state 656


state 591

   46 operator.default.call: IDENTIFIER . operator.arguments ';'

    '('  shift, and go to state 640

    operator.arguments  go to state 657


state 592

   28 operator.add: ADD operator.pipeline .

    $default  reduce using rule 28 (operator.add)


state 593

   29 operator.add: ADD operator.splitjoin .

    $default  reduce using rule 29 (operator.add)


state 594

   27 operator.add: ADD operator.default.call .

    $default  reduce using rule 27 (operator.add)


state 595

   26 operator.file.writer: FILEWRITER '(' . IDENTIFIER ')' operator.arguments ';'

    IDENTIFIER  shift, and go to state 658


state 596

   18 composite.body.no.new.scope: '{' composite.body.param.opt composite.body.statement.list '}' .

    $default  reduce using rule 18 (composite.body.no.new.scope)


state 597

   23 composite.body.statement.list: composite.body.statement.list costream.composite.statement .

    $default  reduce using rule 23 (composite.body.statement.list)


state 598

   19 composite.body.no.new.scope: '{' composite.body.param.opt declaration.list composite.body.statement.list . '}'
   23 composite.body.statement.list: composite.body.statement.list . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 659
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 597
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 599

  166 declaring.list: declaring.list ',' declarator @6 attributes.opt $@7 . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 660


state 600

  181 default.declaring.list: default.declaring.list ',' identifier.declarator @14 attributes.opt $@15 . initializer.opt

    '='  shift, and go to state 461

    $default  reduce using rule 297 (initializer.opt)

    initializer.opt  go to state 661


state 601

  288 attribute: ATTRIBUTE '(' '(' . attribute.list ')' ')'

    CONST        shift, and go to state 662
    IDENTIFIER   shift, and go to state 663
    TYPEDEFname  shift, and go to state 664

    $default  reduce using rule 291 (attrib)

    attribute.list  go to state 665
    attrib          go to state 666
    any.word        go to state 667


state 602

  298 initializer.opt: '=' initializer .

    $default  reduce using rule 298 (initializer.opt)


state 603

  231 paren.typedef.declarator: '*' pointer.type.qualifier.list '(' simple.paren.typedef.declarator ')' .

    $default  reduce using rule 231 (paren.typedef.declarator)


state 604

  160 declaring.list: declaration.specifier declarator $@2 attributes.opt $@3 initializer.opt .

    $default  reduce using rule 160 (declaring.list)


state 605

  174 default.declaring.list: declaration.qualifier.list identifier.declarator $@10 attributes.opt $@11 initializer.opt .

    $default  reduce using rule 174 (default.declaring.list)


state 606

  163 declaring.list: type.specifier declarator $@4 attributes.opt $@5 initializer.opt .

    $default  reduce using rule 163 (declaring.list)


state 607

  178 default.declaring.list: type.qualifier.list identifier.declarator $@12 attributes.opt $@13 initializer.opt .

    $default  reduce using rule 178 (default.declaring.list)


state 608

  392 selection.statement: SWITCH $@19 '(' . expression ')' statement

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 668
    constant                   go to state 253
    string.literal.list        go to state 254


state 609

  371 labeled.statement: CASE constant.expression ':' . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 669
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 610

  410 jump.statement: RETURN expression.opt ';' .

    $default  reduce using rule 410 (jump.statement)


state 611

  400 iteration.statement: FOR '(' error . ';' expression.opt ';' expression.opt ')' $@23 costream.composite.statement
  406                    | FOR '(' error . ')' $@26 costream.composite.statement

    ')'  shift, and go to state 670
    ';'  shift, and go to state 671


state 612

  398 iteration.statement: FOR '(' expression.opt . ';' expression.opt ';' expression.opt ')' $@22 costream.composite.statement
  402                    | FOR '(' expression.opt . ';' expression.opt ';' error ')' $@24 costream.composite.statement
  404                    | FOR '(' expression.opt . ';' error ';' expression.opt ')' $@25 costream.composite.statement

    ';'  shift, and go to state 672


state 613

  372 labeled.statement: DEFAULT ':' statement .

    $default  reduce using rule 372 (labeled.statement)


state 614

  407 jump.statement: GOTO IDENTIFIER ';' .

    $default  reduce using rule 407 (jump.statement)


state 615

  411 jump.statement: GOTO TYPEDEFname ';' .

    $default  reduce using rule 411 (jump.statement)


state 616

  396 iteration.statement: DO $@21 statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 673


state 617

  150 expression: expression . ',' assignment.expression
  389 selection.statement: IF '(' expression . ')' costream.composite.statement
  390                    | IF '(' expression . ')' costream.composite.statement ELSE costream.composite.statement

    ')'  shift, and go to state 674
    ','  shift, and go to state 508


state 618

  394 iteration.statement: WHILE $@20 '(' . expression ')' statement

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 675
    constant                   go to state 253
    string.literal.list        go to state 254


state 619

  370 labeled.statement: IDENTIFIER ':' @18 . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 676
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 620

  373 labeled.statement: TYPEDEFname ':' statement .

    $default  reduce using rule 373 (labeled.statement)


state 621

  137 assignment.expression: unary.expression assignment.operator assignment.expression .

    $default  reduce using rule 137 (assignment.expression)


state 622

  150 expression: expression ',' assignment.expression .

    $default  reduce using rule 150 (expression)


state 623

  376 compound.statement: lblock composite.body.statement.list rblock .

    $default  reduce using rule 376 (compound.statement)


state 624

   23 composite.body.statement.list: composite.body.statement.list . costream.composite.statement
  377 compound.statement: lblock declaration.list composite.body.statement.list . rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 597
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    rblock                        go to state 677
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 625

  375 compound.statement: lblock declaration.list rblock .

    $default  reduce using rule 375 (compound.statement)


state 626

  383 compound.statement.no.new.scope: '{' declaration.list statement.list '}' .

    $default  reduce using rule 383 (compound.statement.no.new.scope)


state 627

  252 unary.abstract.declarator: '*' pointer.type.qualifier.list abstract.declarator .

    $default  reduce using rule 252 (unary.abstract.declarator)


state 628

  253 postfix.abstract.declarator: '(' unary.abstract.declarator ')' .
  256                            | '(' unary.abstract.declarator ')' . postfixing.abstract.declarator

    '('  shift, and go to state 161
    '['  shift, and go to state 134

    $default  reduce using rule 253 (postfix.abstract.declarator)

    postfixing.abstract.declarator  go to state 678
    array.abstract.declarator       go to state 136


state 629

  254 postfix.abstract.declarator: '(' postfix.abstract.declarator ')' .

    $default  reduce using rule 254 (postfix.abstract.declarator)


state 630

  255 postfix.abstract.declarator: '(' postfixing.abstract.declarator ')' .

    $default  reduce using rule 255 (postfix.abstract.declarator)


state 631

  302 initializer.list: initializer .

    $default  reduce using rule 302 (initializer.list)


state 632

  299 initializer: '{' initializer.list . '}'
  300            | '{' initializer.list . ',' '}'
  303 initializer.list: initializer.list . ',' initializer

    '}'  shift, and go to state 679
    ','  shift, and go to state 680


state 633

  221 pointer.type.qualifier.list: pointer.type.qualifier.list . pointer.type.qualifier
  250 unary.abstract.declarator: '*' pointer.type.qualifier.list .
  252                          | '*' pointer.type.qualifier.list . abstract.declarator

    '*'       shift, and go to state 533
    '('       shift, and go to state 534
    '['       shift, and go to state 134
    CONST     shift, and go to state 60
    VOLATILE  shift, and go to state 61

    $default  reduce using rule 250 (unary.abstract.declarator)

    abstract.declarator             go to state 627
    unary.abstract.declarator       go to state 356
    postfix.abstract.declarator     go to state 357
    postfixing.abstract.declarator  go to state 358
    array.abstract.declarator       go to state 136
    pointer.type.qualifier          go to state 145


state 634

  105 cast.expression: '(' type.name ')' cast.expression .

    $default  reduce using rule 105 (cast.expression)


state 635

   69 primary.expression: '(' lblock declaration.list statement.list . rblock ')'
  387 statement.list: statement.list . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 518
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    rblock                     go to state 681
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 636

   68 primary.expression: '(' lblock statement.list rblock . ')'

    ')'  shift, and go to state 682


state 637

   97 unary.expression: SIZEOF '(' type.name ')' .

    $default  reduce using rule 97 (unary.expression)


state 638

   78 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' . lblock split.statement splitjoinPipeline.statement.list join.statement rblock
   79                   | SPLITJOIN '(' IDENTIFIER ')' . lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   80                   | SPLITJOIN '(' IDENTIFIER ')' . lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

    '{'  shift, and go to state 322

    lblock  go to state 683


state 639

   81 postfix.expression: PIPELINE '(' IDENTIFIER ')' . lblock splitjoinPipeline.statement.list rblock
   82                   | PIPELINE '(' IDENTIFIER ')' . lblock declaration.list splitjoinPipeline.statement.list rblock

    '{'  shift, and go to state 322

    lblock  go to state 684


state 640

   47 operator.arguments: '(' . argument.expression.list ')'
   48                   | '(' . ')'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ')'                shift, and go to state 685
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    argument.expression.list   go to state 686
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 546
    constant                   go to state 253
    string.literal.list        go to state 254


state 641

   83 postfix.expression: FILEREADER '(' ')' operator.arguments .

    $default  reduce using rule 83 (postfix.expression)


state 642

   76 postfix.expression: postfix.expression '(' ')' operator.arguments .

    $default  reduce using rule 76 (postfix.expression)


state 643

   74 postfix.expression: postfix.expression '(' ')' operator.selfdefine.body .

    $default  reduce using rule 74 (postfix.expression)


state 644

   49 operator.selfdefine.body: lblock . operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock
   50                         | lblock . declaration.list operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock

    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    STREAM       shift, and go to state 23
    INIT         shift, and go to state 687
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    $default  reduce using rule 51 (operator.selfdefine.body.init.opt)

    stream.type.specifier              go to state 28
    operator.selfdefine.body.init.opt  go to state 688
    declaration                        go to state 258
    declaring.list                     go to state 32
    default.declaring.list             go to state 33
    declaration.specifier              go to state 259
    basic.declaration.specifier        go to state 35
    sue.declaration.specifier          go to state 36
    typedef.declaration.specifier      go to state 37
    declaration.qualifier.list         go to state 260
    type.specifier                     go to state 261
    basic.type.specifier               go to state 40
    sue.type.specifier                 go to state 41
    typedef.type.specifier             go to state 42
    type.qualifier.list                go to state 262
    elaborated.type.name               go to state 44
    struct.or.union.specifier          go to state 51
    struct.or.union                    go to state 52
    enum.specifier                     go to state 53
    declaration.list                   go to state 689
    type.qualifier                     go to state 57
    storage.class                      go to state 58
    basic.type.name                    go to state 59


state 645

   73 postfix.expression: postfix.expression '(' argument.expression.list ')' .
   75                   | postfix.expression '(' argument.expression.list ')' . operator.selfdefine.body
   77                   | postfix.expression '(' argument.expression.list ')' . operator.arguments

    '('  shift, and go to state 640
    '{'  shift, and go to state 322

    '('       [reduce using rule 73 (postfix.expression)]
    $default  reduce using rule 73 (postfix.expression)

    operator.arguments        go to state 690
    operator.selfdefine.body  go to state 691
    lblock                    go to state 644


state 646

   91 argument.expression.list: argument.expression.list ',' . assignment.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 692
    constant                   go to state 253
    string.literal.list        go to state 254


state 647

   71 postfix.expression: postfix.expression '[' expression ']' .

    $default  reduce using rule 71 (postfix.expression)


state 648

  135 conditional.expression: logical.OR.expression '?' expression ':' . conditional.expression

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 238
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 693
    constant                   go to state 253
    string.literal.list        go to state 254


state 649

  344 struct.declarator: declarator bit.field.size.opt attributes.opt .

    $default  reduce using rule 344 (struct.declarator)


state 650

  346 struct.identifier.declarator: identifier.declarator bit.field.size.opt attributes.opt .

    $default  reduce using rule 346 (struct.identifier.declarator)


state 651

   11 composite.head.inout: INPUT composite.head.inout.member.list ',' OUTPUT . composite.head.inout.member.list

    STREAM  shift, and go to state 23

    stream.type.specifier             go to state 440
    composite.head.inout.member.list  go to state 694
    composite.head.inout.member       go to state 442


state 652

   16 composite.head.inout.member.list: composite.head.inout.member.list ',' composite.head.inout.member .

    $default  reduce using rule 16 (composite.head.inout.member.list)


state 653

   14 composite.head.inout: OUTPUT composite.head.inout.member.list ',' INPUT . composite.head.inout.member.list

    STREAM  shift, and go to state 23

    stream.type.specifier             go to state 440
    composite.head.inout.member.list  go to state 695
    composite.head.inout.member       go to state 442


state 654

    6 stream.declaration.list: stream.declaration.list ',' type.specifier paren.identifier.declarator postfixing.abstract.declarator .

    $default  reduce using rule 6 (stream.declaration.list)


state 655

   32 operator.splitjoin: SPLITJOIN lblock . split.statement splitjoinPipeline.statement.list join.statement rblock
   33                   | SPLITJOIN lblock . declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   34                   | SPLITJOIN lblock . declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    STREAM       shift, and go to state 23
    SPLIT        shift, and go to state 696
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    stream.type.specifier          go to state 28
    split.statement                go to state 697
    declaration                    go to state 258
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    declaration.list               go to state 698
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 656

   30 operator.pipeline: PIPELINE lblock . splitjoinPipeline.statement.list rblock
   31                  | PIPELINE lblock . declaration.list splitjoinPipeline.statement.list rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier             go to state 28
    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 700
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    declaration                       go to state 258
    declaring.list                    go to state 32
    default.declaring.list            go to state 33
    declaration.specifier             go to state 259
    basic.declaration.specifier       go to state 35
    sue.declaration.specifier         go to state 36
    typedef.declaration.specifier     go to state 37
    declaration.qualifier.list        go to state 260
    type.specifier                    go to state 261
    basic.type.specifier              go to state 40
    sue.type.specifier                go to state 41
    typedef.type.specifier            go to state 42
    type.qualifier.list               go to state 262
    elaborated.type.name              go to state 44
    struct.or.union.specifier         go to state 51
    struct.or.union                   go to state 52
    enum.specifier                    go to state 53
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    declaration.list                  go to state 702
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254
    type.qualifier                    go to state 57
    storage.class                     go to state 58
    basic.type.name                   go to state 59


state 657

   46 operator.default.call: IDENTIFIER operator.arguments . ';'

    ';'  shift, and go to state 703


state 658

   26 operator.file.writer: FILEWRITER '(' IDENTIFIER . ')' operator.arguments ';'

    ')'  shift, and go to state 704


state 659

   19 composite.body.no.new.scope: '{' composite.body.param.opt declaration.list composite.body.statement.list '}' .

    $default  reduce using rule 19 (composite.body.no.new.scope)


state 660

  166 declaring.list: declaring.list ',' declarator @6 attributes.opt $@7 initializer.opt .

    $default  reduce using rule 166 (declaring.list)


state 661

  181 default.declaring.list: default.declaring.list ',' identifier.declarator @14 attributes.opt $@15 initializer.opt .

    $default  reduce using rule 181 (default.declaring.list)


state 662

  296 any.word: CONST .

    $default  reduce using rule 296 (any.word)


state 663

  294 any.word: IDENTIFIER .

    $default  reduce using rule 294 (any.word)


state 664

  295 any.word: TYPEDEFname .

    $default  reduce using rule 295 (any.word)


state 665

  288 attribute: ATTRIBUTE '(' '(' attribute.list . ')' ')'
  290 attribute.list: attribute.list . ',' attrib

    ')'  shift, and go to state 705
    ','  shift, and go to state 706


state 666

  289 attribute.list: attrib .

    $default  reduce using rule 289 (attribute.list)


state 667

  292 attrib: any.word .
  293       | any.word . '(' expression ')'

    '('  shift, and go to state 707

    $default  reduce using rule 292 (attrib)


state 668

  150 expression: expression . ',' assignment.expression
  392 selection.statement: SWITCH $@19 '(' expression . ')' statement

    ')'  shift, and go to state 708
    ','  shift, and go to state 508


state 669

  371 labeled.statement: CASE constant.expression ':' statement .

    $default  reduce using rule 371 (labeled.statement)


state 670

  406 iteration.statement: FOR '(' error ')' . $@26 costream.composite.statement

    $default  reduce using rule 405 ($@26)

    $@26  go to state 709


state 671

  400 iteration.statement: FOR '(' error ';' . expression.opt ';' expression.opt ')' $@23 costream.composite.statement

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    $default  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 710
    constant                   go to state 253
    string.literal.list        go to state 254


state 672

  398 iteration.statement: FOR '(' expression.opt ';' . expression.opt ';' expression.opt ')' $@22 costream.composite.statement
  402                    | FOR '(' expression.opt ';' . expression.opt ';' error ')' $@24 costream.composite.statement
  404                    | FOR '(' expression.opt ';' . error ';' expression.opt ')' $@25 costream.composite.statement

    error              shift, and go to state 711
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 712
    constant                   go to state 253
    string.literal.list        go to state 254


state 673

  396 iteration.statement: DO $@21 statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 713


state 674

  389 selection.statement: IF '(' expression ')' . costream.composite.statement
  390                    | IF '(' expression ')' . costream.composite.statement ELSE costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 714
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 675

  150 expression: expression . ',' assignment.expression
  394 iteration.statement: WHILE $@20 '(' expression . ')' statement

    ')'  shift, and go to state 715
    ','  shift, and go to state 508


state 676

  370 labeled.statement: IDENTIFIER ':' @18 statement .

    $default  reduce using rule 370 (labeled.statement)


state 677

  377 compound.statement: lblock declaration.list composite.body.statement.list rblock .

    $default  reduce using rule 377 (compound.statement)


state 678

  256 postfix.abstract.declarator: '(' unary.abstract.declarator ')' postfixing.abstract.declarator .

    $default  reduce using rule 256 (postfix.abstract.declarator)


state 679

  299 initializer: '{' initializer.list '}' .

    $default  reduce using rule 299 (initializer)


state 680

  300 initializer: '{' initializer.list ',' . '}'
  303 initializer.list: initializer.list ',' . initializer

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 529
    '}'                shift, and go to state 716
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 530
    initializer                go to state 717
    constant                   go to state 253
    string.literal.list        go to state 254


state 681

   69 primary.expression: '(' lblock declaration.list statement.list rblock . ')'

    ')'  shift, and go to state 718


state 682

   68 primary.expression: '(' lblock statement.list rblock ')' .

    $default  reduce using rule 68 (primary.expression)


state 683

   78 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock . split.statement splitjoinPipeline.statement.list join.statement rblock
   79                   | SPLITJOIN '(' IDENTIFIER ')' lblock . declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock
   80                   | SPLITJOIN '(' IDENTIFIER ')' lblock . declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock

    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    STREAM       shift, and go to state 23
    SPLIT        shift, and go to state 696
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    stream.type.specifier          go to state 28
    split.statement                go to state 719
    declaration                    go to state 258
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    declaration.list               go to state 720
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 684

   81 postfix.expression: PIPELINE '(' IDENTIFIER ')' lblock . splitjoinPipeline.statement.list rblock
   82                   | PIPELINE '(' IDENTIFIER ')' lblock . declaration.list splitjoinPipeline.statement.list rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier             go to state 28
    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 721
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    declaration                       go to state 258
    declaring.list                    go to state 32
    default.declaring.list            go to state 33
    declaration.specifier             go to state 259
    basic.declaration.specifier       go to state 35
    sue.declaration.specifier         go to state 36
    typedef.declaration.specifier     go to state 37
    declaration.qualifier.list        go to state 260
    type.specifier                    go to state 261
    basic.type.specifier              go to state 40
    sue.type.specifier                go to state 41
    typedef.type.specifier            go to state 42
    type.qualifier.list               go to state 262
    elaborated.type.name              go to state 44
    struct.or.union.specifier         go to state 51
    struct.or.union                   go to state 52
    enum.specifier                    go to state 53
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    declaration.list                  go to state 722
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254
    type.qualifier                    go to state 57
    storage.class                     go to state 58
    basic.type.name                   go to state 59


state 685

   48 operator.arguments: '(' ')' .

    $default  reduce using rule 48 (operator.arguments)


state 686

   47 operator.arguments: '(' argument.expression.list . ')'
   91 argument.expression.list: argument.expression.list . ',' assignment.expression

    ')'  shift, and go to state 723
    ','  shift, and go to state 646


state 687

   52 operator.selfdefine.body.init.opt: INIT . compound.statement

    '{'  shift, and go to state 322

    compound.statement  go to state 724
    lblock              go to state 345


state 688

   49 operator.selfdefine.body: lblock operator.selfdefine.body.init.opt . operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock

    WORK  shift, and go to state 725

    operator.selfdefine.body.work  go to state 726


state 689

   50 operator.selfdefine.body: lblock declaration.list . operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock
  385 declaration.list: declaration.list . declaration

    AUTO         shift, and go to state 3
    DOUBLE       shift, and go to state 4
    INT          shift, and go to state 5
    STRUCT       shift, and go to state 6
    LONG         shift, and go to state 7
    ENUM         shift, and go to state 8
    REGISTER     shift, and go to state 9
    TYPEDEF      shift, and go to state 10
    CHAR         shift, and go to state 11
    EXTERN       shift, and go to state 12
    UNION        shift, and go to state 13
    CONST        shift, and go to state 14
    FLOAT        shift, and go to state 15
    SHORT        shift, and go to state 16
    UNSIGNED     shift, and go to state 17
    SIGNED       shift, and go to state 18
    VOID         shift, and go to state 19
    VOLATILE     shift, and go to state 20
    STATIC       shift, and go to state 21
    STREAM       shift, and go to state 23
    INIT         shift, and go to state 687
    TYPEDEFname  shift, and go to state 25
    INLINE       shift, and go to state 26

    $default  reduce using rule 51 (operator.selfdefine.body.init.opt)

    stream.type.specifier              go to state 28
    operator.selfdefine.body.init.opt  go to state 727
    declaration                        go to state 420
    declaring.list                     go to state 32
    default.declaring.list             go to state 33
    declaration.specifier              go to state 259
    basic.declaration.specifier        go to state 35
    sue.declaration.specifier          go to state 36
    typedef.declaration.specifier      go to state 37
    declaration.qualifier.list         go to state 260
    type.specifier                     go to state 261
    basic.type.specifier               go to state 40
    sue.type.specifier                 go to state 41
    typedef.type.specifier             go to state 42
    type.qualifier.list                go to state 262
    elaborated.type.name               go to state 44
    struct.or.union.specifier          go to state 51
    struct.or.union                    go to state 52
    enum.specifier                     go to state 53
    type.qualifier                     go to state 57
    storage.class                      go to state 58
    basic.type.name                    go to state 59


state 690

   77 postfix.expression: postfix.expression '(' argument.expression.list ')' operator.arguments .

    $default  reduce using rule 77 (postfix.expression)


state 691

   75 postfix.expression: postfix.expression '(' argument.expression.list ')' operator.selfdefine.body .

    $default  reduce using rule 75 (postfix.expression)


state 692

   91 argument.expression.list: argument.expression.list ',' assignment.expression .

    $default  reduce using rule 91 (argument.expression.list)


state 693

  135 conditional.expression: logical.OR.expression '?' expression ':' conditional.expression .

    $default  reduce using rule 135 (conditional.expression)


state 694

   11 composite.head.inout: INPUT composite.head.inout.member.list ',' OUTPUT composite.head.inout.member.list .
   16 composite.head.inout.member.list: composite.head.inout.member.list . ',' composite.head.inout.member

    ','  shift, and go to state 728

    $default  reduce using rule 11 (composite.head.inout)


state 695

   14 composite.head.inout: OUTPUT composite.head.inout.member.list ',' INPUT composite.head.inout.member.list .
   16 composite.head.inout.member.list: composite.head.inout.member.list . ',' composite.head.inout.member

    ','  shift, and go to state 728

    $default  reduce using rule 14 (composite.head.inout)


state 696

   35 split.statement: SPLIT . duplicate.statement
   36                | SPLIT . roundrobin.statement

    DUPLICATE   shift, and go to state 729
    ROUNDROBIN  shift, and go to state 730

    roundrobin.statement  go to state 731
    duplicate.statement   go to state 732


state 697

   32 operator.splitjoin: SPLITJOIN lblock split.statement . splitjoinPipeline.statement.list join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 733
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254


state 698

   33 operator.splitjoin: SPLITJOIN lblock declaration.list . split.statement splitjoinPipeline.statement.list join.statement rblock
   34                   | SPLITJOIN lblock declaration.list . statement.list split.statement splitjoinPipeline.statement.list join.statement rblock
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    SPLITJOIN          shift, and go to state 224
    SPLIT              shift, and go to state 696
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    split.statement                go to state 734
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 420
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    statement                      go to state 342
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    statement.list                 go to state 735
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 699

   38 splitjoinPipeline.statement.list: operator.add .

    $default  reduce using rule 38 (splitjoinPipeline.statement.list)


state 700

   30 operator.pipeline: PIPELINE lblock splitjoinPipeline.statement.list . rblock
   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    rblock                     go to state 738
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 701

   37 splitjoinPipeline.statement.list: statement .

    $default  reduce using rule 37 (splitjoinPipeline.statement.list)


state 702

   31 operator.pipeline: PIPELINE lblock declaration.list . splitjoinPipeline.statement.list rblock
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier             go to state 28
    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 739
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    declaration                       go to state 420
    declaring.list                    go to state 32
    default.declaring.list            go to state 33
    declaration.specifier             go to state 259
    basic.declaration.specifier       go to state 35
    sue.declaration.specifier         go to state 36
    typedef.declaration.specifier     go to state 37
    declaration.qualifier.list        go to state 260
    type.specifier                    go to state 261
    basic.type.specifier              go to state 40
    sue.type.specifier                go to state 41
    typedef.type.specifier            go to state 42
    type.qualifier.list               go to state 262
    elaborated.type.name              go to state 44
    struct.or.union.specifier         go to state 51
    struct.or.union                   go to state 52
    enum.specifier                    go to state 53
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254
    type.qualifier                    go to state 57
    storage.class                     go to state 58
    basic.type.name                   go to state 59


state 703

   46 operator.default.call: IDENTIFIER operator.arguments ';' .

    $default  reduce using rule 46 (operator.default.call)


state 704

   26 operator.file.writer: FILEWRITER '(' IDENTIFIER ')' . operator.arguments ';'

    '('  shift, and go to state 640

    operator.arguments  go to state 740


state 705

  288 attribute: ATTRIBUTE '(' '(' attribute.list ')' . ')'

    ')'  shift, and go to state 741


state 706

  290 attribute.list: attribute.list ',' . attrib

    CONST        shift, and go to state 662
    IDENTIFIER   shift, and go to state 663
    TYPEDEFname  shift, and go to state 664

    $default  reduce using rule 291 (attrib)

    attrib    go to state 742
    any.word  go to state 667


state 707

  293 attrib: any.word '(' . expression ')'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 743
    constant                   go to state 253
    string.literal.list        go to state 254


state 708

  392 selection.statement: SWITCH $@19 '(' expression ')' . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 744
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 709

  406 iteration.statement: FOR '(' error ')' $@26 . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 745
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 710

  400 iteration.statement: FOR '(' error ';' expression.opt . ';' expression.opt ')' $@23 costream.composite.statement

    ';'  shift, and go to state 746


state 711

  404 iteration.statement: FOR '(' expression.opt ';' error . ';' expression.opt ')' $@25 costream.composite.statement

    ';'  shift, and go to state 747


state 712

  398 iteration.statement: FOR '(' expression.opt ';' expression.opt . ';' expression.opt ')' $@22 costream.composite.statement
  402                    | FOR '(' expression.opt ';' expression.opt . ';' error ')' $@24 costream.composite.statement

    ';'  shift, and go to state 748


state 713

  396 iteration.statement: DO $@21 statement WHILE '(' . expression ')' ';'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 749
    constant                   go to state 253
    string.literal.list        go to state 254


state 714

  389 selection.statement: IF '(' expression ')' costream.composite.statement .
  390                    | IF '(' expression ')' costream.composite.statement . ELSE costream.composite.statement

    ELSE  shift, and go to state 750

    ELSE      [reduce using rule 389 (selection.statement)]
    $default  reduce using rule 389 (selection.statement)


state 715

  394 iteration.statement: WHILE $@20 '(' expression ')' . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 751
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 716

  300 initializer: '{' initializer.list ',' '}' .

    $default  reduce using rule 300 (initializer)


state 717

  303 initializer.list: initializer.list ',' initializer .

    $default  reduce using rule 303 (initializer.list)


state 718

   69 primary.expression: '(' lblock declaration.list statement.list rblock ')' .

    $default  reduce using rule 69 (primary.expression)


state 719

   78 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock split.statement . splitjoinPipeline.statement.list join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 752
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254


state 720

   79 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list . split.statement splitjoinPipeline.statement.list join.statement rblock
   80                   | SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list . statement.list split.statement splitjoinPipeline.statement.list join.statement rblock
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    SPLITJOIN          shift, and go to state 224
    SPLIT              shift, and go to state 696
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier          go to state 28
    split.statement                go to state 753
    primary.expression             go to state 236
    postfix.expression             go to state 237
    unary.expression               go to state 337
    unary.operator                 go to state 239
    cast.expression                go to state 240
    multiplicative.expression      go to state 241
    additive.expression            go to state 242
    shift.expression               go to state 243
    relational.expression          go to state 244
    equality.expression            go to state 245
    AND.expression                 go to state 246
    exclusive.OR.expression        go to state 247
    inclusive.OR.expression        go to state 248
    logical.AND.expression         go to state 249
    logical.OR.expression          go to state 250
    conditional.expression         go to state 338
    assignment.expression          go to state 339
    expression                     go to state 340
    expression.opt                 go to state 341
    declaration                    go to state 420
    declaring.list                 go to state 32
    default.declaring.list         go to state 33
    declaration.specifier          go to state 259
    basic.declaration.specifier    go to state 35
    sue.declaration.specifier      go to state 36
    typedef.declaration.specifier  go to state 37
    declaration.qualifier.list     go to state 260
    type.specifier                 go to state 261
    basic.type.specifier           go to state 40
    sue.type.specifier             go to state 41
    typedef.type.specifier         go to state 42
    type.qualifier.list            go to state 262
    elaborated.type.name           go to state 44
    struct.or.union.specifier      go to state 51
    struct.or.union                go to state 52
    enum.specifier                 go to state 53
    statement                      go to state 342
    labeled.statement              go to state 343
    compound.statement             go to state 344
    lblock                         go to state 345
    statement.list                 go to state 754
    expression.statement           go to state 348
    selection.statement            go to state 349
    iteration.statement            go to state 350
    jump.statement                 go to state 351
    constant                       go to state 253
    string.literal.list            go to state 254
    type.qualifier                 go to state 57
    storage.class                  go to state 58
    basic.type.name                go to state 59


state 721

   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add
   81 postfix.expression: PIPELINE '(' IDENTIFIER ')' lblock splitjoinPipeline.statement.list . rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    rblock                     go to state 755
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 722

   82 postfix.expression: PIPELINE '(' IDENTIFIER ')' lblock declaration.list . splitjoinPipeline.statement.list rblock
  385 declaration.list: declaration.list . declaration

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    AUTO               shift, and go to state 3
    DOUBLE             shift, and go to state 4
    INT                shift, and go to state 5
    STRUCT             shift, and go to state 6
    BREAK              shift, and go to state 324
    LONG               shift, and go to state 7
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    ENUM               shift, and go to state 8
    REGISTER           shift, and go to state 9
    TYPEDEF            shift, and go to state 10
    CHAR               shift, and go to state 11
    EXTERN             shift, and go to state 12
    RETURN             shift, and go to state 327
    UNION              shift, and go to state 13
    CONST              shift, and go to state 14
    FLOAT              shift, and go to state 15
    SHORT              shift, and go to state 16
    UNSIGNED           shift, and go to state 17
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    SIGNED             shift, and go to state 18
    VOID               shift, and go to state 19
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    VOLATILE           shift, and go to state 20
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    STATIC             shift, and go to state 21
    WHILE              shift, and go to state 334
    STREAM             shift, and go to state 23
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 336
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235
    INLINE             shift, and go to state 26

    ';'  reduce using rule 152 (expression.opt)

    stream.type.specifier             go to state 28
    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 756
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    declaration                       go to state 420
    declaring.list                    go to state 32
    default.declaring.list            go to state 33
    declaration.specifier             go to state 259
    basic.declaration.specifier       go to state 35
    sue.declaration.specifier         go to state 36
    typedef.declaration.specifier     go to state 37
    declaration.qualifier.list        go to state 260
    type.specifier                    go to state 261
    basic.type.specifier              go to state 40
    sue.type.specifier                go to state 41
    typedef.type.specifier            go to state 42
    type.qualifier.list               go to state 262
    elaborated.type.name              go to state 44
    struct.or.union.specifier         go to state 51
    struct.or.union                   go to state 52
    enum.specifier                    go to state 53
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254
    type.qualifier                    go to state 57
    storage.class                     go to state 58
    basic.type.name                   go to state 59


state 723

   47 operator.arguments: '(' argument.expression.list ')' .

    $default  reduce using rule 47 (operator.arguments)


state 724

   52 operator.selfdefine.body.init.opt: INIT compound.statement .

    $default  reduce using rule 52 (operator.selfdefine.body.init.opt)


state 725

   53 operator.selfdefine.body.work: WORK . compound.statement

    '{'  shift, and go to state 322

    compound.statement  go to state 757
    lblock              go to state 345


state 726

   49 operator.selfdefine.body: lblock operator.selfdefine.body.init.opt operator.selfdefine.body.work . operator.selfdefine.body.window.list.opt rblock

    WINDOW  shift, and go to state 758

    $default  reduce using rule 54 (operator.selfdefine.body.window.list.opt)

    operator.selfdefine.body.window.list.opt  go to state 759


state 727

   50 operator.selfdefine.body: lblock declaration.list operator.selfdefine.body.init.opt . operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock

    WORK  shift, and go to state 725

    operator.selfdefine.body.work  go to state 760


state 728

   16 composite.head.inout.member.list: composite.head.inout.member.list ',' . composite.head.inout.member

    STREAM  shift, and go to state 23

    stream.type.specifier        go to state 440
    composite.head.inout.member  go to state 652


state 729

   44 duplicate.statement: DUPLICATE . '(' ')' ';'
   45                    | DUPLICATE . '(' assignment.expression ')' ';'

    '('  shift, and go to state 761


state 730

   42 roundrobin.statement: ROUNDROBIN . '(' ')' ';'
   43                     | ROUNDROBIN . '(' argument.expression.list ')' ';'

    '('  shift, and go to state 762


state 731

   36 split.statement: SPLIT roundrobin.statement .

    $default  reduce using rule 36 (split.statement)


state 732

   35 split.statement: SPLIT duplicate.statement .

    $default  reduce using rule 35 (split.statement)


state 733

   32 operator.splitjoin: SPLITJOIN lblock split.statement splitjoinPipeline.statement.list . join.statement rblock
   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    JOIN               shift, and go to state 763
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    join.statement             go to state 764
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 734

   33 operator.splitjoin: SPLITJOIN lblock declaration.list split.statement . splitjoinPipeline.statement.list join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 765
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254


state 735

   34 operator.splitjoin: SPLITJOIN lblock declaration.list statement.list . split.statement splitjoinPipeline.statement.list join.statement rblock
  387 statement.list: statement.list . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    SPLIT              shift, and go to state 696
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    split.statement            go to state 766
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 518
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 736

   40 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list operator.add .

    $default  reduce using rule 40 (splitjoinPipeline.statement.list)


state 737

   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list statement .

    $default  reduce using rule 39 (splitjoinPipeline.statement.list)


state 738

   30 operator.pipeline: PIPELINE lblock splitjoinPipeline.statement.list rblock .

    $default  reduce using rule 30 (operator.pipeline)


state 739

   31 operator.pipeline: PIPELINE lblock declaration.list splitjoinPipeline.statement.list . rblock
   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    rblock                     go to state 767
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 740

   26 operator.file.writer: FILEWRITER '(' IDENTIFIER ')' operator.arguments . ';'

    ';'  shift, and go to state 768


state 741

  288 attribute: ATTRIBUTE '(' '(' attribute.list ')' ')' .

    $default  reduce using rule 288 (attribute)


state 742

  290 attribute.list: attribute.list ',' attrib .

    $default  reduce using rule 290 (attribute.list)


state 743

  150 expression: expression . ',' assignment.expression
  293 attrib: any.word '(' expression . ')'

    ')'  shift, and go to state 769
    ','  shift, and go to state 508


state 744

  392 selection.statement: SWITCH $@19 '(' expression ')' statement .

    $default  reduce using rule 392 (selection.statement)


state 745

  406 iteration.statement: FOR '(' error ')' $@26 costream.composite.statement .

    $default  reduce using rule 406 (iteration.statement)


state 746

  400 iteration.statement: FOR '(' error ';' expression.opt ';' . expression.opt ')' $@23 costream.composite.statement

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    $default  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 770
    constant                   go to state 253
    string.literal.list        go to state 254


state 747

  404 iteration.statement: FOR '(' expression.opt ';' error ';' . expression.opt ')' $@25 costream.composite.statement

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    $default  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 771
    constant                   go to state 253
    string.literal.list        go to state 254


state 748

  398 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' . expression.opt ')' $@22 costream.composite.statement
  402                    | FOR '(' expression.opt ';' expression.opt ';' . error ')' $@24 costream.composite.statement

    error              shift, and go to state 772
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ')'  reduce using rule 152 (expression.opt)

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 773
    constant                   go to state 253
    string.literal.list        go to state 254


state 749

  150 expression: expression . ',' assignment.expression
  396 iteration.statement: DO $@21 statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 774
    ','  shift, and go to state 508


state 750

  390 selection.statement: IF '(' expression ')' costream.composite.statement ELSE . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 775
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 751

  394 iteration.statement: WHILE $@20 '(' expression ')' statement .

    $default  reduce using rule 394 (iteration.statement)


state 752

   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add
   78 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock split.statement splitjoinPipeline.statement.list . join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    JOIN               shift, and go to state 763
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    join.statement             go to state 776
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 753

   79 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list split.statement . splitjoinPipeline.statement.list join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 777
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254


state 754

   80 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list statement.list . split.statement splitjoinPipeline.statement.list join.statement rblock
  387 statement.list: statement.list . statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    SPLITJOIN          shift, and go to state 224
    SPLIT              shift, and go to state 696
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    split.statement            go to state 778
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 518
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 755

   81 postfix.expression: PIPELINE '(' IDENTIFIER ')' lblock splitjoinPipeline.statement.list rblock .

    $default  reduce using rule 81 (postfix.expression)


state 756

   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add
   82 postfix.expression: PIPELINE '(' IDENTIFIER ')' lblock declaration.list splitjoinPipeline.statement.list . rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    '}'                shift, and go to state 510
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    rblock                     go to state 779
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 757

   53 operator.selfdefine.body.work: WORK compound.statement .

    $default  reduce using rule 53 (operator.selfdefine.body.work)


state 758

   55 operator.selfdefine.body.window.list.opt: WINDOW . '{' operator.selfdefine.window.list '}'

    '{'  shift, and go to state 780


state 759

   49 operator.selfdefine.body: lblock operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt . rblock

    '}'  shift, and go to state 510

    rblock  go to state 781


state 760

   50 operator.selfdefine.body: lblock declaration.list operator.selfdefine.body.init.opt operator.selfdefine.body.work . operator.selfdefine.body.window.list.opt rblock

    WINDOW  shift, and go to state 758

    $default  reduce using rule 54 (operator.selfdefine.body.window.list.opt)

    operator.selfdefine.body.window.list.opt  go to state 782


state 761

   44 duplicate.statement: DUPLICATE '(' . ')' ';'
   45                    | DUPLICATE '(' . assignment.expression ')' ';'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ')'                shift, and go to state 783
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 784
    constant                   go to state 253
    string.literal.list        go to state 254


state 762

   42 roundrobin.statement: ROUNDROBIN '(' . ')' ';'
   43                     | ROUNDROBIN '(' . argument.expression.list ')' ';'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ')'                shift, and go to state 785
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    argument.expression.list   go to state 786
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 546
    constant                   go to state 253
    string.literal.list        go to state 254


state 763

   41 join.statement: JOIN . roundrobin.statement

    ROUNDROBIN  shift, and go to state 730

    roundrobin.statement  go to state 787


state 764

   32 operator.splitjoin: SPLITJOIN lblock split.statement splitjoinPipeline.statement.list join.statement . rblock

    '}'  shift, and go to state 510

    rblock  go to state 788


state 765

   33 operator.splitjoin: SPLITJOIN lblock declaration.list split.statement splitjoinPipeline.statement.list . join.statement rblock
   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    JOIN               shift, and go to state 763
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    join.statement             go to state 789
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 766

   34 operator.splitjoin: SPLITJOIN lblock declaration.list statement.list split.statement . splitjoinPipeline.statement.list join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 790
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254


state 767

   31 operator.pipeline: PIPELINE lblock declaration.list splitjoinPipeline.statement.list rblock .

    $default  reduce using rule 31 (operator.pipeline)


state 768

   26 operator.file.writer: FILEWRITER '(' IDENTIFIER ')' operator.arguments ';' .

    $default  reduce using rule 26 (operator.file.writer)


state 769

  293 attrib: any.word '(' expression ')' .

    $default  reduce using rule 293 (attrib)


state 770

  400 iteration.statement: FOR '(' error ';' expression.opt ';' expression.opt . ')' $@23 costream.composite.statement

    ')'  shift, and go to state 791


state 771

  404 iteration.statement: FOR '(' expression.opt ';' error ';' expression.opt . ')' $@25 costream.composite.statement

    ')'  shift, and go to state 792


state 772

  402 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' error . ')' $@24 costream.composite.statement

    ')'  shift, and go to state 793


state 773

  398 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' expression.opt . ')' $@22 costream.composite.statement

    ')'  shift, and go to state 794


state 774

  396 iteration.statement: DO $@21 statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 795


state 775

  390 selection.statement: IF '(' expression ')' costream.composite.statement ELSE costream.composite.statement .

    $default  reduce using rule 390 (selection.statement)


state 776

   78 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock split.statement splitjoinPipeline.statement.list join.statement . rblock

    '}'  shift, and go to state 510

    rblock  go to state 796


state 777

   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add
   79 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list split.statement splitjoinPipeline.statement.list . join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    JOIN               shift, and go to state 763
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    join.statement             go to state 797
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 778

   80 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list statement.list split.statement . splitjoinPipeline.statement.list join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add                      go to state 699
    splitjoinPipeline.statement.list  go to state 798
    primary.expression                go to state 236
    postfix.expression                go to state 237
    unary.expression                  go to state 337
    unary.operator                    go to state 239
    cast.expression                   go to state 240
    multiplicative.expression         go to state 241
    additive.expression               go to state 242
    shift.expression                  go to state 243
    relational.expression             go to state 244
    equality.expression               go to state 245
    AND.expression                    go to state 246
    exclusive.OR.expression           go to state 247
    inclusive.OR.expression           go to state 248
    logical.AND.expression            go to state 249
    logical.OR.expression             go to state 250
    conditional.expression            go to state 338
    assignment.expression             go to state 339
    expression                        go to state 340
    expression.opt                    go to state 341
    statement                         go to state 701
    labeled.statement                 go to state 343
    compound.statement                go to state 344
    lblock                            go to state 345
    expression.statement              go to state 348
    selection.statement               go to state 349
    iteration.statement               go to state 350
    jump.statement                    go to state 351
    constant                          go to state 253
    string.literal.list               go to state 254


state 779

   82 postfix.expression: PIPELINE '(' IDENTIFIER ')' lblock declaration.list splitjoinPipeline.statement.list rblock .

    $default  reduce using rule 82 (postfix.expression)


state 780

   55 operator.selfdefine.body.window.list.opt: WINDOW '{' . operator.selfdefine.window.list '}'

    IDENTIFIER  shift, and go to state 799

    operator.selfdefine.window.list  go to state 800
    operator.selfdefine.window       go to state 801


state 781

   49 operator.selfdefine.body: lblock operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock .

    $default  reduce using rule 49 (operator.selfdefine.body)


state 782

   50 operator.selfdefine.body: lblock declaration.list operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt . rblock

    '}'  shift, and go to state 510

    rblock  go to state 802


state 783

   44 duplicate.statement: DUPLICATE '(' ')' . ';'

    ';'  shift, and go to state 803


state 784

   45 duplicate.statement: DUPLICATE '(' assignment.expression . ')' ';'

    ')'  shift, and go to state 804


state 785

   42 roundrobin.statement: ROUNDROBIN '(' ')' . ';'

    ';'  shift, and go to state 805


state 786

   43 roundrobin.statement: ROUNDROBIN '(' argument.expression.list . ')' ';'
   91 argument.expression.list: argument.expression.list . ',' assignment.expression

    ')'  shift, and go to state 806
    ','  shift, and go to state 646


state 787

   41 join.statement: JOIN roundrobin.statement .

    $default  reduce using rule 41 (join.statement)


state 788

   32 operator.splitjoin: SPLITJOIN lblock split.statement splitjoinPipeline.statement.list join.statement rblock .

    $default  reduce using rule 32 (operator.splitjoin)


state 789

   33 operator.splitjoin: SPLITJOIN lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement . rblock

    '}'  shift, and go to state 510

    rblock  go to state 807


state 790

   34 operator.splitjoin: SPLITJOIN lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list . join.statement rblock
   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    JOIN               shift, and go to state 763
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    join.statement             go to state 808
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 791

  400 iteration.statement: FOR '(' error ';' expression.opt ';' expression.opt ')' . $@23 costream.composite.statement

    $default  reduce using rule 399 ($@23)

    $@23  go to state 809


state 792

  404 iteration.statement: FOR '(' expression.opt ';' error ';' expression.opt ')' . $@25 costream.composite.statement

    $default  reduce using rule 403 ($@25)

    $@25  go to state 810


state 793

  402 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' error ')' . $@24 costream.composite.statement

    $default  reduce using rule 401 ($@24)

    $@24  go to state 811


state 794

  398 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' expression.opt ')' . $@22 costream.composite.statement

    $default  reduce using rule 397 ($@22)

    $@22  go to state 812


state 795

  396 iteration.statement: DO $@21 statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 396 (iteration.statement)


state 796

   78 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock split.statement splitjoinPipeline.statement.list join.statement rblock .

    $default  reduce using rule 78 (postfix.expression)


state 797

   79 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement . rblock

    '}'  shift, and go to state 510

    rblock  go to state 813


state 798

   39 splitjoinPipeline.statement.list: splitjoinPipeline.statement.list . statement
   40                                 | splitjoinPipeline.statement.list . operator.add
   80 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list . join.statement rblock

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    JOIN               shift, and go to state 763
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    operator.add               go to state 736
    join.statement             go to state 814
    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 340
    expression.opt             go to state 341
    statement                  go to state 737
    labeled.statement          go to state 343
    compound.statement         go to state 344
    lblock                     go to state 345
    expression.statement       go to state 348
    selection.statement        go to state 349
    iteration.statement        go to state 350
    jump.statement             go to state 351
    constant                   go to state 253
    string.literal.list        go to state 254


state 799

   58 operator.selfdefine.window: IDENTIFIER . window.type ';'

    TUMBLING     shift, and go to state 815
    SLIDING      shift, and go to state 816
    UNCERTAINTY  shift, and go to state 817

    window.type  go to state 818


state 800

   55 operator.selfdefine.body.window.list.opt: WINDOW '{' operator.selfdefine.window.list . '}'
   57 operator.selfdefine.window.list: operator.selfdefine.window.list . operator.selfdefine.window

    '}'         shift, and go to state 819
    IDENTIFIER  shift, and go to state 799

    operator.selfdefine.window  go to state 820


state 801

   56 operator.selfdefine.window.list: operator.selfdefine.window .

    $default  reduce using rule 56 (operator.selfdefine.window.list)


state 802

   50 operator.selfdefine.body: lblock declaration.list operator.selfdefine.body.init.opt operator.selfdefine.body.work operator.selfdefine.body.window.list.opt rblock .

    $default  reduce using rule 50 (operator.selfdefine.body)


state 803

   44 duplicate.statement: DUPLICATE '(' ')' ';' .

    $default  reduce using rule 44 (duplicate.statement)


state 804

   45 duplicate.statement: DUPLICATE '(' assignment.expression ')' . ';'

    ';'  shift, and go to state 821


state 805

   42 roundrobin.statement: ROUNDROBIN '(' ')' ';' .

    $default  reduce using rule 42 (roundrobin.statement)


state 806

   43 roundrobin.statement: ROUNDROBIN '(' argument.expression.list ')' . ';'

    ';'  shift, and go to state 822


state 807

   33 operator.splitjoin: SPLITJOIN lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock .

    $default  reduce using rule 33 (operator.splitjoin)


state 808

   34 operator.splitjoin: SPLITJOIN lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement . rblock

    '}'  shift, and go to state 510

    rblock  go to state 823


state 809

  400 iteration.statement: FOR '(' error ';' expression.opt ';' expression.opt ')' $@23 . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 824
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 810

  404 iteration.statement: FOR '(' expression.opt ';' error ';' expression.opt ')' $@25 . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 825
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 811

  402 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' error ')' $@24 . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 826
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 812

  398 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' expression.opt ')' $@22 . costream.composite.statement

    error              shift, and go to state 321
    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    '{'                shift, and go to state 322
    BREAK              shift, and go to state 324
    SWITCH             shift, and go to state 325
    CASE               shift, and go to state 326
    RETURN             shift, and go to state 327
    CONTINUE           shift, and go to state 328
    FOR                shift, and go to state 329
    DEFAULT            shift, and go to state 330
    GOTO               shift, and go to state 331
    SIZEOF             shift, and go to state 223
    DO                 shift, and go to state 332
    IF                 shift, and go to state 333
    WHILE              shift, and go to state 334
    ADD                shift, and go to state 449
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    FILEWRITER         shift, and go to state 450
    IDENTIFIER         shift, and go to state 335
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    TYPEDEFname        shift, and go to state 517
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    ';'  reduce using rule 152 (expression.opt)

    composite.body.operator       go to state 452
    operator.file.writer          go to state 453
    operator.add                  go to state 454
    primary.expression            go to state 236
    postfix.expression            go to state 237
    unary.expression              go to state 337
    unary.operator                go to state 239
    cast.expression               go to state 240
    multiplicative.expression     go to state 241
    additive.expression           go to state 242
    shift.expression              go to state 243
    relational.expression         go to state 244
    equality.expression           go to state 245
    AND.expression                go to state 246
    exclusive.OR.expression       go to state 247
    inclusive.OR.expression       go to state 248
    logical.AND.expression        go to state 249
    logical.OR.expression         go to state 250
    conditional.expression        go to state 338
    assignment.expression         go to state 339
    expression                    go to state 340
    expression.opt                go to state 341
    costream.composite.statement  go to state 827
    statement                     go to state 456
    labeled.statement             go to state 343
    compound.statement            go to state 344
    lblock                        go to state 345
    expression.statement          go to state 348
    selection.statement           go to state 349
    iteration.statement           go to state 350
    jump.statement                go to state 351
    constant                      go to state 253
    string.literal.list           go to state 254


state 813

   79 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list split.statement splitjoinPipeline.statement.list join.statement rblock .

    $default  reduce using rule 79 (postfix.expression)


state 814

   80 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement . rblock

    '}'  shift, and go to state 510

    rblock  go to state 828


state 815

   60 window.type: TUMBLING . '(' ')'
   62            | TUMBLING . '(' expression ')'

    '('  shift, and go to state 829


state 816

   59 window.type: SLIDING . '(' ')'
   61            | SLIDING . '(' expression ')'

    '('  shift, and go to state 830


state 817

   63 window.type: UNCERTAINTY . '(' ')'

    '('  shift, and go to state 831


state 818

   58 operator.selfdefine.window: IDENTIFIER window.type . ';'

    ';'  shift, and go to state 832


state 819

   55 operator.selfdefine.body.window.list.opt: WINDOW '{' operator.selfdefine.window.list '}' .

    $default  reduce using rule 55 (operator.selfdefine.body.window.list.opt)


state 820

   57 operator.selfdefine.window.list: operator.selfdefine.window.list operator.selfdefine.window .

    $default  reduce using rule 57 (operator.selfdefine.window.list)


state 821

   45 duplicate.statement: DUPLICATE '(' assignment.expression ')' ';' .

    $default  reduce using rule 45 (duplicate.statement)


state 822

   43 roundrobin.statement: ROUNDROBIN '(' argument.expression.list ')' ';' .

    $default  reduce using rule 43 (roundrobin.statement)


state 823

   34 operator.splitjoin: SPLITJOIN lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock .

    $default  reduce using rule 34 (operator.splitjoin)


state 824

  400 iteration.statement: FOR '(' error ';' expression.opt ';' expression.opt ')' $@23 costream.composite.statement .

    $default  reduce using rule 400 (iteration.statement)


state 825

  404 iteration.statement: FOR '(' expression.opt ';' error ';' expression.opt ')' $@25 costream.composite.statement .

    $default  reduce using rule 404 (iteration.statement)


state 826

  402 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' error ')' $@24 costream.composite.statement .

    $default  reduce using rule 402 (iteration.statement)


state 827

  398 iteration.statement: FOR '(' expression.opt ';' expression.opt ';' expression.opt ')' $@22 costream.composite.statement .

    $default  reduce using rule 398 (iteration.statement)


state 828

   80 postfix.expression: SPLITJOIN '(' IDENTIFIER ')' lblock declaration.list statement.list split.statement splitjoinPipeline.statement.list join.statement rblock .

    $default  reduce using rule 80 (postfix.expression)


state 829

   60 window.type: TUMBLING '(' . ')'
   62            | TUMBLING '(' . expression ')'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ')'                shift, and go to state 833
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 834
    constant                   go to state 253
    string.literal.list        go to state 254


state 830

   59 window.type: SLIDING '(' . ')'
   61            | SLIDING '(' . expression ')'

    '&'                shift, and go to state 215
    '*'                shift, and go to state 216
    '+'                shift, and go to state 217
    '-'                shift, and go to state 218
    '~'                shift, and go to state 219
    '!'                shift, and go to state 220
    '('                shift, and go to state 221
    ')'                shift, and go to state 835
    SIZEOF             shift, and go to state 223
    SPLITJOIN          shift, and go to state 224
    PIPELINE           shift, and go to state 225
    FILEREADER         shift, and go to state 226
    IDENTIFIER         shift, and go to state 227
    STRINGliteral      shift, and go to state 228
    FLOATINGconstant   shift, and go to state 229
    INTEGERconstant    shift, and go to state 230
    OCTALconstant      shift, and go to state 231
    HEXconstant        shift, and go to state 232
    CHARACTERconstant  shift, and go to state 233
    ICR                shift, and go to state 234
    DECR               shift, and go to state 235

    primary.expression         go to state 236
    postfix.expression         go to state 237
    unary.expression           go to state 337
    unary.operator             go to state 239
    cast.expression            go to state 240
    multiplicative.expression  go to state 241
    additive.expression        go to state 242
    shift.expression           go to state 243
    relational.expression      go to state 244
    equality.expression        go to state 245
    AND.expression             go to state 246
    exclusive.OR.expression    go to state 247
    inclusive.OR.expression    go to state 248
    logical.AND.expression     go to state 249
    logical.OR.expression      go to state 250
    conditional.expression     go to state 338
    assignment.expression      go to state 339
    expression                 go to state 836
    constant                   go to state 253
    string.literal.list        go to state 254


state 831

   63 window.type: UNCERTAINTY '(' . ')'

    ')'  shift, and go to state 837


state 832

   58 operator.selfdefine.window: IDENTIFIER window.type ';' .

    $default  reduce using rule 58 (operator.selfdefine.window)


state 833

   60 window.type: TUMBLING '(' ')' .

    $default  reduce using rule 60 (window.type)


state 834

   62 window.type: TUMBLING '(' expression . ')'
  150 expression: expression . ',' assignment.expression

    ')'  shift, and go to state 838
    ','  shift, and go to state 508


state 835

   59 window.type: SLIDING '(' ')' .

    $default  reduce using rule 59 (window.type)


state 836

   61 window.type: SLIDING '(' expression . ')'
  150 expression: expression . ',' assignment.expression

    ')'  shift, and go to state 839
    ','  shift, and go to state 508


state 837

   63 window.type: UNCERTAINTY '(' ')' .

    $default  reduce using rule 63 (window.type)


state 838

   62 window.type: TUMBLING '(' expression ')' .

    $default  reduce using rule 62 (window.type)


state 839

   61 window.type: SLIDING '(' expression ')' .

    $default  reduce using rule 61 (window.type)
